===== Git History Slicing Toolkit =====
   ______ _____  __ _                  
  / ____// ___/ / /(_)_____ ___   _____
 / /     \__ \ / // // ___// _ \ / ___/
/ /___  ___/ // // // /__ /  __// /
\____/ /____//_//_/ \___/ \___//_/

=======================================
[DEBUG] Original |H|: 504
[OUTPUT] Computing FUNC & COMP set ... 
[OUTPUT] Running coverage analysis ...
[DEBUG] FULL
[DEBUG] 224 classes have been analyzed.
[DEBUG] Analyzing package: org/apache/commons/lang3/time ...
[DEBUG] 	File: FastDateParser.java ...
[DEBUG] 	File: DateFormatUtils.java ...
[DEBUG] 	File: DateUtils.java ...
[DEBUG] 	File: StopWatch.java ...
[DEBUG] 	File: DurationFormatUtils.java ...
[DEBUG] 	File: FastDatePrinter.java ...
[DEBUG] 	File: FormatCache.java ...
[DEBUG] 	File: FastDateFormat.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/reflect ...
[DEBUG] 	File: TypeLiteral.java ...
[DEBUG] 	File: ConstructorUtils.java ...
[DEBUG] 	File: FieldUtils.java ...
[DEBUG] 	File: TypeUtils.java ...
[DEBUG] 	File: InheritanceUtils.java ...
[DEBUG] 	File: MemberUtils.java ...
[DEBUG] 	File: MethodUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/math ...
[DEBUG] 	File: Fraction.java ...
[DEBUG] 	File: NumberUtils.java ...
[DEBUG] 	File: IEEE754rUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/exception ...
[DEBUG] 	File: ContextedRuntimeException.java ...
[DEBUG] 	File: ContextedException.java ...
[DEBUG] 	File: ExceptionUtils.java ...
[DEBUG] 	File: CloneFailedException.java ...
[DEBUG] 	File: DefaultExceptionContext.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/event ...
[DEBUG] 	File: EventUtils.java ...
[DEBUG] 	File: EventListenerSupport.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/tuple ...
[DEBUG] 	File: MutablePair.java ...
[DEBUG] 	File: MutableTriple.java ...
[DEBUG] 	File: ImmutablePair.java ...
[DEBUG] 	File: Triple.java ...
[DEBUG] 	File: Pair.java ...
[DEBUG] 	File: ImmutableTriple.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/builder ...
[DEBUG] 	File: EqualsBuilder.java ...
[DEBUG] 	File: Diff.java ...
[DEBUG] 	File: ReflectionToStringBuilder.java ...
[DEBUG] 	File: RecursiveToStringStyle.java ...
[DEBUG] 	File: HashCodeBuilder.java ...
[DEBUG] 	File: StandardToStringStyle.java ...
[DEBUG] 	File: ToStringBuilder.java ...
[DEBUG] 	File: ToStringStyle.java ...
[DEBUG] 	File: CompareToBuilder.java ...
[DEBUG] 	File: DiffBuilder.java ...
[DEBUG] 	File: MultilineRecursiveToStringStyle.java ...
[DEBUG] 	File: DiffResult.java ...
[DEBUG] 	File: IDKey.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/concurrent ...
[DEBUG] 	File: CallableBackgroundInitializer.java ...
[DEBUG] 	File: TimedSemaphore.java ...
[DEBUG] 	File: MultiBackgroundInitializer.java ...
[DEBUG] 	File: ConstantInitializer.java ...
[DEBUG] 	File: AtomicInitializer.java ...
[DEBUG] 	File: BackgroundInitializer.java ...
[DEBUG] 	File: ConcurrentException.java ...
[DEBUG] 	File: ConcurrentRuntimeException.java ...
[DEBUG] 	File: ConcurrentUtils.java ...
[DEBUG] 	File: LazyInitializer.java ...
[DEBUG] 	File: BasicThreadFactory.java ...
[DEBUG] 	File: AtomicSafeInitializer.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3 ...
[DEBUG] 	File: JavaVersion.java ...
[DEBUG] 	File: Validate.java ...
[DEBUG] 	File: BitField.java ...
[DEBUG] 	File: RandomUtils.java ...
[DEBUG] 	File: ObjectUtils.java ...
[DEBUG] 	File: Range.java ...
[DEBUG] 	File: RandomStringUtils.java ...
[DEBUG] 	File: LocaleUtils.java ...
[DEBUG] 	File: ClassUtils.java ...
[DEBUG] 	File: StringUtils.java ...
[DEBUG] 	File: BooleanUtils.java ...
[DEBUG] 	File: CharSetUtils.java ...
[DEBUG] 	File: AnnotationUtils.java ...
[DEBUG] 	File: StringEscapeUtils.java ...
[DEBUG] 	File: CharUtils.java ...
[DEBUG] 	File: CharSet.java ...
[DEBUG] 	File: ArrayUtils.java ...
[DEBUG] 	File: NotImplementedException.java ...
[DEBUG] 	File: SerializationException.java ...
[DEBUG] 	File: SerializationUtils.java ...
[DEBUG] 	File: ClassPathUtils.java ...
[DEBUG] 	File: CharSequenceUtils.java ...
[DEBUG] 	File: CharEncoding.java ...
[DEBUG] 	File: CharRange.java ...
[DEBUG] 	File: EnumUtils.java ...
[DEBUG] 	File: Conversion.java ...
[DEBUG] 	File: SystemUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/text ...
[DEBUG] 	File: StrSubstitutor.java ...
[DEBUG] 	File: ExtendedMessageFormat.java ...
[DEBUG] 	File: StrLookup.java ...
[DEBUG] 	File: FormattableUtils.java ...
[DEBUG] 	File: CompositeFormat.java ...
[DEBUG] 	File: StrTokenizer.java ...
[DEBUG] 	File: StrMatcher.java ...
[DEBUG] 	File: WordUtils.java ...
[DEBUG] 	File: StrBuilder.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/text/translate ...
[DEBUG] 	File: EntityArrays.java ...
[DEBUG] 	File: NumericEntityEscaper.java ...
[DEBUG] 	File: AggregateTranslator.java ...
[DEBUG] 	File: UnicodeUnescaper.java ...
[DEBUG] 	File: UnicodeUnpairedSurrogateRemover.java ...
[DEBUG] 	File: CodePointTranslator.java ...
[DEBUG] 	File: NumericEntityUnescaper.java ...
[DEBUG] 	File: LookupTranslator.java ...
[DEBUG] 	File: OctalUnescaper.java ...
[DEBUG] 	File: CharSequenceTranslator.java ...
[DEBUG] 	File: UnicodeEscaper.java ...
[DEBUG] 	File: JavaUnicodeEscaper.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/mutable ...
[DEBUG] 	File: MutableObject.java ...
[DEBUG] 	File: MutableByte.java ...
[DEBUG] 	File: MutableLong.java ...
[DEBUG] 	File: MutableBoolean.java ...
[DEBUG] 	File: MutableInt.java ...
[DEBUG] 	File: MutableFloat.java ...
[DEBUG] 	File: MutableShort.java ...
[DEBUG] 	File: MutableDouble.java ...
[DEBUG] Drawing static call graph ...
[OUTPUT] Scanning class files ...
[DEBUG] 0 Reading class file: StrMatcher$StringMatcher.class
[DEBUG] 1 Reading class file: StrMatcher$TrimMatcher.class
[DEBUG] 2 Reading class file: FormatFactory.class
[DEBUG] 3 Reading class file: ExtendedMessageFormat.class
[DEBUG] 4 Reading class file: StrBuilder$StrBuilderReader.class
[DEBUG] 5 Reading class file: StrTokenizer.class
[DEBUG] 6 Reading class file: WordUtils.class
[DEBUG] 7 Reading class file: StrMatcher$NoMatcher.class
[DEBUG] 8 Reading class file: StrSubstitutor.class
[DEBUG] 9 Reading class file: LookupTranslator.class
[DEBUG] 10 Reading class file: AggregateTranslator.class
[DEBUG] 11 Reading class file: UnicodeUnpairedSurrogateRemover.class
[DEBUG] 12 Reading class file: NumericEntityUnescaper$OPTION.class
[DEBUG] 13 Reading class file: CharSequenceTranslator.class
[DEBUG] 14 Reading class file: UnicodeEscaper.class
[DEBUG] 15 Reading class file: NumericEntityUnescaper.class
[DEBUG] 16 Reading class file: EntityArrays.class
[DEBUG] 17 Reading class file: CodePointTranslator.class
[DEBUG] 18 Reading class file: OctalUnescaper.class
[DEBUG] 19 Reading class file: NumericEntityEscaper.class
[DEBUG] 20 Reading class file: JavaUnicodeEscaper.class
[DEBUG] 21 Reading class file: UnicodeUnescaper.class
[DEBUG] 22 Reading class file: StrLookup.class
[DEBUG] 23 Reading class file: FormattableUtils.class
[DEBUG] 24 Reading class file: StrLookup$MapStrLookup.class
[DEBUG] 25 Reading class file: StrMatcher.class
[DEBUG] 26 Reading class file: StrBuilder.class
[DEBUG] 27 Reading class file: CompositeFormat.class
[DEBUG] 28 Reading class file: StrBuilder$StrBuilderTokenizer.class
[DEBUG] 29 Reading class file: StrMatcher$CharMatcher.class
[DEBUG] 30 Reading class file: StrBuilder$StrBuilderWriter.class
[DEBUG] 31 Reading class file: StrMatcher$CharSetMatcher.class
[DEBUG] 32 Reading class file: CharRange.class
[DEBUG] 33 Reading class file: ExceptionUtils.class
[DEBUG] 34 Reading class file: ContextedRuntimeException.class
[DEBUG] 35 Reading class file: CloneFailedException.class
[DEBUG] 36 Reading class file: ContextedException.class
[DEBUG] 37 Reading class file: DefaultExceptionContext.class
[DEBUG] 38 Reading class file: ExceptionContext.class
[DEBUG] 39 Reading class file: BitField.class
[DEBUG] 40 Reading class file: Validate.class
[DEBUG] 41 Reading class file: SerializationException.class
[DEBUG] 42 Reading class file: CharUtils.class
[DEBUG] 43 Reading class file: EventUtils.class
[DEBUG] 44 Reading class file: EventListenerSupport.class
[DEBUG] 45 Reading class file: EventUtils$EventBindingInvocationHandler.class
[DEBUG] 46 Reading class file: EventListenerSupport$ProxyInvocationHandler.class
[DEBUG] 47 Reading class file: ArrayUtils.class
[DEBUG] 48 Reading class file: CharRange$1.class
[DEBUG] 49 Reading class file: FastDatePrinter$TwoDigitYearField.class
[DEBUG] 50 Reading class file: FastDateFormat$1.class
[DEBUG] 51 Reading class file: FastDatePrinter$TwentyFourHourField.class
[DEBUG] 52 Reading class file: FastDateParser$2.class
[DEBUG] 53 Reading class file: FastDateParser$1.class
[DEBUG] 54 Reading class file: FastDateParser$ISO8601TimeZoneStrategy.class
[DEBUG] 55 Reading class file: FastDatePrinter$TwoDigitMonthField.class
[DEBUG] 56 Reading class file: DatePrinter.class
[DEBUG] 57 Reading class file: FastDatePrinter$TimeZoneNumberRule.class
[DEBUG] 58 Reading class file: FastDateFormat.class
[DEBUG] 59 Reading class file: FastDatePrinter.class
[DEBUG] 60 Reading class file: StopWatch$State.class
[DEBUG] 61 Reading class file: StopWatch$State$2.class
[DEBUG] 62 Reading class file: FastDatePrinter$NumberRule.class
[DEBUG] 63 Reading class file: FastDatePrinter$TwelveHourField.class
[DEBUG] 64 Reading class file: FastDatePrinter$PaddedNumberField.class
[DEBUG] 65 Reading class file: FastDateParser$CopyQuotedStrategy.class
[DEBUG] 66 Reading class file: DateParser.class
[DEBUG] 67 Reading class file: FastDatePrinter$TextField.class
[DEBUG] 68 Reading class file: FastDatePrinter$UnpaddedMonthField.class
[DEBUG] 69 Reading class file: FastDatePrinter$Rule.class
[DEBUG] 70 Reading class file: FastDateParser$TimeZoneStrategy.class
[DEBUG] 71 Reading class file: FormatCache.class
[DEBUG] 72 Reading class file: StopWatch$1.class
[DEBUG] 73 Reading class file: FastDatePrinter$TimeZoneNameRule.class
[DEBUG] 74 Reading class file: FastDateParser$Strategy.class
[DEBUG] 75 Reading class file: FastDateParser$3.class
[DEBUG] 76 Reading class file: FastDateParser$NumberStrategy.class
[DEBUG] 77 Reading class file: FastDatePrinter$TwoDigitNumberField.class
[DEBUG] 78 Reading class file: FastDatePrinter$CharacterLiteral.class
[DEBUG] 79 Reading class file: FastDatePrinter$StringLiteral.class
[DEBUG] 80 Reading class file: StopWatch$State$1.class
[DEBUG] 81 Reading class file: DateUtils$ModifyType.class
[DEBUG] 82 Reading class file: FastDateParser.class
[DEBUG] 83 Reading class file: FormatCache$MultipartKey.class
[DEBUG] 84 Reading class file: StopWatch.class
[DEBUG] 85 Reading class file: FastDateParser$CaseInsensitiveTextStrategy.class
[DEBUG] 86 Reading class file: DateUtils.class
[DEBUG] 87 Reading class file: FastDatePrinter$Iso8601_Rule.class
[DEBUG] 88 Reading class file: StopWatch$State$4.class
[DEBUG] 89 Reading class file: FastDateParser$4.class
[DEBUG] 90 Reading class file: DateUtils$DateIterator.class
[DEBUG] 91 Reading class file: DurationFormatUtils$Token.class
[DEBUG] 92 Reading class file: DurationFormatUtils.class
[DEBUG] 93 Reading class file: FastDatePrinter$UnpaddedNumberField.class
[DEBUG] 94 Reading class file: FastDatePrinter$TimeZoneDisplayKey.class
[DEBUG] 95 Reading class file: DateFormatUtils.class
[DEBUG] 96 Reading class file: StopWatch$State$3.class
[DEBUG] 97 Reading class file: StopWatch$SplitState.class
[DEBUG] 98 Reading class file: InheritanceUtils.class
[DEBUG] 99 Reading class file: TypeUtils$WildcardTypeImpl.class
[DEBUG] 100 Reading class file: TypeUtils.class
[DEBUG] 101 Reading class file: TypeUtils$WildcardTypeBuilder.class
[DEBUG] 102 Reading class file: Typed.class
[DEBUG] 103 Reading class file: TypeUtils$ParameterizedTypeImpl.class
[DEBUG] 104 Reading class file: ConstructorUtils.class
[DEBUG] 105 Reading class file: TypeUtils$GenericArrayTypeImpl.class
[DEBUG] 106 Reading class file: MethodUtils.class
[DEBUG] 107 Reading class file: TypeUtils$1.class
[DEBUG] 108 Reading class file: MemberUtils.class
[DEBUG] 109 Reading class file: TypeLiteral.class
[DEBUG] 110 Reading class file: FieldUtils.class
[DEBUG] 111 Reading class file: DiffBuilder$12.class
[DEBUG] 112 Reading class file: DiffBuilder$7.class
[DEBUG] 113 Reading class file: ToStringStyle$MultiLineToStringStyle.class
[DEBUG] 114 Reading class file: DiffBuilder$1.class
[DEBUG] 115 Reading class file: DiffBuilder$3.class
[DEBUG] 116 Reading class file: DiffBuilder$14.class
[DEBUG] 117 Reading class file: HashCodeBuilder.class
[DEBUG] 118 Reading class file: ToStringStyle$ShortPrefixToStringStyle.class
[DEBUG] 119 Reading class file: RecursiveToStringStyle.class
[DEBUG] 120 Reading class file: DiffBuilder$9.class
[DEBUG] 121 Reading class file: ToStringStyle$NoClassNameToStringStyle.class
[DEBUG] 122 Reading class file: ReflectionToStringBuilder.class
[DEBUG] 123 Reading class file: ToStringStyle$SimpleToStringStyle.class
[DEBUG] 124 Reading class file: Builder.class
[DEBUG] 125 Reading class file: DiffBuilder$8.class
[DEBUG] 126 Reading class file: DiffBuilder$16.class
[DEBUG] 127 Reading class file: ToStringStyle$NoFieldNameToStringStyle.class
[DEBUG] 128 Reading class file: ToStringStyle$DefaultToStringStyle.class
[DEBUG] 129 Reading class file: StandardToStringStyle.class
[DEBUG] 130 Reading class file: IDKey.class
[DEBUG] 131 Reading class file: DiffBuilder$17.class
[DEBUG] 132 Reading class file: Diffable.class
[DEBUG] 133 Reading class file: ToStringBuilder.class
[DEBUG] 134 Reading class file: DiffResult.class
[DEBUG] 135 Reading class file: CompareToBuilder.class
[DEBUG] 136 Reading class file: DiffBuilder$2.class
[DEBUG] 137 Reading class file: DiffBuilder$11.class
[DEBUG] 138 Reading class file: DiffBuilder.class
[DEBUG] 139 Reading class file: Diff.class
[DEBUG] 140 Reading class file: ToStringStyle.class
[DEBUG] 141 Reading class file: EqualsBuilder.class
[DEBUG] 142 Reading class file: MultilineRecursiveToStringStyle.class
[DEBUG] 143 Reading class file: DiffBuilder$6.class
[DEBUG] 144 Reading class file: DiffBuilder$13.class
[DEBUG] 145 Reading class file: DiffBuilder$4.class
[DEBUG] 146 Reading class file: DiffBuilder$10.class
[DEBUG] 147 Reading class file: ToStringStyle$JsonToStringStyle.class
[DEBUG] 148 Reading class file: DiffBuilder$18.class
[DEBUG] 149 Reading class file: DiffBuilder$5.class
[DEBUG] 150 Reading class file: DiffBuilder$15.class
[DEBUG] 151 Reading class file: StringEscapeUtils.class
[DEBUG] 152 Reading class file: StringEscapeUtils$CsvEscaper.class
[DEBUG] 153 Reading class file: StringUtils.class
[DEBUG] 154 Reading class file: ImmutableTriple.class
[DEBUG] 155 Reading class file: MutableTriple.class
[DEBUG] 156 Reading class file: MutablePair.class
[DEBUG] 157 Reading class file: Pair.class
[DEBUG] 158 Reading class file: Triple.class
[DEBUG] 159 Reading class file: ImmutablePair.class
[DEBUG] 160 Reading class file: SystemUtils.class
[DEBUG] 161 Reading class file: MutableLong.class
[DEBUG] 162 Reading class file: MutableBoolean.class
[DEBUG] 163 Reading class file: MutableFloat.class
[DEBUG] 164 Reading class file: MutableShort.class
[DEBUG] 165 Reading class file: MutableObject.class
[DEBUG] 166 Reading class file: MutableInt.class
[DEBUG] 167 Reading class file: MutableDouble.class
[DEBUG] 168 Reading class file: Mutable.class
[DEBUG] 169 Reading class file: MutableByte.class
[DEBUG] 170 Reading class file: ObjectUtils.class
[DEBUG] 171 Reading class file: CharEncoding.class
[DEBUG] 172 Reading class file: LocaleUtils$SyncAvoid.class
[DEBUG] 173 Reading class file: JavaVersion.class
[DEBUG] 174 Reading class file: CharSequenceUtils.class
[DEBUG] 175 Reading class file: SerializationUtils$ClassLoaderAwareObjectInputStream.class
[DEBUG] 176 Reading class file: Fraction.class
[DEBUG] 177 Reading class file: NumberUtils.class
[DEBUG] 178 Reading class file: IEEE754rUtils.class
[DEBUG] 179 Reading class file: SerializationUtils.class
[DEBUG] 180 Reading class file: StringEscapeUtils$CsvUnescaper.class
[DEBUG] 181 Reading class file: LocaleUtils.class
[DEBUG] 182 Reading class file: RandomStringUtils.class
[DEBUG] 183 Reading class file: ObjectUtils$Null.class
[DEBUG] 184 Reading class file: BooleanUtils.class
[DEBUG] 185 Reading class file: ClassUtils$1.class
[DEBUG] 186 Reading class file: ClassUtils$2$1.class
[DEBUG] 187 Reading class file: ClassUtils$Interfaces.class
[DEBUG] 188 Reading class file: ClassPathUtils.class
[DEBUG] 189 Reading class file: AnnotationUtils$1.class
[DEBUG] 190 Reading class file: RandomUtils.class
[DEBUG] 191 Reading class file: ClassUtils$2.class
[DEBUG] 192 Reading class file: ArrayUtils$1.class
[DEBUG] 193 Reading class file: EnumUtils.class
[DEBUG] 194 Reading class file: CharSet.class
[DEBUG] 195 Reading class file: CharRange$CharacterIterator.class
[DEBUG] 196 Reading class file: Conversion.class
[DEBUG] 197 Reading class file: Range$ComparableComparator.class
[DEBUG] 198 Reading class file: AtomicSafeInitializer.class
[DEBUG] 199 Reading class file: CallableBackgroundInitializer.class
[DEBUG] 200 Reading class file: BackgroundInitializer$InitializationTask.class
[DEBUG] 201 Reading class file: BasicThreadFactory$1.class
[DEBUG] 202 Reading class file: TimedSemaphore$1.class
[DEBUG] 203 Reading class file: MultiBackgroundInitializer.class
[DEBUG] 204 Reading class file: AtomicInitializer.class
[DEBUG] 205 Reading class file: TimedSemaphore.class
[DEBUG] 206 Reading class file: BasicThreadFactory$Builder.class
[DEBUG] 207 Reading class file: LazyInitializer.class
[DEBUG] 208 Reading class file: MultiBackgroundInitializer$1.class
[DEBUG] 209 Reading class file: ConcurrentException.class
[DEBUG] 210 Reading class file: ConcurrentUtils.class
[DEBUG] 211 Reading class file: ConcurrentRuntimeException.class
[DEBUG] 212 Reading class file: BasicThreadFactory.class
[DEBUG] 213 Reading class file: ConcurrentUtils$ConstantFuture.class
[DEBUG] 214 Reading class file: BackgroundInitializer.class
[DEBUG] 215 Reading class file: ConstantInitializer.class
[DEBUG] 216 Reading class file: ConcurrentInitializer.class
[DEBUG] 217 Reading class file: MultiBackgroundInitializer$MultiBackgroundInitializerResults.class
[DEBUG] 218 Reading class file: ClassUtils$1$1.class
[DEBUG] 219 Reading class file: Range.class
[DEBUG] 220 Reading class file: NotImplementedException.class
[DEBUG] 221 Reading class file: CharSetUtils.class
[DEBUG] 222 Reading class file: AnnotationUtils.class
[DEBUG] 223 Reading class file: ClassUtils.class
[DEBUG] 1: Done: org.apache.commons.lang3.ClassUtils
[DEBUG] 2: Done: org.apache.commons.lang3.StringUtils
[DEBUG] 3: Done: org.apache.commons.lang3.JavaVersion
[DEBUG] 4: Done: org.apache.commons.lang3.ArrayUtils
[DEBUG] 5: Done: org.apache.commons.lang3.ClassUtils.Interfaces
[DEBUG] 6: Done: org.apache.commons.lang3.SystemUtils
[DEBUG] 7: Done: org.apache.commons.lang3.ObjectUtils
[DEBUG] 8: Done: org.apache.commons.lang3.CharSequenceUtils
[DEBUG] 9: Done: org.apache.commons.lang3.CharUtils
[DEBUG] 10: Done: org.apache.commons.lang3.builder.EqualsBuilder
[DEBUG] 11: Done: org.apache.commons.lang3.BooleanUtils
[DEBUG] 12: Done: org.apache.commons.lang3.mutable.MutableInt
[DEBUG] 13: Done: org.apache.commons.lang3.builder.HashCodeBuilder
[DEBUG] 14: Done: org.apache.commons.lang3.builder.ToStringBuilder
[DEBUG] 15: Done: org.apache.commons.lang3.math.NumberUtils
[DEBUG] 16: Done: org.apache.commons.lang3.builder.ToStringStyle
[DEBUG] 17: Done: org.apache.commons.lang3.exception.CloneFailedException
[DEBUG] 18: Done: org.apache.commons.lang3.Validate
[DEBUG] 19: Done: org.apache.commons.lang3.ObjectUtils.Null
[DEBUG] 20: Done: org.apache.commons.lang3.text.StrBuilder
[DEBUG] 21: Done: org.apache.commons.lang3.tuple.Pair
[DEBUG] 22: Done: org.apache.commons.lang3.builder.Builder
[DEBUG] 23: Done: org.apache.commons.lang3.builder.IDKey
[DEBUG] 24: Done: org.apache.commons.lang3.builder.ReflectionToStringBuilder
[DEBUG] 25: Done: org.apache.commons.lang3.mutable.Mutable
[DEBUG] 26: Done: org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle
[DEBUG] 27: Done: org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle
[DEBUG] 28: Done: org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle
[DEBUG] 29: Done: org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle
[DEBUG] 30: Done: org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle
[DEBUG] 31: Done: org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle
[DEBUG] 32: Done: org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle
[DEBUG] 33: Done: org.apache.commons.lang3.text.StrMatcher
[DEBUG] 34: Done: org.apache.commons.lang3.text.StrBuilder.StrBuilderReader
[DEBUG] 35: Done: org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer
[DEBUG] 36: Done: org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter
[DEBUG] 37: Done: org.apache.commons.lang3.tuple.ImmutablePair
[DEBUG] 38: Done: org.apache.commons.lang3.builder.CompareToBuilder
[DEBUG] 39: Done: org.apache.commons.lang3.text.StrMatcher.TrimMatcher
[DEBUG] 40: Done: org.apache.commons.lang3.text.StrMatcher.CharSetMatcher
[DEBUG] 41: Done: org.apache.commons.lang3.text.StrMatcher.CharMatcher
[DEBUG] 42: Done: org.apache.commons.lang3.text.StrMatcher.StringMatcher
[DEBUG] 43: Done: org.apache.commons.lang3.text.StrMatcher.NoMatcher
[DEBUG] 44: Done: org.apache.commons.lang3.text.StrTokenizer
[DEBUG] Adding to touch set ...
[DEBUG] Test: org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)
Test: org.apache.commons.lang3.ClassUtils.wrapperPrimitiveMap : Map<Class<?>, Class<?>>
Test: org.apache.commons.lang3.StringUtils
Test: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int)
Test: org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR : String
Test: org.apache.commons.lang3.ClassUtils.primitiveWrapperMap : Map<Class<?>, Class<?>>
Test: org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR : String
Test: org.apache.commons.lang3.StringUtils.join(Object[],char)
Test: org.apache.commons.lang3.StringUtils.join(Object[],char,int,int)
Test: org.apache.commons.lang3.ClassUtils
Test: org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char)
Test: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int)
Comp: org.apache.commons.lang3.tuple.Pair
Comp: org.apache.commons.lang3.exception.CloneFailedException
Comp: org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle
Comp: org.apache.commons.lang3.tuple.ImmutablePair
Comp: org.apache.commons.lang3.text.StrMatcher.TrimMatcher
Comp: org.apache.commons.lang3.ClassUtils.Interfaces
Comp: org.apache.commons.lang3.ClassUtils.wrapperPrimitiveMap : Map
Comp: org.apache.commons.lang3.ClassUtils.primitiveWrapperMap : Map
Comp: long[]
Comp: org.apache.commons.lang3.mutable.Mutable
Comp: org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle
Comp: org.apache.commons.lang3.ObjectUtils
Comp: org.apache.commons.lang3.ClassUtils.Interfaces[]
Comp: org.apache.commons.lang3.CharSequenceUtils
Comp: double[]
Comp: org.apache.commons.lang3.builder.CompareToBuilder
Comp: org.apache.commons.lang3.JavaVersion[]
Comp: org.apache.commons.lang3.builder.IDKey
Comp: org.apache.commons.lang3.BooleanUtils
Comp: org.apache.commons.lang3.StringUtils.countMatches(CharSequence,CharSequence)
Comp: org.apache.commons.lang3.builder.HashCodeBuilder
Comp: org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle
Comp: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class,int)
Comp: org.apache.commons.lang3.ArrayUtils
Comp: org.apache.commons.lang3.math.NumberUtils
Comp: org.apache.commons.lang3.text.StrMatcher.CharSetMatcher
Comp: org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR : String
Comp: org.apache.commons.lang3.builder.ToStringStyle
Comp: org.apache.commons.lang3.CharUtils
Comp: float[]
Comp: org.apache.commons.lang3.text.StrTokenizer
Comp: org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle
Comp: char[]
Comp: org.apache.commons.lang3.StringUtils.join(Object[],char,int,int)
Comp: int[]
Comp: org.apache.commons.lang3.text.StrMatcher
Comp: org.apache.commons.lang3.text.StrMatcher.CharMatcher
Comp: org.apache.commons.lang3.builder.Builder
Comp: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)
Comp: org.apache.commons.lang3.StringUtils.join(Object[],char)
Comp: org.apache.commons.lang3.builder.ToStringBuilder
Comp: org.apache.commons.lang3.text.StrMatcher.StringMatcher
Comp: org.apache.commons.lang3.JavaVersion
Comp: org.apache.commons.lang3.text.StrBuilder.StrBuilderReader
Comp: org.apache.commons.lang3.SystemUtils
Comp: org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer
Comp: org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR : String
Comp: org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle
Comp: org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)
Comp: boolean[]
Comp: org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle
Comp: org.apache.commons.lang3.text.StrMatcher.NoMatcher
Comp: short[]
Comp: org.apache.commons.lang3.builder.EqualsBuilder
Comp: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int)
Comp: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Comp: org.apache.commons.lang3.mutable.MutableInt
Comp: org.apache.commons.lang3.Validate
Comp: org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char)
Comp: org.apache.commons.lang3.ObjectUtils.Null
Comp: org.apache.commons.lang3.ClassUtils
Comp: org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle
Comp: org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter
Comp: org.apache.commons.lang3.text.StrBuilder
Comp: org.apache.commons.lang3.StringUtils
Comp: byte[]


[OUTPUT] Initial |S| = 504
[OUTPUT] Analysing Commits ... 
[DEBUG] === Inspecting commit: 229cadcb : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 59a95402 : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0320e026 : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: a7742da0 : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String) : (819, 838) --> (811, 830)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : (773, 808) --> (777, 800)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : (810, 817) --> (802, 809)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.VALID_TZ : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (752, 752)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.GMT_OPTION : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (749, 749)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (748, 748)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TZ_DATABASE : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (751, 751)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.validTimeZoneChars : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (749, 749)
[DEBUG] 
[DEBUG] === Inspecting commit: 4c8cd7bf : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 65e3afd6 : [d4c7f63 Use annotation based checking for expected exceptions] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: cc5df999 : [8ea1aa1 Remove another necessary assignment] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: f77343c1 : [59985b4 Remove unnecessary assignment] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6c166a5d : [3455884 Format source code] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: a8e70d31 : [a498b87 Build requires at least Java 6 - check for Java version can be removed] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 195978d7 : [83775c4 Test fields can be private] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4f7b7ca3 : [3f0f42f Drop unnecessary empty lines] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9db93a36 : [98817e8 Use BeforeClass hook to set up test date] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4fd1d0ab : [35f1cc0 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/time/DateUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 6b74695b : [2bc2ffd PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 824febcb : [11491d3 Use not bool instead of bool == false] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[]) : (789, 818) --> (789, 818)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[]) : (634, 663) --> (634, 663)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(double,double) : org.apache.commons.lang3.builder.EqualsBuilder.append(double,double) : (579, 597) --> (579, 597)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[]) : (727, 756) --> (727, 756)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(long,long) : org.apache.commons.lang3.builder.EqualsBuilder.append(long,long) : (500, 517) --> (500, 517)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[]) : (665, 694) --> (665, 694)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean) : org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean) : (619, 632) --> (619, 632)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(int,int) : org.apache.commons.lang3.builder.EqualsBuilder.append(int,int) : (519, 532) --> (519, 532)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[]) : (851, 880) --> (851, 880)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[]) : (882, 911) --> (882, 911)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(float,float) : org.apache.commons.lang3.builder.EqualsBuilder.append(float,float) : (599, 617) --> (599, 617)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[]) : (758, 787) --> (758, 787)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(short,short) : org.apache.commons.lang3.builder.EqualsBuilder.append(short,short) : (534, 547) --> (534, 547)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte) : org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte) : (564, 577) --> (564, 577)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object) : org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object) : (448, 498) --> (448, 498)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(char,char) : org.apache.commons.lang3.builder.EqualsBuilder.append(char,char) : (549, 562) --> (549, 562)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[]) : (696, 725) --> (696, 725)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[]) : (820, 849) --> (820, 849)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean) : org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean) : (431, 444) --> (431, 444)
[DEBUG] 
[DEBUG] === Inspecting commit: 87522cd9 : [9072a76 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5ca1ab64 : [f525bc3 Use not String.contains instead of indexOf == -1] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[]) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[]) : (166, 209) --> (166, 209)
[DEBUG] 
[DEBUG] === Inspecting commit: d6811f22 : [f525bc3 Use not String.contains instead of indexOf == -1] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class<?>,EqualsBuilder,boolean,String[]) : org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class<?>,EqualsBuilder,boolean,String[]) : (382, 427) --> (382, 427)
[DEBUG] 
[DEBUG] === Inspecting commit: f478e669 : [f525bc3 Use not String.contains instead of indexOf == -1] src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[]) : org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[]) : (302, 338) --> (302, 338)
[DEBUG] 
[DEBUG] === Inspecting commit: f827dfe5 : [2fefdc7 Scope of local variabel shift can be narrower] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : (1445, 1476) --> (1420, 1450)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int) : org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int) : (1252, 1290) --> (1232, 1269)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int) : org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int) : (631, 665) --> (629, 662)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : (910, 944) --> (900, 933)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int) : org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int) : (667, 701) --> (664, 697)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int) : org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int) : (1332, 1370) --> (1310, 1347)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : (946, 980) --> (935, 968)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int) : org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int) : (1087, 1118) --> (1072, 1102)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int) : org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int) : (809, 840) --> (802, 832)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int) : org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int) : (1054, 1085) --> (1040, 1070)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int) : org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int) : (1219, 1250) --> (1200, 1230)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : (982, 1016) --> (970, 1003)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : (1512, 1543) --> (1485, 1515)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int) : org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int) : (595, 629) --> (594, 627)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int) : org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int) : (1186, 1217) --> (1168, 1198)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int) : org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int) : (703, 737) --> (699, 732)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : (1478, 1510) --> (1452, 1483)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : (1412, 1443) --> (1388, 1418)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int) : org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int) : (775, 807) --> (769, 800)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int) : org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int) : (842, 874) --> (834, 865)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : (1018, 1052) --> (1005, 1038)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int) : org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int) : (739, 773) --> (734, 767)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int) : org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int) : (1120, 1151) --> (1104, 1134)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int) : org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int) : (1292, 1330) --> (1271, 1308)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int) : org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int) : (1372, 1410) --> (1349, 1386)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int) : org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int) : (559, 593) --> (559, 592)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int) : org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int) : (876, 908) --> (867, 898)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int) : org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int) : (1153, 1184) --> (1136, 1166)
[DEBUG] 
[DEBUG] === Inspecting commit: 38fe7dbc : [d3252a5 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 80d3c5d9 : [c4c03a3 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 9e4fb8a7 : [9106f4e Define Findbugs exlucde for internally used map key class] findbugs-exclude-filter.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: cfced562 : [173c162 Simplify isNotEmpty by reusing isEmpty] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[]) : (3548, 3558) --> (3548, 3558)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]) : (3593, 3602) --> (3593, 3602)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]) : (3626, 3635) --> (3626, 3635)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]) : (3560, 3569) --> (3560, 3569)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]) : (3604, 3613) --> (3604, 3613)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]) : (3637, 3646) --> (3637, 3646)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]) : (3615, 3624) --> (3615, 3624)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]) : (3571, 3580) --> (3571, 3580)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]) : (3582, 3591) --> (3582, 3591)
[DEBUG] 
[DEBUG] === Inspecting commit: 57732364 : [ef51b06 Simplify isEmpty be reusing getLength] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(double[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(double[]) : (3514, 3523) --> (3514, 3523)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[]) : (3536, 3545) --> (3536, 3545)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(char[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(char[]) : (3492, 3501) --> (3492, 3501)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(short[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(short[]) : (3481, 3490) --> (3481, 3490)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(Object[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(Object[]) : (3448, 3457) --> (3448, 3457)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(int[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(int[]) : (3470, 3479) --> (3470, 3479)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]) : (3503, 3512) --> (3503, 3512)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(long[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(long[]) : (3459, 3468) --> (3459, 3468)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(float[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(float[]) : (3525, 3534) --> (3525, 3534)
[DEBUG] 
[DEBUG] === Inspecting commit: b3958ffd : [319588b Simplify isSameLenght implementations by reusing getLength. This also fixes a lot of the useless paranthesis warnings generated by PMD.] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[]) : (1274, 1290) --> (1259, 1270)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[]) : (1256, 1272) --> (1246, 1257)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[]) : (1310, 1326) --> (1285, 1296)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[]) : (1238, 1254) --> (1233, 1244)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[]) : (1328, 1344) --> (1298, 1309)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[]) : (1218, 1236) --> (1218, 1231)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[]) : (1364, 1380) --> (1324, 1335)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[]) : (1292, 1308) --> (1272, 1283)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[]) : (1346, 1362) --> (1311, 1322)
[DEBUG] 
[DEBUG] === Inspecting commit: bf07961c : [921ee58 Document required java version for every release] src/site/xdoc/release-history.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: bb9eca1b : [3f418c2 Use date schema from changes.xml on release history page] src/site/xdoc/release-history.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: f02d2136 : [1c532ef Add next release to changes.xml] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4aa9b2ab : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] src/site/xdoc/release-history.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: fea83e64 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 65b71080 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 77210e69 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] doap_lang.rdf ===
[DEBUG] 
[DEBUG] === Inspecting commit: 277c44f1 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] default.properties ===
[DEBUG] 
[DEBUG] === Inspecting commit: 72ba3f3f : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] README.md ===
[DEBUG] 
[DEBUG] === Inspecting commit: a60accbd : [0d5d666 Add entry for the upcoming 3.4 release to the release history page] src/site/xdoc/release-history.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 69d701d4 : [e83123d Fix copy past error] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: e2d4f6c3 : [09c42e7 LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.] src/main/java/org/apache/commons/lang3/SystemUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_JAGUAR : boolean : org.apache.commons.lang3.SystemUtils : (1070, 1080)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LION : boolean : org.apache.commons.lang3.SystemUtils : (1130, 1140)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MOUNTAIN_LION : boolean : org.apache.commons.lang3.SystemUtils : (1142, 1152)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LEOPARD : boolean : org.apache.commons.lang3.SystemUtils : (1106, 1116)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MAVERICKS : boolean : org.apache.commons.lang3.SystemUtils : (1154, 1164)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PANTHER : boolean : org.apache.commons.lang3.SystemUtils : (1082, 1092)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_CHEETAH : boolean : org.apache.commons.lang3.SystemUtils : (1046, 1056)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_YOSEMITE : boolean : org.apache.commons.lang3.SystemUtils : (1166, 1176)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_SNOW_LEOPARD : boolean : org.apache.commons.lang3.SystemUtils : (1118, 1128)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PUMA : boolean : org.apache.commons.lang3.SystemUtils : (1058, 1068)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_TIGER : boolean : org.apache.commons.lang3.SystemUtils : (1094, 1104)
[DEBUG] 
[DEBUG] === Inspecting commit: 3e28ac48 : [09c42e7 LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: c840400f : [09c42e7 LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.] RELEASE-NOTES.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2ae05618 : [9c7b0fb LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.] src/main/java/org/apache/commons/lang3/SystemUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98 : boolean : (1192, 1202) --> (1202, 1213)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP : boolean : (1231, 1241) --> (1233, 1243)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA : boolean : (1244, 1254) --> (1246, 1258)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2003 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2003 : boolean : (1155, 1165) --> (1156, 1168)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95 : boolean : (1179, 1189) --> (1190, 1202)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2008 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2008 : boolean : (1167, 1177) --> (1168, 1180)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME : boolean : (1205, 1215) --> (1213, 1223)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8 : boolean : (1268, 1278) --> (1270, 1282)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000 : boolean : (1143, 1153) --> (1143, 1155)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7 : boolean : (1256, 1266) --> (1258, 1270)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2012 : boolean : org.apache.commons.lang3.SystemUtils : (1179, 1189)
[DEBUG] 
[DEBUG] === Inspecting commit: 8654845e : [9c7b0fb LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 59c3d1a6 : [9c7b0fb LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.] RELEASE-NOTES.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: 59e06110 : [8c84cfd The latest release is 3.3.2] RELEASE-NOTES.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2a0e1d76 : [6039dd3 Fix ant build] default.properties ===
[DEBUG] 
[DEBUG] === Inspecting commit: af2a3d81 : [6039dd3 Fix ant build] build.properties.sample ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3398b7e2 : [9e575c4 Document change of constant in DurationUtils as suggested by Oliver Heger.] RELEASE-NOTES.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: e41ec076 : [79aceed Add LANG-1104 to release notes] RELEASE-NOTES.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: 130f01cf : [06d7245 LANG-1104 - FastDateParserTest.testParses fails in TimeZone America/Sao_Paulo] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 38bbd4f5 : [06d7245 LANG-1104 - FastDateParserTest.testParses fails in TimeZone America/Sao_Paulo] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: abc27239 : [56462a1 maven-checkstyle-plugin 2.14 -> 2.15.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 48043d3a : [3548f0a Update site for release 3.4] src/site/xdoc/index.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 66ffaddf : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableShort.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableShort.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort) : org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort) : (263, 273) --> (265, 274)
[DEBUG] 
[DEBUG] === Inspecting commit: fa804151 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableLong.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableLong.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong) : org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong) : (253, 263) --> (255, 264)
[DEBUG] 
[DEBUG] === Inspecting commit: 07b9131b : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableInt.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableInt.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt) : org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt) : (253, 263) --> (255, 264)
[DEBUG] 
[DEBUG] === Inspecting commit: bfba743e : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat) : org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat) : (293, 303) --> (293, 302)
[DEBUG] 
[DEBUG] === Inspecting commit: b3c4f222 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble) : org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble) : (292, 302) --> (292, 301)
[DEBUG] 
[DEBUG] === Inspecting commit: 01a13f36 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableByte.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableByte.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte) : org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte) : (263, 273) --> (265, 274)
[DEBUG] 
[DEBUG] === Inspecting commit: d4d9ae49 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean) : org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean) : (190, 201) --> (192, 202)
[DEBUG] 
[DEBUG] === Inspecting commit: d3afa156 : [bb01292 PMD: Avoid unused private fields such as 'ESCAPED_QUOTE'] src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java ---
[DEBUG] Delete: FIELD: org.apache.commons.lang3.text.ExtendedMessageFormat.ESCAPED_QUOTE : String : org.apache.commons.lang3.text.ExtendedMessageFormat : (74, 74)
[DEBUG] 
[DEBUG] === Inspecting commit: 35370980 : [3ab0bc3 Fix typo] src/main/java/org/apache/commons/lang3/ObjectUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ObjectUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c59d650d : [f718ec1 PMD: Overriding method merely calls super] src/main/java/org/apache/commons/lang3/ObjectUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ObjectUtils.java ---
[DEBUG] Delete: METHOD: org.apache.commons.lang3.ObjectUtils.toString() : org.apache.commons.lang3.ObjectUtils : (210, 213)
[DEBUG] 
[DEBUG] === Inspecting commit: c48fa803 : [e29f33c FindBugs: Load of known null value.] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : (824, 904) --> (824, 904)
[DEBUG] 
[DEBUG] === Inspecting commit: f3bf6a5d : [346aae3 Make checkstyle happy: add missing JavaDoc] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 6717ec5b : [346aae3 Make checkstyle happy: add missing JavaDoc] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 4a67cb8d : [4fdc606 Update RELEASE-NOTES for release 3.4] RELEASE-NOTES.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6920b645 : [11279f7 Update download page in preparation for 3.4 release] src/site/xdoc/download_lang.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8ed73ecc : [11279f7 Update download page in preparation for 3.4 release] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: f3f4c657 : [fccd59e Change test back to printing to std out, since continuum seems to be running on HAL-9000] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: abbdec8c : [3225ba6 LANG-1103: Add SystemUtils.IS_JAVA_1_9] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e8663d25 : [3225ba6 LANG-1103: Add SystemUtils.IS_JAVA_1_9] src/main/java/org/apache/commons/lang3/SystemUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_JAVA_1_9 : boolean : org.apache.commons.lang3.SystemUtils : (942, 952)
[DEBUG] 
[DEBUG] === Inspecting commit: a3d5ec9c : [3225ba6 LANG-1103: Add SystemUtils.IS_JAVA_1_9] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1971f686 : [11c0df1 LANG-1102: Make logic for comparing OS versions in SystemUtils smarter] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: d611ce47 : [11c0df1 LANG-1102: Make logic for comparing OS versions in SystemUtils smarter] src/main/java/org/apache/commons/lang3/SystemUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : (1435, 1452) --> (1435, 1452)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.SystemUtils.isOSVersionMatch(String,String) : org.apache.commons.lang3.SystemUtils : (1471, 1495)
[DEBUG] 
[DEBUG] === Inspecting commit: db4635be : [11c0df1 LANG-1102: Make logic for comparing OS versions in SystemUtils smarter] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: c0227806 : [1dc65ff Reuse isOsNameMatch] src/main/java/org/apache/commons/lang3/SystemUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : (1435, 1452) --> (1435, 1452)
[DEBUG] 
[DEBUG] === Inspecting commit: 0c3ac570 : [2b7e195 This test should fail instead of writing to std out so that we can add missing OS] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: db83a45e : [098395e Dummy commit to close github issue, which has been fixed in r1669520. This fixes #56 from github.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: f98f7dae : [2f62425 Further optimization of LANG-935: - Avoid toString of the replacement sequence by doing it once. - Avoid calculating the maximum when not needed. - Fixup comment for greedy algorithm] src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : (37, 67) --> (37, 66)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : (69, 95) --> (68, 91)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, String> : org.apache.commons.lang3.text.translate.LookupTranslator : (32, 32)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, CharSequence> : org.apache.commons.lang3.text.translate.LookupTranslator : (32, 32)
[DEBUG] 
[DEBUG] === Inspecting commit: 5c8908ad : [a211ef2 Better JavaDoc for LANG-1093: Add ClassUtils.getAbbreviatedName. This fixes #57 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/ClassUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ab985c5b : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b516edfb : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 712f3096 : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 5b859c65 : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: fefb2306 : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8f3d660a : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: fd09e02c : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: a9a0d984 : [0b7ef7f update changes.xml to set proper issue number for previously committed work] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: fdf12c38 : [a74ed8c Dummy commit to close github issue. This fixes #35 from github.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 021eeafc : [aeaa333 Add missing issues to changes.xml] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3b51d6a0 : [10e18ae LANG-1100: Avoid memory allocation when using date formating to StringBuffer] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8ea51e57 : [10e18ae LANG-1100: Avoid memory allocation when using date formating to StringBuffer] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(StringBuffer,int) : (773, 786) --> (771, 783)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength() : org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength() : (854, 860) --> (851, 857)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : (870, 893) --> (867, 881)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : (927, 937) --> (915, 925)
[DEBUG] 
[DEBUG] === Inspecting commit: 8980da22 : [8bc91a9 replace tabs with spaces] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: bdf324c6 : [8bc91a9 replace tabs with spaces] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b557e06e : [8bc91a9 replace tabs with spaces] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e1b19db9 : [8bc91a9 replace tabs with spaces] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: a24bd2b2 : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: dcf45c0c : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b87b65a7 : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(StringBuffer,int) : (805, 816) --> (819, 829)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : (857, 881) --> (870, 893)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : (1204, 1234) --> (1213, 1241)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(StringBuffer,int) : (997, 1004) --> (1007, 1013)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(StringBuffer,int) : (958, 965) --> (969, 975)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : (171, 300) --> (177, 309)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : (915, 926) --> (927, 937)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDatePrinter.appendDigits(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter : (593, 596)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule : org.apache.commons.lang3.time.FastDatePrinter : (1244, 1323)
[DEBUG] 
[DEBUG] === Inspecting commit: 59d41a67 : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : (478, 535) --> (482, 541)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDateParser.formatPattern : Pattern : org.apache.commons.lang3.time.FastDateParser.formatPattern : Pattern : (472, 476) --> (476, 481)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : (839, 846) --> (849, 856)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int) : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (874, 885)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy(String) : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (845, 847)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy() : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (835, 835)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_1_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (870, 870)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_3_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (872, 872)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_2_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (871, 871)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.pattern : String : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (843, 843)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.PATTERN : String : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (837, 837)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy : (890, 890) --> (892, 892)
[DEBUG] 
[DEBUG] === Inspecting commit: 62c621f7 : [7bb99bc LANG-935: Possible performance improvement on string escape functions. Thanks to Fabian Lange and Thomas Neidhart.] src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : (35, 63) --> (37, 67)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : (65, 84) --> (69, 95)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.text.translate.LookupTranslator.prefixSet : HashSet<Character> : org.apache.commons.lang3.text.translate.LookupTranslator : (33, 33)
[DEBUG] 
[DEBUG] === Inspecting commit: 9797cb8c : [7bb99bc LANG-935: Possible performance improvement on string escape functions. Thanks to Fabian Lange and Thomas Neidhart.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8256dd13 : [bf6ee5c LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.] src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7610d280 : [bf6ee5c LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.] src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String) : org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String) : (138, 208) --> (138, 208)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition) : org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition) : (363, 395) --> (363, 395)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList<String>) : org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList<String>) : (397, 439) --> (397, 439)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder) : org.apache.commons.lang3.text.ExtendedMessageFormat : (467, 502)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition) : org.apache.commons.lang3.text.ExtendedMessageFormat : (504, 512)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition,boolean) : org.apache.commons.lang3.text.ExtendedMessageFormat : (507, 517)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder,boolean) : org.apache.commons.lang3.text.ExtendedMessageFormat : (467, 505)
[DEBUG] 
[DEBUG] === Inspecting commit: 49fe354e : [bf6ee5c LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: d91230e6 : [cbeb45b Kudos to the people how care about Commons Lang] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 79fa7c41 : [3328387 LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.] src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: ff2a7799 : [3328387 LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.] src/main/java/org/apache/commons/lang3/text/StrBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrBuilder.append(CharSequence) : org.apache.commons.lang3.text.StrBuilder.append(CharSequence) : (512, 526) --> (515, 541)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrBuilder.append(Object) : org.apache.commons.lang3.text.StrBuilder.append(Object) : (498, 510) --> (498, 513)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int) : org.apache.commons.lang3.text.StrBuilder : (648, 678)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.append(CharBuffer) : org.apache.commons.lang3.text.StrBuilder : (624, 646)
[DEBUG] 
[DEBUG] === Inspecting commit: 2b056d91 : [3328387 LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: e80185d8 : [1181552 Correct change types] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: b9ca7b83 : [adebbdc LANG-1098: Update maven-checkstyle-plugin to 2.14. This fixes #55 from github. Thanks to Michał Kordas.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: f9ecbe9c : [adebbdc LANG-1098: Update maven-checkstyle-plugin to 2.14. This fixes #55 from github. Thanks to Michał Kordas.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: f3e2e178 : [d6f59c3 LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Michał Kordas.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 25284538 : [d6f59c3 LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Michał Kordas.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2a6a7c68 : [08a854a LANG-1096: Update maven-pmd-plugin to 3.4. This fixes #53 from github. Thanks to Michał Kordas.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6055c7ac : [08a854a LANG-1096: Update maven-pmd-plugin to 3.4. This fixes #53 from github. Thanks to Michał Kordas.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 02a8538e : [bf3e77d LANG-1095: Update maven-antrun-plugin to 1.8. This fixes #52 from github. Thanks to Michał Kordas] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7de5f51f : [bf3e77d LANG-1095: Update maven-antrun-plugin to 1.8. This fixes #52 from github. Thanks to Michał Kordas] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2bfb68cd : [4556cc5 Add missing AL header] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTimeZonesTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 36caddc6 : [442e8c2 Extract formatting tests of time zones into parameterized test] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTimeZonesTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 54eec98c : [442e8c2 Extract formatting tests of time zones into parameterized test] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 44cdae63 : [04c8de2 No need to exclude the current time zone from testing] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c1f48462 : [8aa1b44 LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 24fe23f8 : [8aa1b44 LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(StringBuffer,Calendar) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(StringBuffer,Calendar) : (1159, 1171) --> (1159, 1170)
[DEBUG] 
[DEBUG] === Inspecting commit: 42ac012a : [8aa1b44 LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 346df57c : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/CharUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: d640a134 : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer) : org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer) : (99, 127) --> (99, 125)
[DEBUG] 
[DEBUG] === Inspecting commit: 5c87d4a6 : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer) : org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer) : (67, 98) --> (69, 109)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.text.translate.CharSequenceTranslator.HEX_DIGITS : char[] : org.apache.commons.lang3.text.translate.CharSequenceTranslator : (34, 34)
[DEBUG] 
[DEBUG] === Inspecting commit: 0a300ecf : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/CharUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharUtils.unicodeEscaped(char) : org.apache.commons.lang3.CharUtils.unicodeEscaped(char) : (339, 361) --> (341, 362)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.CharUtils.HEX_DIGITS : char[] : org.apache.commons.lang3.CharUtils : (34, 34)
[DEBUG] 
[DEBUG] === Inspecting commit: e97c7f3c : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4c33d6c6 : [a234f03 Fix JavaDoc link] src/main/java/org/apache/commons/lang3/ClassUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 33453612 : [f29eb8e Use annotation based testing for expected exceptions] src/test/java/org/apache/commons/lang3/ClassUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: cb5d50d7 : [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/ClassUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 47337482 : [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/ClassUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int) : org.apache.commons.lang3.ClassUtils : (336, 396)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int) : org.apache.commons.lang3.ClassUtils : (319, 334)
[DEBUG] 
[DEBUG] === Inspecting commit: 54c28452 : [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 802c0cb9 : [ce7f4ed LANG-1090 FastDateParser does not set error indication in ParsePosition] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: eab0abd3 : [ce7f4ed LANG-1090 FastDateParser does not set error indication in ParsePosition] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 69173637 : [ce7f4ed LANG-1090 FastDateParser does not set error indication in ParsePosition] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 95a31c5f : [8db46b1 Javadoc] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 6d0fd21c : [8db46b1 Javadoc] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0da032be : [e124486 Simplify] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: bede4e2c : [3ec99c1 Add AL header (props joerg)] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 85593cd9 : [7c8443f LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e1deada8 : [7c8443f LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : (466, 523) --> (466, 523)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.HOUR12_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (868, 873)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.HOUR24_OF_DAY_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (862, 867)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_OF_DAY_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (862, 867)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (868, 873)
[DEBUG] 
[DEBUG] === Inspecting commit: 89ba5bae : [7c8443f LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3b781ee1 : [6ec90c4 Docs] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 967e0546 : [b321bde Generics] src/test/java/org/apache/commons/lang3/text/StrLookupTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: adc202d1 : [4d228dd Comment] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1ca45c46 : [2367948 LANG-1061 FastDateParser error - timezones not handled correctly] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 28364536 : [2367948 LANG-1061 FastDateParser error - timezones not handled correctly] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : (755, 789) --> (755, 790)
[DEBUG] 
[DEBUG] === Inspecting commit: 81b2e181 : [2367948 LANG-1061 FastDateParser error - timezones not handled correctly] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: f1ab9623 : [45a6467 LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 24f6a2de : [45a6467 LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.createNumber(String) : org.apache.commons.lang3.math.NumberUtils.createNumber(String) : (420, 624) --> (420, 624)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int) : org.apache.commons.lang3.math.NumberUtils : (638, 652)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.getMantissa(String) : org.apache.commons.lang3.math.NumberUtils : (626, 636)
[DEBUG] 
[DEBUG] === Inspecting commit: f8f43843 : [45a6467 LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1b2ef995 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/LazyInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4fe59e69 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b15675d8 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/AtomicInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 99aad053 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 71083b19 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : (72, 108) --> (65, 83)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException> : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (66, 67)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (69, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: 273d8167 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 13f2ec88 : [4975b89 CGI must be svn:executable *] src/site/resources/download_lang.cgi ===
[DEBUG] 
[DEBUG] === Inspecting commit: f65c7a87 : [ed4d262 Update to latest parent pom] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 30894be8 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/LazyInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: a129b642 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0e5aeaef : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/AtomicInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2107ac57 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8f5076fe : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : (65, 83) --> (72, 108)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException> : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (66, 67)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (69, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: dd614d64 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 20d3c6e9 : [ffdc427 Fix up Findbugs version so it works with Java 6] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4a510418 : [813e18f Checkstyle: Add missing JavaDoc] src/main/java/org/apache/commons/lang3/text/StrLookup.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrLookup.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 58faacf5 : [4792f85 Checkstyle: Add missing JavaDoc] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 085c6755 : [425d057 Make JavaDoc tool happy by adding missing @return tag] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c1771911 : [58320be Add some JavaDocs] src/main/java/org/apache/commons/lang3/JavaVersion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/JavaVersion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 264b3dea : [6b90fe3 Add missing license header] src/test/java/org/apache/commons/lang3/reflect/testbed/Annotated.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7b059101 : [d8c65c4 Add Jonathan Baker to the list of contributors] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 13b3b111 : [ffc38b1 LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e4367f17 : [ffc38b1 LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : (824, 900) --> (824, 904)
[DEBUG] 
[DEBUG] === Inspecting commit: 5fd8fbc4 : [ffc38b1 LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 78d80fd8 : [3181b40 Add an additional test for LANG-1055] src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 87703be1 : [3181b40 Add an additional test for LANG-1055] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: ef66ae54 : [63f1d6b LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently. This fixes #43 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/text/StrLookupTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: ebf5060c : [63f1d6b LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently. This fixes #43 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/text/StrLookup.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrLookup.java ---
[DEBUG] Update: FIELD: org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP : StrLookup<String> : org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP : StrLookup<String> : (39, 42) --> (42, 46)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup() : org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup() : (71, 84) --> (73, 98)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrLookup.copyProperties(Properties) : org.apache.commons.lang3.text.StrLookup : (56, 71)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.text.StrLookup.SYSTEM_PROPERTIES_LOOKUP : StrLookup<String> : org.apache.commons.lang3.text.StrLookup : (43, 46)
[DEBUG] 
[DEBUG] === Inspecting commit: 645ad518 : [cc991fe Add since tag to new constructor of DiffBuilder] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 38346119 : [38ed1a0 LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c069afea : [38ed1a0 LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle) : org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle) : (75, 112) --> (121, 151)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle,boolean) : org.apache.commons.lang3.builder.DiffBuilder : (75, 119)
[DEBUG] 
[DEBUG] === Inspecting commit: 289cc48a : [38ed1a0 LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4ebdcd11 : [6eac346 LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9d35d45c : [6eac346 LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/SerializationUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SerializationUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SerializationUtils.roundtrip(T) : org.apache.commons.lang3.SerializationUtils.roundtrip(T) : (113, 126) --> (113, 126)
[DEBUG] 
[DEBUG] === Inspecting commit: 9f9bc157 : [6eac346 LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: abe847be : [89c8519 Update copyright year] NOTICE.txt ===
[DEBUG] 
[DEBUG] === Inspecting commit: c9b250f1 : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] CONTRIBUTING.md ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0706fb11 : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] src/assembly/src.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6897da2c : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] src/assembly/bin.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3f9fc9a8 : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] README.md ===
[DEBUG] 
[DEBUG] === Inspecting commit: 25096fca : [5160730 Add test for merging toString with super toString] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 608260e8 : [d903279 Remove assertions in error cases. They won't be executed.] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: a3895968 : [42728e8 Test against static value] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c75aefd4 : [2515b3e Format source code] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3c4fc783 : [8d9662e JsonToStringStyle doesn't use line breaks. Change JavaDoc to reflect this.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 54ebdcb6 : [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: a3a7ebf8 : [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE : ToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (142, 163)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (2354, 2612)
[DEBUG] 
[DEBUG] === Inspecting commit: f52d60d6 : [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 75a4a139 : [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/test/java/org/apache/commons/lang3/builder/NoClassNameToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: bf3796e4 : [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.ToStringStyle.NO_CLASS_NAME_STYLE : ToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (130, 140)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (2296, 2327)
[DEBUG] 
[DEBUG] === Inspecting commit: 52997d4b : [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 74292980 : [e22e066 Revert to using cobertura. The Jacoco instrumentation will add fields to all classes. This in turn breaks the tests for FieldUtils.getAllFields(Class).] src/site/resources/profile.cobertura ===
[DEBUG] 
[DEBUG] === Inspecting commit: 40d0023f : [e22e066 Revert to using cobertura. The Jacoco instrumentation will add fields to all classes. This in turn breaks the tests for FieldUtils.getAllFields(Class).] src/site/resources/profile.jacoco ===
[DEBUG] 
[DEBUG] === Inspecting commit: 376baa25 : [2f97b43 Don't redefine plugin default values] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 311a4565 : [00f00cc Need to set MaxPermSize as well or the site build will fail with OutOfMemoryError] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 769055c3 : [867d318 Update JavaNCSS plugin to latest version] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9129a3be : [e4bcd50 Add jacoco file to activate report via parent pom (forgot that in last commit)] src/site/resources/profile.jacoco ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3ec4f7b3 : [517b430 Use jacoco via parent pom configuration file instead of cobertura (which takes forever to run)] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7c390696 : [c533282 LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 60c2d740 : [c533282 LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2a268b34 : [5cb1ae6 Add examples for containsAny(CharSequence, CharSequence...)] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 92d5928b : [a169e86 Use enhanced for loop instead of indexed based iteration] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...) : (1673, 1696) --> (1673, 1696)
[DEBUG] 
[DEBUG] === Inspecting commit: 067667b5 : [9e26c7b LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.] src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: fb107bf5 : [9e26c7b LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils : (1673, 1696)
[DEBUG] 
[DEBUG] === Inspecting commit: 8a1e549f : [9e26c7b LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9796b385 : [23d55b0 Can't link to private inner classes, use public field instead] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e1c8b77a : [5f61aa0 Update to latest parent pom] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7a3083d8 : [3902225 Add another assertion documention the current behavior of StringUtils.join] src/test/java/org/apache/commons/lang3/StringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: be4c4e69 : [4a2cc4f LANG-1073 Read wrong component type of array in add in ArrayUtils] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.add(T[],T) : org.apache.commons.lang3.ArrayUtils.add(T[],T) : (3979, 4022) --> (3979, 4022)
[DEBUG] 
[DEBUG] === Inspecting commit: 1c06b1b5 : [4a2cc4f LANG-1073 Read wrong component type of array in add in ArrayUtils] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: ed90bb1c : [e5a3039 LANG-1077 StringUtils.ordinalIndexOf(aaaaaa, aa, 2) != 3 in StringUtils] src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 245fe2a2 : [e5a3039 LANG-1077 StringUtils.ordinalIndexOf(aaaaaa, aa, 2) != 3 in StringUtils] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean) : org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean) : (1001, 1036) --> (1001, 1036)
[DEBUG] 
[DEBUG] === Inspecting commit: e3af98be : [e5a3039 LANG-1077 StringUtils.ordinalIndexOf(aaaaaa, aa, 2) != 3 in StringUtils] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: bb4bb677 : [0576347 clarify behavior of #isNumber() with blanks] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7209cabd : [0576347 clarify behavior of #isNumber() with blanks] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 81e69619 : [d4cf086 Typo] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 931865cf : [a25d6d8 Update to latest junit release] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 729eae95 : [0162032 LANG-1072 Duplicated 0x check in createBigInteger in NumberUtils] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8dac5ca6 : [0162032 LANG-1072 Duplicated 0x check in createBigInteger in NumberUtils] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.createBigInteger(String) : org.apache.commons.lang3.math.NumberUtils.createBigInteger(String) : (716, 750) --> (716, 750)
[DEBUG] 
[DEBUG] === Inspecting commit: 48f59c49 : [0162032 LANG-1072 Duplicated 0x check in createBigInteger in NumberUtils] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 83e9e052 : [2120121 maven-pmd-plugin 3.2 -> 3.3.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7fc800a7 : [2afdf4d Javadoc fix for LANG-1064.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 433eb1d9 : [2afdf4d Javadoc fix for LANG-1064.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 36c1be20 : [635e41e LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.] src/test/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyleTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: ce500003 : [635e41e LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ===
[DEBUG] --- New File: src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ---
[DEBUG] Insert: CLASS: org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle : org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle : (23, 219)
[DEBUG] 
[DEBUG] === Inspecting commit: 0ca9e4b3 : [635e41e LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3ae932ab : [85c18d0 Update to latest commons parent pom] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 47559218 : [0661ab5 No need to explicitly extend Object.] src/test/java/org/apache/commons/lang3/ClassUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: df0d65e3 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: a45ce738 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/CharUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 00f15910 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 51647542 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 435f99aa : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(short,short) : org.apache.commons.lang3.math.NumberUtils : (1540, 1559)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(byte,byte) : org.apache.commons.lang3.math.NumberUtils : (1561, 1573)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(int,int) : org.apache.commons.lang3.math.NumberUtils : (1498, 1517)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(long,long) : org.apache.commons.lang3.math.NumberUtils : (1519, 1538)
[DEBUG] 
[DEBUG] === Inspecting commit: d0c239ad : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/CharUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.CharUtils.compare(char,char) : org.apache.commons.lang3.CharUtils : (539, 551)
[DEBUG] 
[DEBUG] === Inspecting commit: db96f2d6 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/BooleanUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/BooleanUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean) : org.apache.commons.lang3.BooleanUtils : (1088, 1107)
[DEBUG] 
[DEBUG] === Inspecting commit: 16210c32 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte...) : org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte...) : (5328, 5382) --> (5330, 5384)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(T[]) : org.apache.commons.lang3.ArrayUtils : (6093, 6109)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(char[]) : org.apache.commons.lang3.ArrayUtils : (6293, 6316)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(int[]) : org.apache.commons.lang3.ArrayUtils : (6143, 6166)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(double[]) : org.apache.commons.lang3.ArrayUtils : (6218, 6241)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(boolean[]) : org.apache.commons.lang3.ArrayUtils : (6318, 6342)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(byte[]) : org.apache.commons.lang3.ArrayUtils : (6268, 6291)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(long[]) : org.apache.commons.lang3.ArrayUtils : (6168, 6191)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(T[],Comparator<T>) : org.apache.commons.lang3.ArrayUtils : (6112, 6141)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(float[]) : org.apache.commons.lang3.ArrayUtils : (6243, 6266)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(short[]) : org.apache.commons.lang3.ArrayUtils : (6193, 6216)
[DEBUG] 
[DEBUG] === Inspecting commit: 03c65bed : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 31aec23a : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0af91091 : [09cee6a Use isEmpty() where possible. Thanks to James Sawle for pointing this out.] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]) : (619, 637) --> (619, 637)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[]) : (499, 517) --> (499, 517)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[]) : (799, 817) --> (799, 817)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[]) : (819, 837) --> (819, 837)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]) : (539, 557) --> (539, 557)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]) : (559, 577) --> (559, 577)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[]) : (699, 717) --> (699, 717)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[]) : (779, 797) --> (779, 797)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[]) : (679, 697) --> (679, 697)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]) : (599, 617) --> (599, 617)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]) : (659, 677) --> (659, 677)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]) : (519, 537) --> (519, 537)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]) : (579, 597) --> (579, 597)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[]) : (459, 477) --> (459, 477)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[]) : (719, 737) --> (719, 737)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[]) : (739, 757) --> (739, 757)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]) : (639, 657) --> (639, 657)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[]) : (479, 497) --> (479, 497)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[]) : (759, 777) --> (759, 777)
[DEBUG] 
[DEBUG] === Inspecting commit: 48827b4d : [b199af8 LANG-1043 - isAllUpperCase should only check Alpha characters Document and test additional cases] src/test/java/org/apache/commons/lang3/StringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 36cfa8da : [b199af8 LANG-1043 - isAllUpperCase should only check Alpha characters Document and test additional cases] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2a75e6bb : [0d3d319 Javadocs.] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b5a77a8f : [ab57062 Update maven-checkstyle-plugin from 2.9.1 to 2.13.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 65477e8d : [a113511 [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9c916cdb : [a113511 [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String) : org.apache.commons.lang3.reflect.MethodUtils : (73, 95)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String) : org.apache.commons.lang3.reflect.MethodUtils : (162, 184)
[DEBUG] 
[DEBUG] === Inspecting commit: 6a3a9f7f : [a113511 [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: af6dec38 : [0648a30 Javadoc examples looked better wrapped in {@code} tags.] src/main/java/org/apache/commons/lang3/StringEscapeUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringEscapeUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: bc3ea28c : [4477ae6 LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: fa6391f9 : [4477ae6 LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4029db1d : [4477ae6 LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: c707500f : [aa3f174 Remove tab characters] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 288de84f : [7406d02 Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons] src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 32f6b199 : [7406d02 Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 899442f5 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 09b49046 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/test/java/org/apache/commons/lang3/time/DateFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c31eeeb0 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : (1198, 1223) --> (1204, 1234)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON : TimeZoneNumberRule : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON : TimeZoneNumberRule : (1177, 1177) --> (1181, 1182)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_COLON : TimeZoneNumberRule : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_COLON : TimeZoneNumberRule : (1176, 1176) --> (1177, 1179)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean,boolean) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1185, 1194)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1181, 1188)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.mISO8601 : boolean : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1183, 1183)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_ISO_8601 : TimeZoneNumberRule : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1180, 1180)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : (170, 297) --> (170, 299)
[DEBUG] 
[DEBUG] === Inspecting commit: 488afb9e : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : (466, 519) --> (466, 523)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (877, 877)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : org.apache.commons.lang3.time.FastDateParser : (822, 846)
[DEBUG] 
[DEBUG] === Inspecting commit: 3149d281 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3879d44b : [2aae22d Removed redundant static modifier (thanks, Matt).] src/main/java/org/apache/commons/lang3/time/DateUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: bdf6d408 : [52e854e Replaced private integer constants with private static enum.] src/main/java/org/apache/commons/lang3/time/DateUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.ceiling(Date,int) : org.apache.commons.lang3.time.DateUtils.ceiling(Date,int) : (873, 897) --> (877, 901)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int) : org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int) : (899, 922) --> (903, 926)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.round(Date,int) : org.apache.commons.lang3.time.DateUtils.round(Date,int) : (680, 714) --> (684, 718)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.truncate(Date,int) : org.apache.commons.lang3.time.DateUtils.truncate(Date,int) : (794, 817) --> (798, 821)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int) : org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int) : (819, 841) --> (823, 845)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.round(Calendar,int) : org.apache.commons.lang3.time.DateUtils.round(Calendar,int) : (716, 750) --> (720, 754)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType) : org.apache.commons.lang3.time.DateUtils : (959, 1105)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,int) : org.apache.commons.lang3.time.DateUtils : (955, 1101)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND : int : org.apache.commons.lang3.time.DateUtils : (124, 128)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE : int : org.apache.commons.lang3.time.DateUtils : (119, 123)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING : int : org.apache.commons.lang3.time.DateUtils : (129, 133)
[DEBUG] 
[DEBUG] === Inspecting commit: 2bdf8687 : [bc91bed Made it clear that the fields of the object form the hash code (LANG-1039). Pulled magic values into constants.] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String...) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String...) : (423, 457) --> (439, 475)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean) : (349, 383) --> (362, 398)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE : int : org.apache.commons.lang3.builder.HashCodeBuilder : (107, 110)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE : int : org.apache.commons.lang3.builder.HashCodeBuilder : (102, 105)
[DEBUG] 
[DEBUG] === Inspecting commit: b93f9a79 : [bdb1a68 Added Javadoc warnings related to LANG-796.] src/main/java/org/apache/commons/lang3/time/DateUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 3a0c078a : [2154d5f Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 43f659f6 : [2154d5f Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 21074723 : [1e6c8c1 Simplify statement by calling substring on str directly. StringUtils.startsWith makes sure that str is not  null at this point. Improvement suggested by sebb.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.isParsable(String) : org.apache.commons.lang3.math.NumberUtils.isParsable(String) : (1470, 1496) --> (1470, 1496)
[DEBUG] 
[DEBUG] === Inspecting commit: 94fac577 : [161ef97 Add fixme regarding a JDK 1.3 workaround] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: db218195 : [01a950e Better JavaDoc formatting] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f61ddb35 : [fceafc5 Fix typo] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 74eba75f : [bc8e238 LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.normalizeSpace(String) : org.apache.commons.lang3.StringUtils.normalizeSpace(String) : (7438, 7484) --> (7428, 7498)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.StringUtils.WHITESPACE_PATTERN : Pattern : org.apache.commons.lang3.StringUtils : (175, 183)
[DEBUG] 
[DEBUG] === Inspecting commit: a1f68c9e : [bc8e238 LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: a794fe9a : [092d6da Add missing fail calls. Errors would be silently ignored if those calls are missing.] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b4443c5f : [84c43fe Update plugins to current versions.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: ebbb4038 : [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: f086c2c8 : [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char) : org.apache.commons.lang3.StringUtils : (5825, 5856)
[DEBUG] 
[DEBUG] === Inspecting commit: 27c012ee : [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3797db61 : [a67075b Update to latest parent pom] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8e0e50ff : [9b2357c Fix JavaDoc problem] src/main/java/org/apache/commons/lang3/JavaVersion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/JavaVersion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 1f91d959 : [5ae1b02 Document the changes from LANG-1027] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: b166ee4b : [3fa5334 LANG-1027 don't fail if java version is unknown, lang is too much used to make apps and libs failling cause of an unknown java version.] src/test/java/org/apache/commons/lang3/JavaVersionTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 74615763 : [3fa5334 LANG-1027 don't fail if java version is unknown, lang is too much used to make apps and libs failling cause of an unknown java version.] src/main/java/org/apache/commons/lang3/JavaVersion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/JavaVersion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 36bb672b : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/test/java/org/apache/commons/lang3/reflect/testbed/Annotated.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e52f0681 : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8637c56a : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b6bfeb86 : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.MethodUtils : (568, 590)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.MethodUtils : (552, 566)
[DEBUG] 
[DEBUG] === Inspecting commit: ba067dae : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.FieldUtils : (226, 240)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.FieldUtils : (242, 263)
[DEBUG] 
[DEBUG] === Inspecting commit: 75a19a94 : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 316b1aac : [03aa1e7 Use the more modern, compact, and flexible Javadoc {@code ...} instead of the HTML <tt>...</tt>.] src/main/java/org/apache/commons/lang3/StringEscapeUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringEscapeUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 354a0466 : [88dd10f Use the more modern, compact, and flexible Javadoc {@code ...} instead of the HTML <tt>...</tt>.] src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b2832244 : [b1caa21 LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T) : org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T) : (6227, 6247) --> (6227, 6247)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence) : org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence) : (319, 338) --> (319, 338)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence...) : (7453, 7481) --> (7453, 7481)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence...) : (7295, 7324) --> (7295, 7324)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T) : org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T) : (6249, 6269) --> (6249, 6269)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence) : org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence) : (222, 239) --> (222, 239)
[DEBUG] 
[DEBUG] === Inspecting commit: 7055b650 : [b1caa21 LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2295a37d : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8b0415ea : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b4d074be : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c2771a80 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3968a504 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 74112edc : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/DateUtilsRoundingTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b5e3c453 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e32e42bc : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 14f53652 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2cf60fe3 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 135f159b : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 5c121d45 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 685b35ad : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e1999289 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: d5d4f3d9 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/builder/ToStringBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2a046e1a : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/StringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 27ea4e52 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: afb27ea3 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/RandomUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e3613692 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b018e1eb : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 950003e1 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/site/xdoc/index.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 94122b52 : [6240a05 LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6acd7017 : [6240a05 LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.isParsable(String) : org.apache.commons.lang3.math.NumberUtils.isParsable(String) : (1470, 1492) --> (1470, 1496)
[DEBUG] 
[DEBUG] === Inspecting commit: 0f4f9585 : [673dbc5 Tiddy up JavaDoc] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0a32305c : [7022c19 LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1c3ce833 : [7022c19 LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.isParsable(String) : org.apache.commons.lang3.math.NumberUtils : (1470, 1491)
[DEBUG] 
[DEBUG] === Inspecting commit: f4743170 : [7022c19 LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 92b881a2 : [4fcfad9 Formating.] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 936d33f9 : [c8e024f Formating.] src/main/java/org/apache/commons/lang3/SerializationUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SerializationUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2a93c33b : [248fd21 Restore previous behavior that allows function results (arrays of booleans) to be modified.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : (163, 219) --> (163, 219)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : (221, 277) --> (221, 277)
[DEBUG] 
[DEBUG] === Inspecting commit: a3fd7e12 : [7196611 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/LocaleUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/LocaleUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.LocaleUtils.toLocale(String) : org.apache.commons.lang3.LocaleUtils.toLocale(String) : (61, 156) --> (61, 155)
[DEBUG] 
[DEBUG] === Inspecting commit: 94e843cc : [dd74cf1 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/reflect/InheritanceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/InheritanceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>) : org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>) : (40, 67) --> (40, 66)
[DEBUG] 
[DEBUG] === Inspecting commit: 88267a9b : [8a95db3 Format to 120 line length.] src/main/java/org/apache/commons/lang3/math/Fraction.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/Fraction.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 31551b34 : [60b79a9 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/math/Fraction.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/Fraction.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.Fraction.invert() : org.apache.commons.lang3.math.Fraction.invert() : (480, 501) --> (478, 498)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.Fraction.getFraction(String) : org.apache.commons.lang3.math.Fraction.getFraction(String) : (301, 354) --> (301, 352)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.Fraction.pow(int) : org.apache.commons.lang3.math.Fraction.pow(int) : (534, 564) --> (531, 560)
[DEBUG] 
[DEBUG] === Inspecting commit: 0aecc999 : [0ff8493 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/event/EventUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/event/EventUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[]) : org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[]) : (100, 119) --> (100, 118)
[DEBUG] 
[DEBUG] === Inspecting commit: e63e0a9b : [7b33ab1 Format to 120 line length.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b362bea2 : [cf83256 Format to 120 line length.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 706064c3 : [2e9a359 Simplify using ternary expressions.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : (305, 370) --> (305, 346)
[DEBUG] 
[DEBUG] === Inspecting commit: 52ec52d4 : [c9e3793 Refactor commons constants (no need to generate new arrays on every call).] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : (149, 207) --> (167, 225)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : (209, 267) --> (227, 285)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTFF : boolean[] : org.apache.commons.lang3.Conversion : (82, 82)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFTF : boolean[] : org.apache.commons.lang3.Conversion : (80, 80)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTFT : boolean[] : org.apache.commons.lang3.Conversion : (74, 74)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTFT : boolean[] : org.apache.commons.lang3.Conversion : (73, 73)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFTT : boolean[] : org.apache.commons.lang3.Conversion : (72, 72)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFTT : boolean[] : org.apache.commons.lang3.Conversion : (71, 71)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTTF : boolean[] : org.apache.commons.lang3.Conversion : (78, 78)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTTF : boolean[] : org.apache.commons.lang3.Conversion : (77, 77)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFFF : boolean[] : org.apache.commons.lang3.Conversion : (84, 84)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFFT : boolean[] : org.apache.commons.lang3.Conversion : (76, 76)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTTT : boolean[] : org.apache.commons.lang3.Conversion : (69, 69)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTTT : boolean[] : org.apache.commons.lang3.Conversion : (70, 70)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFFF : boolean[] : org.apache.commons.lang3.Conversion : (83, 83)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFTF : boolean[] : org.apache.commons.lang3.Conversion : (79, 79)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTFF : boolean[] : org.apache.commons.lang3.Conversion : (81, 81)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFFT : boolean[] : org.apache.commons.lang3.Conversion : (75, 75)
[DEBUG] 
[DEBUG] === Inspecting commit: 9f641170 : [e769c18 Simplify using ternary expressions instead of nested if-elses.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int) : org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int) : (440, 527) --> (440, 488)
[DEBUG] 
[DEBUG] === Inspecting commit: 2cb7a6e2 : [082eb39 Format to 120 line length.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ac0610ec : [c987d16 Simplify using ternary expressions instead of nested if-elses.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int) : org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int) : (373, 461) --> (373, 422)
[DEBUG] 
[DEBUG] === Inspecting commit: 29a953e1 : [f7e5f2c Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/LocaleUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/LocaleUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.LocaleUtils.toLocale(String) : org.apache.commons.lang3.LocaleUtils.toLocale(String) : (61, 157) --> (61, 156)
[DEBUG] 
[DEBUG] === Inspecting commit: 86754fde : [299ea79 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/SerializationUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SerializationUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass) : org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass) : (311, 336) --> (311, 335)
[DEBUG] 
[DEBUG] === Inspecting commit: e6b8441f : [93b1808 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List<String>) : org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List<String>) : (738, 881) --> (738, 880)
[DEBUG] 
[DEBUG] === Inspecting commit: e08d9459 : [8e757f1 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer) : (32, 65) --> (32, 64)
[DEBUG] 
[DEBUG] === Inspecting commit: a3fbff94 : [b52a49a Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : (28, 41) --> (28, 40)
[DEBUG] 
[DEBUG] === Inspecting commit: 7e4502f5 : [3833488 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : (287, 367) --> (287, 352)
[DEBUG] 
[DEBUG] === Inspecting commit: 04af2f0e : [0ef7471 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/ClassUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : (1092, 1138) --> (1092, 1137)
[DEBUG] 
[DEBUG] === Inspecting commit: 0ac4cce7 : [e3ee532 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/ClassUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : (1092, 1139) --> (1092, 1138)
[DEBUG] 
[DEBUG] === Inspecting commit: ce5917d6 : [5a1101d Remove unused imports.] src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: d7423c1d : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8fd936dd : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 42b76a2e : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: aa45e601 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3cdeacee : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2cf00a8a : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 48629884 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/testbed/GenericParent.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 10562baa : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8e224df2 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9da93e09 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c50e6164 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9a6c7014 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/DiffTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c2c8449e : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/DiffResultTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: fb5c4aca : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8e22cc14 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/StringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 35e8306f : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: f488410c : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: ac4c8351 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/RandomUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: d952f5d1 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3ea70c13 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/NotImplementedExceptionTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 20f9d767 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b3f81f98 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/ClassPathUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: b529818f : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/FormatCache.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FormatCache.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale) : org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale) : (146, 161) --> (146, 161)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale) : org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale) : (163, 178) --> (163, 178)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale) : org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale) : (128, 144) --> (128, 144)
[DEBUG] 
[DEBUG] === Inspecting commit: 30854e76 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : (600, 615) --> (600, 615)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.adjustYear(int) : org.apache.commons.lang3.time.FastDateParser.adjustYear(int) : (395, 403) --> (395, 403)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.init(Calendar) : org.apache.commons.lang3.time.FastDateParser.init(Calendar) : (142, 184) --> (142, 184)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : (748, 782) --> (748, 782)
[DEBUG] 
[DEBUG] === Inspecting commit: f9f60df3 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : (412, 467) --> (412, 467)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : (576, 590) --> (576, 590)
[DEBUG] 
[DEBUG] === Inspecting commit: ae2ed8fd : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/DateUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit) : org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit) : (1656, 1711) --> (1656, 1711)
[DEBUG] 
[DEBUG] === Inspecting commit: 04b67ac7 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : (28, 41) --> (28, 41)
[DEBUG] 
[DEBUG] === Inspecting commit: 36fbb1d8 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer) : (35, 61) --> (35, 61)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char) : org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char) : (72, 79) --> (72, 79)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char) : org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char) : (63, 70) --> (63, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: 76127a2b : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int) : org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int) : (659, 683) --> (659, 683)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder) : org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder) : (643, 657) --> (643, 657)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int) : org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int) : (520, 541) --> (520, 541)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence) : org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence) : (504, 518) --> (504, 518)
[DEBUG] 
[DEBUG] === Inspecting commit: fd3ae0fc : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>) : org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>) : (1678, 1705) --> (1678, 1705)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type...) : org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type...) : (1829, 1846) --> (1829, 1846)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type) : (1604, 1614) --> (1604, 1614)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type) : (1562, 1585) --> (1562, 1585)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<?>) : org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<?>) : (1736, 1756) --> (1736, 1756)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[]) : org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[]) : (1632, 1649) --> (1632, 1649)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : (1801, 1817) --> (1801, 1817)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : (1616, 1630) --> (1616, 1630)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type) : (1587, 1602) --> (1587, 1602)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type) : org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type) : (1420, 1448) --> (1420, 1448)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.toString(Type) : org.apache.commons.lang3.reflect.TypeUtils.toString(Type) : (1651, 1676) --> (1651, 1676)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.ParameterizedTypeImpl(Class<?>,Type,Type[]) : org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.ParameterizedTypeImpl(Class<?>,Type,Type[]) : (151, 161) --> (151, 161)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.equals(Object) : org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.equals(Object) : (195, 201) --> (195, 201)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[]) : org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[]) : (1525, 1539) --> (1525, 1539)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType) : org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType) : (1819, 1827) --> (1819, 1827)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>) : org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>) : (1758, 1772) --> (1758, 1772)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.WildcardTypeImpl(Type[],Type[]) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.WildcardTypeImpl(Type[],Type[]) : (229, 237) --> (229, 237)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.equals(Object) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.equals(Object) : (263, 269) --> (263, 269)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withUpperBounds(Type...) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withUpperBounds(Type...) : (63, 71) --> (63, 71)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withLowerBounds(Type...) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withLowerBounds(Type...) : (73, 81) --> (73, 81)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType) : org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType) : (1774, 1799) --> (1774, 1799)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.GenericArrayTypeImpl(Type) : org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.GenericArrayTypeImpl(Type) : (99, 105) --> (99, 105)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.equals(Object) : org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.equals(Object) : (123, 129) --> (123, 129)
[DEBUG] 
[DEBUG] === Inspecting commit: 1981ef32 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeLiteral.equals(Object) : org.apache.commons.lang3.reflect.TypeLiteral.equals(Object) : (98, 108) --> (98, 108)
[DEBUG] 
[DEBUG] === Inspecting commit: 5496b0b2 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces) : org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces) : (504, 547) --> (504, 547)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>...) : org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>...) : (404, 450) --> (404, 450)
[DEBUG] 
[DEBUG] === Inspecting commit: ea72e083 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean) : org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean) : (665, 702) --> (665, 702)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field) : org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field) : (652, 663) --> (652, 663)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>) : org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>) : (186, 199) --> (186, 199)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>) : org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>) : (201, 223) --> (201, 223)
[DEBUG] 
[DEBUG] === Inspecting commit: fc579b21 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection<?>) : org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection<?>) : (81, 86) --> (81, 86)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object) : org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object) : (70, 79) --> (70, 79)
[DEBUG] 
[DEBUG] === Inspecting commit: 85bc86b2 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/builder/DiffResult.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffResult.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle) : org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle) : (169, 195) --> (169, 195)
[DEBUG] 
[DEBUG] === Inspecting commit: 032252bf : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/builder/Diff.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/Diff.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.Diff.setValue(T) : org.apache.commons.lang3.builder.Diff.setValue(T) : (105, 117) --> (105, 117)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.Diff.Diff(String) : org.apache.commons.lang3.builder.Diff.Diff(String) : (51, 64) --> (51, 64)
[DEBUG] 
[DEBUG] === Inspecting commit: 45f99b7d : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/Validate.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Validate.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long) : org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long) : (929, 948) --> (929, 948)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String) : org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String) : (1132, 1153) --> (1132, 1153)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String) : org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String) : (994, 1015) --> (994, 1015)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String) : org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String) : (950, 971) --> (950, 971)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long) : org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long) : (1067, 1086) --> (1067, 1086)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double) : org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double) : (973, 992) --> (973, 992)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String) : org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String) : (1088, 1109) --> (1088, 1109)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double) : org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double) : (1111, 1130) --> (1111, 1130)
[DEBUG] 
[DEBUG] === Inspecting commit: 09f6ca49 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,String) : org.apache.commons.lang3.StringUtils.wrap(String,String) : (7751, 7787) --> (7752, 7788)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence) : org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence) : (7188, 7202) --> (7189, 7203)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.capitalize(String) : org.apache.commons.lang3.StringUtils.capitalize(String) : (5666, 5702) --> (5667, 5703)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset) : org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset) : (7704, 7719) --> (7705, 7720)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.join(Iterator<?>,char) : org.apache.commons.lang3.StringUtils.join(Iterator<?>,char) : (4018, 4063) --> (4018, 4064)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale) : org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale) : (7078, 7155) --> (7079, 7156)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence...) : org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence...) : (241, 268) --> (241, 268)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence...) : org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence...) : (340, 368) --> (340, 368)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence) : org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence) : (7204, 7216) --> (7205, 7217)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence...) : org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence...) : (370, 390) --> (370, 390)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence...) : org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence...) : (270, 289) --> (270, 289)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.uncapitalize(String) : org.apache.commons.lang3.StringUtils.uncapitalize(String) : (5704, 5740) --> (5705, 5741)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,char) : org.apache.commons.lang3.StringUtils.wrap(String,char) : (7721, 7749) --> (7722, 7750)
[DEBUG] 
[DEBUG] === Inspecting commit: 3506011d : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/RandomUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/RandomUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextFloat(float,float) : org.apache.commons.lang3.RandomUtils.nextFloat(float,float) : (149, 173) --> (149, 173)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextDouble(double,double) : org.apache.commons.lang3.RandomUtils.nextDouble(double,double) : (123, 147) --> (123, 147)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextInt(int,int) : org.apache.commons.lang3.RandomUtils.nextInt(int,int) : (70, 94) --> (70, 94)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextBytes(int) : org.apache.commons.lang3.RandomUtils.nextBytes(int) : (52, 68) --> (52, 68)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextLong(long,long) : org.apache.commons.lang3.RandomUtils.nextLong(long,long) : (96, 120) --> (96, 120)
[DEBUG] 
[DEBUG] === Inspecting commit: bf5c77aa : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ObjectUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ObjectUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object...) : org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object...) : (215, 247) --> (215, 247)
[DEBUG] 
[DEBUG] === Inspecting commit: be4a4345 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/LocaleUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/LocaleUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.LocaleUtils.toLocale(String) : org.apache.commons.lang3.LocaleUtils.toLocale(String) : (61, 157) --> (61, 157)
[DEBUG] 
[DEBUG] === Inspecting commit: c1a9fd5e : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/EnumUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/EnumUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E>,long...) : org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E>,long...) : (254, 278) --> (254, 278)
[DEBUG] 
[DEBUG] === Inspecting commit: 2b593ca6 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ClassUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces) : org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces) : (1153, 1239) --> (1153, 1239)
[DEBUG] 
[DEBUG] === Inspecting commit: ba391299 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ClassPathUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassPathUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String) : org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String) : (113, 137) --> (113, 137)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String) : org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String) : (64, 88) --> (64, 88)
[DEBUG] 
[DEBUG] === Inspecting commit: 284a0aff : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : (175, 215) --> (175, 215)
[DEBUG] 
[DEBUG] === Inspecting commit: b1ae2cdb : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ArrayUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int) : (1799, 1832) --> (1799, 1832)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int) : (1589, 1622) --> (1589, 1622)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int) : (1834, 1867) --> (1834, 1867)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int) : (1694, 1727) --> (1694, 1727)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int) : (1624, 1657) --> (1624, 1657)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int) : (1729, 1762) --> (1729, 1762)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int) : (1764, 1797) --> (1764, 1797)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int) : (1659, 1692) --> (1659, 1692)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int) : (1554, 1587) --> (1554, 1587)
[DEBUG] 
[DEBUG] === Inspecting commit: d0524536 : [ba8c6f6 Add some missing tests.] src/test/java/org/apache/commons/lang3/ValidateTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: e37aaaca : [d965865 LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.] src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1af89321 : [d965865 LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0c952f0d : [d965865 LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2fbf6166 : [8f9a427 Fix broken JavaDoc] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 8c339545 : [68a6fd6 TypeUtils wildcard fixes] src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : (1801, 1817) --> (1801, 1817)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : (1616, 1630) --> (1616, 1630)
[DEBUG] 
[DEBUG] === Inspecting commit: 1b856808 : [6f688e4 add some failing tests with wildcards] src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c967d879 : [9a16b76 Using Validate where possible in time package.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : (116, 160) --> (117, 159)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : (256, 411) --> (255, 409)
[DEBUG] 
[DEBUG] === Inspecting commit: 6572a809 : [5a28357 Using Validate where possible in math package.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.validateArray(Object) : org.apache.commons.lang3.math.NumberUtils.validateArray(Object) : (1086, 1098) --> (1087, 1098)
[DEBUG] 
[DEBUG] === Inspecting commit: f068c5e8 : [5a28357 Using Validate where possible in math package.] src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(double...) : org.apache.commons.lang3.math.IEEE754rUtils.max(double...) : (149, 173) --> (150, 173)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(double...) : org.apache.commons.lang3.math.IEEE754rUtils.min(double...) : (29, 53) --> (31, 55)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(float...) : org.apache.commons.lang3.math.IEEE754rUtils.min(float...) : (55, 79) --> (57, 80)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(float...) : org.apache.commons.lang3.math.IEEE754rUtils.max(float...) : (175, 199) --> (175, 198)
[DEBUG] 
[DEBUG] === Inspecting commit: 6fdc842b : [a2c356d Using Validate where possible in concurrent package.] src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int) : org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int) : (190, 224) --> (192, 224)
[DEBUG] 
[DEBUG] === Inspecting commit: 56673c60 : [a2c356d Using Validate where possible in concurrent package.] src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable) : org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable) : (134, 150) --> (136, 150)
[DEBUG] 
[DEBUG] === Inspecting commit: 20de1f05 : [10641f9 Using Validate where possible in builder package.] src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: fc8eabfd : [10641f9 Using Validate where possible in builder package.] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int) : org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int) : (521, 547) --> (522, 544)
[DEBUG] 
[DEBUG] === Inspecting commit: cda5a10a : [3728344 LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(float...) : org.apache.commons.lang3.math.NumberUtils : (904, 930)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(double...) : org.apache.commons.lang3.math.NumberUtils : (1030, 1056)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(int...) : org.apache.commons.lang3.math.NumberUtils : (958, 980)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(long...) : org.apache.commons.lang3.math.NumberUtils : (780, 802)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(byte...) : org.apache.commons.lang3.math.NumberUtils : (1006, 1028)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(int...) : org.apache.commons.lang3.math.NumberUtils : (804, 826)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(byte...) : org.apache.commons.lang3.math.NumberUtils : (852, 874)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(float...) : org.apache.commons.lang3.math.NumberUtils : (1058, 1084)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(short...) : org.apache.commons.lang3.math.NumberUtils : (828, 850)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(short...) : org.apache.commons.lang3.math.NumberUtils : (982, 1004)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(double...) : org.apache.commons.lang3.math.NumberUtils : (876, 902)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(long...) : org.apache.commons.lang3.math.NumberUtils : (934, 956)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(short[]) : org.apache.commons.lang3.math.NumberUtils : (974, 995)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(long[]) : org.apache.commons.lang3.math.NumberUtils : (928, 949)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(long[]) : org.apache.commons.lang3.math.NumberUtils : (780, 801)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(int[]) : org.apache.commons.lang3.math.NumberUtils : (803, 824)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(double[]) : org.apache.commons.lang3.math.NumberUtils : (1020, 1045)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(float[]) : org.apache.commons.lang3.math.NumberUtils : (1047, 1072)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(double[]) : org.apache.commons.lang3.math.NumberUtils : (872, 897)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(byte[]) : org.apache.commons.lang3.math.NumberUtils : (997, 1018)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(short[]) : org.apache.commons.lang3.math.NumberUtils : (826, 847)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(byte[]) : org.apache.commons.lang3.math.NumberUtils : (849, 870)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(int[]) : org.apache.commons.lang3.math.NumberUtils : (951, 972)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(float[]) : org.apache.commons.lang3.math.NumberUtils : (899, 924)
[DEBUG] 
[DEBUG] === Inspecting commit: 419381fb : [3728344 LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(double...) : org.apache.commons.lang3.math.IEEE754rUtils : (149, 173)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(double...) : org.apache.commons.lang3.math.IEEE754rUtils : (29, 53)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(float...) : org.apache.commons.lang3.math.IEEE754rUtils : (55, 79)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(float...) : org.apache.commons.lang3.math.IEEE754rUtils : (175, 199)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(double[]) : org.apache.commons.lang3.math.IEEE754rUtils : (147, 170)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(float[]) : org.apache.commons.lang3.math.IEEE754rUtils : (54, 77)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(float[]) : org.apache.commons.lang3.math.IEEE754rUtils : (172, 195)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(double[]) : org.apache.commons.lang3.math.IEEE754rUtils : (29, 52)
[DEBUG] 
[DEBUG] === Inspecting commit: f498174f : [3728344 LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7f91e806 : [10f136b Use the term distance in documentation of getFuzzyDistance] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f887fce7 : [a2f44d0 Make checkstyle happy] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,String) : org.apache.commons.lang3.StringUtils.wrap(String,String) : (7747, 7782) --> (7748, 7784)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,char) : org.apache.commons.lang3.StringUtils.wrap(String,char) : (7718, 7745) --> (7718, 7746)
[DEBUG] 
[DEBUG] === Inspecting commit: 9470424d : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/test/java/org/apache/commons/lang3/StringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 37ba70f5 : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale) : org.apache.commons.lang3.StringUtils : (7075, 7152)
[DEBUG] 
[DEBUG] === Inspecting commit: 01de1333 : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 88b89120 : [287aba5 Tab police] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0f75a7b7 : [287aba5 Tab police] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9b653321 : [d16c62a Clarify that 0.d is decimal, not octal] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 76f4699b : [21cbe95 Explained treatment of leading zeroes in isNumber() method Javadoc.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ca6e94d0 : [39a5b77 Corrected Javadoc example.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 30a9c9c4 : [daf4b4f Further tidying of Javadoc.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 7e7e4245 : [01fe918 Correct wrong documentation regarding extensibility of ImmutablePair and ImmutableTriple. This closes #13 from github.] src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: dab225e6 : [01fe918 Correct wrong documentation regarding extensibility of ImmutablePair and ImmutableTriple. This closes #13 from github.] src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0bde74a4 : [bd7a8d5 Dummy commit which closes #22 from github] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 91914789 : [9376d1e Dummy commit which closes #21 from github] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 77acac48 : [da147fc Add Thiago Andrade to the list of contributors for his contributions via github.] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: d02f3ee9 : [4b28af1 Fix typo] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: a0fc6aaa : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/test/java/org/apache/commons/lang3/StringUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 56d88b17 : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/StringUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,String) : org.apache.commons.lang3.StringUtils : (7672, 7707)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,char) : org.apache.commons.lang3.StringUtils : (7639, 7670)
[DEBUG] 
[DEBUG] === Inspecting commit: 23adcde8 : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: a0df7d1f : [80f1988 Point potential contributors to the TagList report] src/site/xdoc/index.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 289f93ed : [cef1ca2 Use finer grained TagList configuration proposed by Bernd Eckenfels for the csv components] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 5fec22b3 : [7d6e0be LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1f132f85 : [7d6e0be LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN : String : org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN : String : (62, 69) --> (62, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: 160a4be0 : [7d6e0be LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7ea3ee5f : [d910918 LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b6d1c039 : [d910918 LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: a43cfca7 : [75fbc00 LANG-731: Better Javadoc for BitField class] src/main/java/org/apache/commons/lang3/BitField.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/BitField.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: fbfef6de : [75fbc00 LANG-731: Better Javadoc for BitField class] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 806f6724 : [d44f573 Add Michael Osipov to the list of contributors for his contributions to DurationFormatUtils] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 34e576df : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/test/java/org/apache/commons/lang3/time/StopWatchTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: df5967fe : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: bf3a23bc : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long) : org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long) : (72, 84) --> (72, 83)
[DEBUG] 
[DEBUG] === Inspecting commit: ab05c4c7 : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 40b36d7c : [00dc479 Remove tab characters] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6437a49c : [2f0beab Remove more debug output (which is never actually written out)] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: f548897c : [98f76f4 Remove debug output from test] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: ee5c9ef9 : [4b74c38 LANG-1003: DurationFormatUtils are not able to handle negative duration/periods. Document new behavior for negative inputs.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : (114, 157) --> (117, 161)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : (250, 404) --> (257, 412)
[DEBUG] 
[DEBUG] === Inspecting commit: 137dda1c : [2486300 Removed unnecessary multiplication by one.] src/main/java/org/apache/commons/lang3/Conversion.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : (1567, 1599) --> (1567, 1599)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : (1025, 1060) --> (1025, 1060)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : (1135, 1169) --> (1135, 1169)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : (1062, 1096) --> (1062, 1096)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : (1098, 1133) --> (1098, 1133)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : (1636, 1667) --> (1636, 1667)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : (1601, 1634) --> (1601, 1634)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : (1533, 1565) --> (1533, 1565)
[DEBUG] 
[DEBUG] === Inspecting commit: 8b1d9ce3 : [64ef8a8 LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 50c59cb5 : [64ef8a8 LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : (114, 154) --> (114, 157)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : (247, 398) --> (250, 404)
[DEBUG] 
[DEBUG] === Inspecting commit: 350c68d6 : [64ef8a8 LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1d51d6dd : [358f139 Organize imports, don't use wildcard imports] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 36412843 : [548e5c4 Use org.junit.Assert.assertArrayEquals] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: ccf8d219 : [fe354be Remove commented out test code] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 461a0111 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: cc589653 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/StopWatch.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/StopWatch.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2793c649 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 4d1779d0 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/FastDateFormat.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateFormat.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: fdf70166 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 3fa095ea : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2ecb1d81 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0cf09998 : [6125951 LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.] src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2871baf1 : [6125951 LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.] src/main/java/org/apache/commons/lang3/text/StrBuilder.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrBuilder.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable) : org.apache.commons.lang3.text.StrBuilder : (2657, 2681)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.readFrom(Readable) : org.apache.commons.lang3.text.StrBuilder : (427, 466)
[DEBUG] 
[DEBUG] === Inspecting commit: f759d9eb : [6125951 LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: c0c46390 : [d13a402 Remove keyValues map  per sebb's suggestion] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : (601, 616) --> (600, 615)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String) : (631, 647) --> (630, 646)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder) : (618, 629) --> (617, 628)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.keyValues : Map<String, Integer> : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy : (598, 598)
[DEBUG] 
[DEBUG] === Inspecting commit: 4abc1d3f : [d9bd12d Rename TextStrategy to CaseInsensitiveTextStrategy per sebb's suggestion] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar) : org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar) : (535, 554) --> (535, 554)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy : org.apache.commons.lang3.time.FastDateParser : (592, 648)
[DEBUG] Delete: CLASS: org.apache.commons.lang3.time.FastDateParser.TextStrategy : org.apache.commons.lang3.time.FastDateParser : (592, 648)
[DEBUG] 
[DEBUG] === Inspecting commit: 130d4347 : [454fd1e Add another missing ticket to changes.xml] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: ff2289d5 : [b464711 Add missing bug fix to changes.xml] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 87298382 : [804e5f8 Merge qualifiers] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : (618, 629) --> (618, 629)
[DEBUG] 
[DEBUG] === Inspecting commit: da8e0167 : [f4b7d62 LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 32191568 : [f4b7d62 LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 3c164ffe : [f4b7d62 LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDateFormat.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateFormat.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 7a26b6ce : [649a089 LANG-1088 - toLowerCase should use locale, additional unit tests for case-insensitive matching] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: c4baf2c1 : [649a089 LANG-1088 - toLowerCase should use locale, additional unit tests for case-insensitive matching] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : (621, 637) --> (623, 639)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : (592, 606) --> (593, 608)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.locale : Locale : org.apache.commons.lang3.time.FastDateParser.TextStrategy : (589, 589)
[DEBUG] 
[DEBUG] === Inspecting commit: 368d1bbe : [3b2de24 LANG-1088 - FastDateParser should be case insensitive] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: d2a96d81 : [3b2de24 LANG-1088 - FastDateParser should be case insensitive] src/main/java/org/apache/commons/lang3/time/FastDateParser.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : (614, 630) --> (621, 637)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : (590, 599) --> (592, 606)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : (601, 612) --> (608, 619)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.lKeyValues : Map<String, Integer> : org.apache.commons.lang3.time.FastDateParser.TextStrategy : (590, 590)
[DEBUG] 
[DEBUG] === Inspecting commit: ea31491c : [e288d39 Use enhanced for loop] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : (401, 458) --> (401, 456)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : (567, 582) --> (565, 579)
[DEBUG] 
[DEBUG] === Inspecting commit: c222ec55 : [5d9141e Added Javadoc to clear checkstyle error] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 48a4ae75 : [fbb0f7f LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya] src/test/java/org/apache/commons/lang3/text/WordUtilsTest.java ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7e9722f5 : [fbb0f7f LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya] src/main/java/org/apache/commons/lang3/text/WordUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/WordUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean) : org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean) : (100, 225) --> (100, 229)
[DEBUG] 
[DEBUG] === Inspecting commit: 07e8ef9c : [fbb0f7f LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0cd67210 : [d99f581 Clean up Javadocs. You do not need to refer to classes in java.lang with a FQCN.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ffb12e15 : [3efd6cc Refactor magic number into constant.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : (106, 132) --> (108, 134)
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : (60, 83) --> (62, 85)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.CharSequenceUtils.NOT_FOUND : int : org.apache.commons.lang3.CharSequenceUtils : (29, 29)
[DEBUG] 
[DEBUG] === Inspecting commit: 0b6b8a75 : [4eb70a5 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence) : org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence) : (155, 172) --> (155, 171)
[DEBUG] 
[DEBUG] === Inspecting commit: c6708e08 : [70d9e8b Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : (174, 215) --> (174, 214)
[DEBUG] 
[DEBUG] === Inspecting commit: 28da524e : [39168bb Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : (106, 133) --> (106, 132)
[DEBUG] 
[DEBUG] === Inspecting commit: e4a0ab0f : [3e33304 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : (60, 84) --> (60, 83)
[DEBUG] 
[DEBUG] === Inspecting commit: 29141a9a : [6b438fe Add next version to changes.xml] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7b8d8f8d : [8a52863 Document 3.3.2 in doap] doap_lang.rdf ===
[DEBUG] 
[DEBUG] === Inspecting commit: 68d6d375 : [5bcbf2e Update README.md after release 3.3.2] README.md ===
[DEBUG] 
[DEBUG] === Inspecting commit: 95d23872 : [d72d2b0 Document 3.3.2 release date] src/site/xdoc/release-history.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: cf2d9813 : [d72d2b0 Document 3.3.2 release date] src/changes/changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: b515a66e : [0105640 Bump version after release of 3.3.2] pom.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7d364559 : [0105640 Bump version after release of 3.3.2] default.properties ===
[DEBUG] 

[OUTPUT] Analysing Hunk Dependency ... 
[DEBUG] Done: [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/ClassUtils.java
[DEBUG] Done: [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/main/java/org/apache/commons/lang3/StringUtils.java
[DEBUG] Done: [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
[DEBUG] Done: [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
[DEBUG] Done: [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/StringUtils.java
[DEBUG] Done: [a2f44d0 Make checkstyle happy] src/main/java/org/apache/commons/lang3/StringUtils.java
[DEBUG] Done: [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/StringUtils.java
[DEBUG] Done: [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/main/java/org/apache/commons/lang3/StringUtils.java
[DEBUG] Done: [daf4b4f Further tidying of Javadoc.] src/main/java/org/apache/commons/lang3/StringUtils.java
[DEBUG] Hunk depends on: f887fce7 : [a2f44d0 Make checkstyle happy] src/main/java/org/apache/commons/lang3/StringUtils.java : added back.
[DEBUG] Hunk depends on: 37ba70f5 : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/main/java/org/apache/commons/lang3/StringUtils.java : added back.
[DEBUG] Hunk depends on: 30a9c9c4 : [daf4b4f Further tidying of Javadoc.] src/main/java/org/apache/commons/lang3/StringUtils.java : added back.
[DEBUG] Hunk depends on: 56d88b17 : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/StringUtils.java : added back.
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.text.StrBuilder.append(CharSequence)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.CharUtils.unicodeEscaped(char)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.math.NumberUtils.createNumber(String)
org.apache.commons.lang3.math.NumberUtils.getMantissa(String)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.math.NumberUtils.createNumber(String)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(short[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(byte[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(long[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt)
org.apache.commons.lang3.ArrayUtils.isSorted(int[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(char[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])}
[DEBUG] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java : 2bdf8687e1779765b642c54683d77601918451b5
[DEBUG] src/main/java/org/apache/commons/lang3/SystemUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java : 7610d280eb1e81f88cb1944b8db3f237146ad440
[DEBUG] src/main/java/org/apache/commons/lang3/time/FastDateParser.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java : ce5000030fa8ac5f0cf574e6f98af5aa0014362e
[DEBUG] src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java : 5c87d4a66ec1384e991a31b973f1da84b631cd76
[DEBUG] src/main/java/org/apache/commons/lang3/text/StrLookup.java : ebf5060cb1728bd03171526e5fd1b5077a9dcce7
[DEBUG] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java : c069afea52ad69b63a01ebbcb60e467d77242ada
[DEBUG] src/main/java/org/apache/commons/lang3/Conversion.java : 52ec52d420bc66bc27719067ac298efa266c0074
[DEBUG] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/text/StrBuilder.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java : 8f5076fe1bbb63cb4b14f6970320ae49542397d3
[DEBUG] src/main/java/org/apache/commons/lang3/BooleanUtils.java : db96f2d6318a285bf8ce97e97cf5bba0bf763b78
[DEBUG] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/time/DateUtils.java : bdf6d408a838690247797f2326e53141fc5a4a56
[DEBUG] src/main/java/org/apache/commons/lang3/CharUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java : ba067dae53311f7382101492c34c514e13621ad1
[DEBUG] src/main/java/org/apache/commons/lang3/math/NumberUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java : 419381fbd0102e13d8f66bc9e4c6bca0ebd76088
[DEBUG] src/main/java/org/apache/commons/lang3/StringUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/ArrayUtils.java : 16210c327a11b846f30adb578f87fd80177c53ab

[DEBUG] Original |H| 504
[DEBUG] Tracker:
[
7d364559841969de4c14754b4f5559913c5c3192 : []
b515a66e6c86d41cc6e886b61028e3774af3d82a : []
cf2d98132bbc08938289895bd2a20596855e42f4 : []
95d23872465ced652a289ed7e3b6982bf1ac5d38 : []
68d6d3756a3e9ace4a6308ebb6c14d39433d8923 : []
7b8d8f8d2defe4a8be1b8994bab441f054b2ea90 : []
29141a9a96c3522360d7bb1a512fa560b5b7c752 : []
e4a0ab0ff8e5d6a7de972c6470325e9e40268ed6 : [[org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int):UPD,COMP]]
28da524eeace386a99404810d3bbe9af8ca717f4 : [[org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int):UPD,DROP]]
c6708e08d4aea65ac7ec40c3a1b48f38c530dc6b : [[org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int):UPD,DROP]]
0b6b8a756d3c0b2e482d9c9ab68355e2afb00c0f : [[org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence):UPD,DROP]]
ffb12e152cbec50e98384360a513209822b8a6f0 : [[org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int):UPD,DROP], [org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int):UPD,COMP], [org.apache.commons.lang3.CharSequenceUtils.NOT_FOUND : int:INS,DROP]]
0cd6721037c51d9549d1f986051eec18f4b4c668 : []
07e8ef9c06a4f69c842d60821cbc0e2883f53f1a : []
7e9722f50774d714af724b79298904239257327e : [[org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean):UPD,DROP]]
48a4ae7567dc652b3740b076db750a7162682292 : []
c222ec55b1d31ddab4df1f72ef2b909a4c551d3f : []
ea31491ccda6fbdf05481c7f72beaa187cba0097 : [[org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object):UPD,DROP]]
d2a96d817715794dce559fa665bb34bee84d208c : [[org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.lKeyValues : Map<String, Integer>:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale):UPD,DROP]]
368d1bbea80351fda3678e35ef78632dcee1f2c3 : []
c4baf2c1de17de1ba6f8e889f6981e31e56a3b79 : [[org.apache.commons.lang3.time.FastDateParser.TextStrategy.locale : Locale:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP]]
7a26b6cefbcca235533e72e2e98398224a302bbc : []
3c164ffe738254b1e4c67d561c902cd6f0ee99ec : []
32191568abc0f027492ada96a1537d8fa85b3cef : []
da8e01672827fc4801c212fa65a5d8c9feb923e9 : []
87298382145a5d70c0d9766b103bc668300da04f : [[org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP]]
ff2289d5913de81e4e224bd38427d1296f9130b2 : []
130d43472775720bb0c7361037449795fb266aae : []
4abc1d3f1e334ab36cda5f6e55ee494fa3dd2ffd : [[org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar):UPD,DROP]]
c0c463908d15d85d3e4da621fb67cc5f235eb436 : [[org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.keyValues : Map<String, Integer>:DEL,DROP]]
f759d9ebce5a081aa017a08f1cf89cf20aceb826 : []
2871baf10efdd01128177fac4175ea3e02ed001a : [[org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable):INS,DROP], [org.apache.commons.lang3.text.StrBuilder.readFrom(Readable):INS,DROP]]
0cf09998c491fcdd576a67514a2ea533d6ce4ed2 : []
2ecb1d81986ee04618f859d63dd18971b3dba33c : []
3fa095ea954d57c95a7ce12118c887f4a1296465 : []
fdf7016627dc5c41b84d6d1cf73a003a888f7b5b : []
4d1779d0f2c02873d5eedb298d5a954d2154b6e9 : []
2793c649649d29baa21aa5add0f03d66d5fc78ec : []
cc589653f7dfb8ff655af4311e41bc344baac1ee : []
461a01116f46f8207feee5c7c8efcc2ef0374ce4 : []
ccf8d219b1ac9af508cb2ebf4570a76cd7856bf2 : []
36412843da208a94910a1a5ad29a5b35a6aca26f : []
1d51d6dd30955a935102f8640ee2b94746692bd7 : []
350c68d6211ee2a419f41b0ccc6fcc840e8f17cd : []
50c59cb58fd61ceef9d02bb9b9eef35ab9751082 : [[org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean):UPD,DROP]]
8b1d9ce3a673208fb05a45b90c94e68977b6fc10 : []
137dda1c716d89ebde7ed0017133169aea1fe38e : [[org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int):UPD,DROP]]
ee5c9ef9289f603b687cd5435f976328ce4dc201 : [[org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean):UPD,DROP]]
f548897cec390fa0e799940808c7121133560fa9 : []
6437a49c5ba71feb913238bc3b4993d491ddba27 : []
40b36d7c6408da7d618f9260e21dbd2ffe75293d : []
ab05c4c7750b623725697495f313c821964aa0e8 : []
bf3a23bc54cfc7580d99327896956a960f60b068 : [[org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long):UPD,DROP]]
df5967fe47e61336f0d40087cc3443449c232ca8 : []
34e576df0b19fbc097d36c43d66a4e84e4533c73 : []
806f672455344281b86612aeefeeb64f1c786ea6 : []
fbfef6ded439127a280ba5886a02f89815cc6045 : []
a43cfca72a09069cc9193092ddbd1843d3b41aae : []
b6d1c0395323c21d73a41fe2290db4219750a8b4 : []
7ea3ee5f82de612c99988cb592aecc4d04fb6e1a : []
160a4be0de78d71cab77a41eb2126980d08b9d00 : []
1f132f854a0d07635535e4649c9d237aaf5d265a : [[org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN : String:UPD,DROP]]
5fec22b3d404d00417d04d863809cb0807a9ce29 : []
289f93edcb75e6769745647b552db71fdfff9403 : []
a0df7d1fc21143c4e2571fc78a748d633f817082 : []
23adcde8136ab0d1aeb2efdf520ffa6c9a49ccdf : []
56d88b17ed3e884942f7416b7b08ec71033c3372 : [[org.apache.commons.lang3.StringUtils.wrap(String,String):INS,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,char):INS,DROP]]
a0fc6aaa86c19a6a5ec73faa9595fc716642a691 : []
d02f3ee94639bb7c0af18662281cfd05774bdee6 : []
77acac48dead4e35693c12df222ea8e733eca0c4 : []
91914789c608e2ec0ccf6ab71910127757e90a0a : []
0bde74a4f615f9781722fc097bfec82f6f648cc0 : []
dab225e6f455bbedc5156746b0a6e698874ba8be : []
7e7e4245a92705a56526e102e9a432153c08d07a : []
30a9c9c4e255b17dd7f16879864b7ccc05bab2a0 : []
ca6e94d01e53a826860e6fda3607f1e67058a952 : []
76f4699b0ef39cb73c88c9fceb4b1831bcfd0979 : []
9b6533210b5837d762b608f2b69ec528b1219395 : []
0f75a7b717a276b5494d79a618094135882d3e54 : []
88b89120a4f4d37c67d0b3a461ad0b2c7016d112 : []
01de13337f0ba05f1ffa88330e1e2c2c6263035b : []
37ba70f59298e0b52b4401ef4c869a9a35b5090a : [[org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale):INS,DROP]]
9470424d5a3ea2d1fb384131d553af6ef954c8f6 : []
f887fce7cdca22b291b50c5888fb2011aee198a1 : [[org.apache.commons.lang3.StringUtils.wrap(String,char):UPD,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,String):UPD,DROP]]
7f91e806e1011aea6729c985cf9affa0d07c7a2e : []
f498174f96eb8f40b4d9a7248e9a37a182a3f4c2 : []
419381fbd0102e13d8f66bc9e4c6bca0ebd76088 : [[org.apache.commons.lang3.math.IEEE754rUtils.max(double[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(double[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(float[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(float[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(double...):INS,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(float...):INS,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(double...):INS,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(float...):INS,DROP]]
cda5a10aa39b4c9119d6b28d9b7f9b3b3ea82c25 : [[org.apache.commons.lang3.math.NumberUtils.max(long...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(short...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(byte...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(byte[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(int...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(long[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(double[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(byte[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(int[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(float[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(float...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(long[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(float...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(double...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(double...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(int[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(short[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(short...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(long...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(double[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(short[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(byte...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(int...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(float[]):DEL,DROP]]
fc8eabfdc9348341bc5e8e06599404b55d56f8b8 : [[org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int):UPD,DROP]]
20de1f0514177461518e86663545e7b6b8eb7293 : []
56673c60cb74efabb9dbfb301fec97e61de742ec : [[org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable):UPD,DROP]]
6fdc842b677babed437240c761bcd532e9d1e7c2 : [[org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int):UPD,DROP]]
f068c5e898307dc3da5c752c4ae7621eb77d2039 : [[org.apache.commons.lang3.math.IEEE754rUtils.max(double...):UPD,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(float...):UPD,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(float...):UPD,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(double...):UPD,DROP]]
6572a809a960fdf5b6d8860d2508c4190b502d46 : [[org.apache.commons.lang3.math.NumberUtils.validateArray(Object):UPD,DROP]]
c967d879052009d7ef48ab97c580eafa0cf4b73b : [[org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean):UPD,DROP]]
1b8568083f711155505e89ab773fd05c86e3eae3 : []
8c3395454ff8dfaac84d92ac9b26a1410ca1dcf0 : [[org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type):UPD,DROP]]
2fbf6166bed9d121bc7512dfe641f7ec369740bd : []
0c952f0d5681681cfc750de2aca7a70d16080127 : []
1af89321dfd82386ba54853404f5b4eb58939378 : []
e37aaaca76d4d765897fad0911f9dbbf74d63d57 : []
d0524536abb1b4446c2b9ffad53ba7e93faa4a4f : []
b1ae2cdbbcca209a3b61308e8cffc133b65ac08c : [[org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int):UPD,DROP]]
284a0afff19b41a717a2c07c19268b7e2e26a1ae : [[org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int):UPD,DROP]]
ba391299cf2bea9da14d9b1c005b92ffc931af16 : [[org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String):UPD,DROP], [org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String):UPD,DROP]]
2b593ca67d54bda07d927a91fba731e5ee3d172c : [[org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces):UPD,DROP]]
c1a9fd5e1a572d129fba9cbc98a6dec42580a2cc : [[org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E>,long...):UPD,DROP]]
be4a4345df5552a0bdd791837a8532567d5089d3 : [[org.apache.commons.lang3.LocaleUtils.toLocale(String):UPD,DROP]]
bf5c77aa86e0fea38ad28bf2602c2895ce3bc57d : [[org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object...):UPD,DROP]]
3506011d5c96a4b96047e8e03a3d9563cac5c044 : [[org.apache.commons.lang3.RandomUtils.nextInt(int,int):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextDouble(double,double):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextBytes(int):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextFloat(float,float):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextLong(long,long):UPD,DROP]]
09f6ca49bedfa4e6564dd21d5d6e686e25ddae3f : [[org.apache.commons.lang3.StringUtils.uncapitalize(String):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence):UPD,DROP], [org.apache.commons.lang3.StringUtils.capitalize(String):UPD,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,String):UPD,DROP], [org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale):UPD,DROP], [org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence):UPD,DROP], [org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset):UPD,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,char):UPD,DROP], [org.apache.commons.lang3.StringUtils.join(Iterator<?>,char):UPD,TEST]]
45f99b7d16392f243b8223fb9f9437eb7eb54409 : [[org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double):UPD,DROP]]
032252bf8cdce7d78c266ff59f7a834ca812b98d : [[org.apache.commons.lang3.builder.Diff.setValue(T):UPD,DROP], [org.apache.commons.lang3.builder.Diff.Diff(String):UPD,DROP]]
85bc86b27251b929f3c6e3d7b1763b2755c4d16c : [[org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle):UPD,DROP]]
fc579b214c8d6090b406df755aebc5016510c95a : [[org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object):UPD,DROP], [org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection<?>):UPD,DROP]]
ea72e083aa40454799313ed2225e44609fe77dbd : [[org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean):UPD,DROP]]
5496b0b2cf73e652635e043c33cdc0833832cf57 : [[org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces):UPD,DROP], [org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>...):UPD,DROP]]
1981ef326123ae7d8afd2499217ba01db420f5ff : [[org.apache.commons.lang3.reflect.TypeLiteral.equals(Object):UPD,DROP]]
fd3ae0fc363ecb5cbdedb3498c6a6448bd591bd3 : [[org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withUpperBounds(Type...):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[]):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withLowerBounds(Type...):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[]):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.equals(Object):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.equals(Object):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.WildcardTypeImpl(Type[],Type[]):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.GenericArrayTypeImpl(Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.equals(Object):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type...):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.toString(Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<?>):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.ParameterizedTypeImpl(Class<?>,Type,Type[]):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType):UPD,DROP]]
76127a2b53474af6efabdfa40e8545a344323f8a : [[org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder):UPD,DROP]]
36fbb1d8add82ed53de4da922a4f95433925827e : [[org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char):UPD,DROP], [org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer):UPD,DROP], [org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char):UPD,DROP]]
04b67ac7a95328172a983a0814e67803bb50fd80 : [[org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer):UPD,DROP]]
ae2ed8fdc3180bee7e286b3588750af4b853b4e4 : [[org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit):UPD,DROP]]
f9f60df3cc879b3c0652b0418fc5d61dcd43ab57 : [[org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object):UPD,DROP]]
30854e76a8af45070667e29431b6753b6dcf8227 : [[org.apache.commons.lang3.time.FastDateParser.init(Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.adjustYear(int):UPD,DROP]]
b529818f45a64d1cced0033a430bc1fff8efa53f : [[org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale):UPD,DROP], [org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale):UPD,DROP], [org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale):UPD,DROP]]
b3f81f980cff6b72c8d8532cea70cef9a63f21cd : []
20f9d767d97a2fb4d27a1b71a9b74a46bd8df7e8 : []
3ea70c13db1b1ac49090b21938ceda2d12be2711 : []
d952f5d1b956448bec4a17ddead574ee12800d86 : []
ac4c8351e276d994b4d6066f35046860df76914b : []
f488410ce12fe35fb70798ce81b5bfb1675920af : []
35e8306fc68cd0e5fe56d6cc6fef411530fc050e : []
8e22cc143f514ab82fa80d5ee55e4c8c4f122799 : []
fb5c4aca53481ce98cae360250c4c05a0d6a28f7 : []
c2c8449e6856d109aa00c49d0e95066e71c876a8 : []
9a6c70143c528dd2c5c3455c07d7d18f4615dc27 : []
c50e6164310fb7f1e99333852782c8a85d311cb7 : []
9da93e09e40904dc1d75f7f230ffb893df6bd063 : []
8e224df23069ff651594af8e15164000d29dc3b4 : []
10562baada77eb4f7a7c70d166229afcaae9daf8 : []
48629884ca5314766c26a7f5a7db5c4c01b5367f : []
2cf00a8ad088dac424254c8d38f8f66b3a7665d9 : []
3cdeacee4d4ecc2bc68b8e943cb2184971581a96 : []
aa45e601c4284e132f1a5672507d48ae7c6303f5 : []
42b76a2efd39f2481023bff0670bddd44e7178be : []
8fd936dd5e80c3143e8171aff6c436f0902eceaa : []
d7423c1dc983f38e93d645f0e1d8dd306276a4b9 : []
ce5917d6d2840aad92b2b6df636d3f095e499be6 : []
0ac4cce7b672f16abadb3d4e7962363f7214c975 : [[org.apache.commons.lang3.ClassUtils.getCanonicalName(String):UPD,DROP]]
04af2f0e9ebdaf37c5d458229d93a6afef7f69d8 : [[org.apache.commons.lang3.ClassUtils.getCanonicalName(String):UPD,DROP]]
7e4502f5407fe5f534d51663b48d1a2ae18b20ea : [[org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int):UPD,DROP]]
a3fbff94ee9fcf7613fb670208dc27d2ef3e1d1d : [[org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer):UPD,DROP]]
e08d94596ee11d88309ccd15b55f357b6fa3d869 : [[org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer):UPD,DROP]]
e6b8441f2e96900686da197a3ce68c3c7e9d0662 : [[org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List<String>):UPD,DROP]]
86754fde5894ed149712bebedb8364d195cb888b : [[org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass):UPD,DROP]]
29a953e1dec6da1ddfd2ac95ec5b4a64235f5be5 : [[org.apache.commons.lang3.LocaleUtils.toLocale(String):UPD,DROP]]
ac0610ec16dce8dfc0a83a6257038e2c17e7388a : [[org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int):UPD,DROP]]
2cb7a6e28ac64b74e76447f63743915053e04199 : []
9f6411706e2ac7f6de77416b6c0619c4b604ced2 : [[org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int):UPD,DROP]]
52ec52d420bc66bc27719067ac298efa266c0074 : [[org.apache.commons.lang3.Conversion.TFFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TFFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char):UPD,DROP], [org.apache.commons.lang3.Conversion.TFTF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FTFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TFTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FTTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FTFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFTF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.hexDigitToBinary(char):UPD,DROP], [org.apache.commons.lang3.Conversion.FTTF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTTF : boolean[]:INS,DROP]]
706064c3b8b88f7d989c8d4267485a12524a925a : [[org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int):UPD,DROP]]
b362bea25797e2170f6128b414f2760a050e2876 : []
e63e0a9b1248fe8be0704cf01852969b10ec3e95 : []
0aecc9991fc1bb67a29d62cc3477bd2f3e436379 : [[org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[]):UPD,DROP]]
31551b3492dd87c4eea35b0f506d84b554d320e2 : [[org.apache.commons.lang3.math.Fraction.getFraction(String):UPD,DROP], [org.apache.commons.lang3.math.Fraction.invert():UPD,DROP], [org.apache.commons.lang3.math.Fraction.pow(int):UPD,DROP]]
88267a9bdb4f1ac473692a64f53d68781ceebfb3 : []
94e843cc8bee2c864cb701609da3faa67823daf8 : [[org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>):UPD,DROP]]
a3fd7e127650694b20e9d0c8d8434d5de248f363 : [[org.apache.commons.lang3.LocaleUtils.toLocale(String):UPD,DROP]]
2a93c33b869fe8c7d6b5819d1da76d8b129d0c5f : [[org.apache.commons.lang3.Conversion.hexDigitToBinary(char):UPD,DROP], [org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char):UPD,DROP]]
936d33f986f3c8b41a0eb33c92c0bb55f008e7f1 : []
92b881a2aee904c5a53220fb9d294135dd38d51a : []
f4743170f75a4388b8f4e1da6b99f0d6e47467a2 : []
1c3ce833a7ba326f6c77ccd44acde03d34dfcd03 : [[org.apache.commons.lang3.math.NumberUtils.isParsable(String):INS,DROP]]
0a32305ca531b887c552031d360b116fd11feecf : []
0f4f9585c9ac335c1e1704fe6e82680f7f4ed0f6 : []
6acd701755bc1706d68de48b8a5297a31b92501c : [[org.apache.commons.lang3.math.NumberUtils.isParsable(String):UPD,DROP]]
94122b52a1f273cb5c70ec3033850fcda6e9bdbb : []
950003e1bb7934375a4138183d21f20ce31a26e9 : []
b018e1eba48589fadf327c293fbb669cb22f2c95 : []
e36136928f04f141f5cb23f5b67d11dc0ed100a4 : []
afb27ea326d9f180f4e69f35d0287df9f7a473b8 : []
27ea4e52277b6ee406207e227214162cd8ef6612 : []
2a046e1ae8b25294587dea6a2a92d457c0c1df1e : []
d5d4f3d93d800bae6fa15e29b16279f2316b3ec2 : []
e19992891fff9f385034745471796cc342d22cab : []
685b35add01b2a01ed9af622f8e8341444394855 : []
5c121d4583e18f846c2968358465bda62ccbea34 : []
135f159b417a13f6b5ed96bc9c088c1f7f1443b5 : []
2cf60fe3d89b1f94eb036fd7fa196e56d13296af : []
14f5365281e54de40e0f56492c082782cac9fb0c : []
e32e42bc267853188d7762396c3e45ab27474927 : []
b5e3c4535ce57b8752bd0acb0976aa774b244a0e : []
74112edc17c369e0be6db559a8a1d325769738f6 : []
3968a504d9dadf03a2d8569f66d42095e370250a : []
c2771a80be9c9576396c3dd7fe3c47824afad7ee : []
b4d074be11d85c95c259b7007f3330cf95f8d4ab : []
8b0415ea70ee146ab40302fbf161cb76191faa49 : []
2295a37d26e0dfe893425adf7aa968e61bac18b2 : []
7055b6507a3c68282526a4de6cff643361f0ce2d : []
b283224409e0a4a374a41f6d056208d21da44e08 : [[org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T):UPD,DROP], [org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence):UPD,DROP], [org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence):UPD,DROP]]
354a04665fcdbb0b537d433c16935d9de0050be7 : []
316b1aac323fc60068a231e44b6c2178a8252437 : []
75a19a941ee895ae55526db46aa4cc8dc0e1c0e8 : []
ba067dae53311f7382101492c34c514e13621ad1 : [[org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP], [org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP]]
b6bfeb86f70d63c9f2c03e2cccc5efb173c4ad2f : [[org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP], [org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP]]
8637c56a9a5024787180e64957effd9de4a99c83 : []
e52f06815a1cf360bfdbc361f8dfaa5170d90974 : []
36bb672b012f26b70b435e69527ea89260d1a3c4 : []
746157631a609e89f99894e317a5cd66bea65de0 : []
b166ee4b2d332cb84ea0fc725f9be597ff2499aa : []
1f91d959e59817fddaa6d2a71e1cfd9fd03c7187 : []
8e0e50ffa9db0ec28391030db4d8006ce3d741ee : []
3797db61ef7a8a3218391000bd067743f87c121a : []
27c012eeb36b9963f5eec562ff656db38c482f15 : []
f086c2c822507b50bf9ef4142711d8067b5ec515 : [[org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char):INS,TEST]]
ebbb403868fd0fe6c89355f4f1759d14cb63fd9b : []
b4443c5fc67cecf401182a29f82ffe2398ab2fdc : []
a794fe9aee62e7564eaa8a7521ed98e9cdaad128 : []
a1f68c9e6898209aed9f616eecb00932fa91c09f : []
74eba75fc28af3803559c2072c0c7ea46b42b226 : [[org.apache.commons.lang3.StringUtils.normalizeSpace(String):UPD,DROP], [org.apache.commons.lang3.StringUtils.WHITESPACE_PATTERN : Pattern:DEL,DROP]]
f61ddb359fe31aeb93e6563377c042c876b72f82 : []
db218195d63152533c29c490d2c4a377915dbfca : []
94fac577844ad0ca5cb90b4d3dd84a75eacea2a8 : []
21074723669f571205f7f8574c81b4cf9f89647b : [[org.apache.commons.lang3.math.NumberUtils.isParsable(String):UPD,DROP]]
43f659f6294e57066e616c1336596bbe1969c2a8 : []
3a0c078af49dcdbf7959f49d08930f2d6dac43eb : []
b93f9a79eb1aaff4358b40fe41c07f560f3833ab : []
2bdf8687e1779765b642c54683d77601918451b5 : [[org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String...):UPD,DROP], [org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE : int:INS,DROP], [org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE : int:INS,DROP], [org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean):UPD,DROP]]
bdf6d408a838690247797f2326e53141fc5a4a56 : [[org.apache.commons.lang3.time.DateUtils.truncate(Date,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType):INS,DROP], [org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING : int:DEL,DROP], [org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.round(Date,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.ceiling(Date,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.round(Calendar,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND : int:DEL,DROP], [org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,int):DEL,DROP], [org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE : int:DEL,DROP]]
3879d44b54b0f899573c50785706bbeb97115b46 : []
3149d281c3596d14aad9d462389829e550d4a695 : []
488afb9e4348783bdae31e2c713b80b7a55f94e1 : [[org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy:INS,DROP]]
c31eeeb08264863c423f9e25723d5e84af3a3292 : [[org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean):DEL,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_COLON : TimeZoneNumberRule:UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.parsePattern():UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean,boolean):INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.mISO8601 : boolean:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON : TimeZoneNumberRule:UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_ISO_8601 : TimeZoneNumberRule:INS,DROP]]
09b49046b1a10415ded18839581337372bf80cfc : []
899442f530ce85750e4a70f64128b6489f912403 : []
32f6b199d8a8811123d8ff8ca967f3d901fbd566 : []
288de84f797e7e329b7cd9d385d2e8856d94756f : []
c707500f6710249373cd7e21ce52dc6df82ac740 : []
4029db1d3acb5a98f1c22c72372215aaf4162ca7 : []
fa6391f9e4d24b71d908dca5b82359787a73b678 : []
bc3ea28c74669981b9c75f36a92195013da11bea : []
af6dec38d6549c1ef278090dfc1fe340a23131ab : []
6a3a9f7f0c54df33655db164b0280b5a3771185f : []
9c916cdb2a011a2da4ca44dac49a1384ba41d51b : [[org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String):INS,DROP], [org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String):INS,DROP]]
65477e8d47cefb35075d7132f53c72fc83f71280 : []
b5a77a8fa8cfae5689c265bd14e5843ab6be8d6e : []
2a75e6bb87c1676c1b13a73692aacc94f7b3b93a : []
36cfa8da3f8784512edcc1f4dda5556af1d17dc1 : []
48827b4de8129c7231aef67472dcbfc333ff1dc9 : []
0af91091cf6c74f490ab56316af4a2d22fe956c0 : [[org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[]):UPD,DROP]]
31aec23a1640283533c28873ccdfca37f9402d82 : []
03c65bede78edfead7906eeb824228b189f40d43 : []
16210c327a11b846f30adb578f87fd80177c53ab : [[org.apache.commons.lang3.ArrayUtils.isSorted(T[],Comparator<T>):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(boolean[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte...):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(short[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(double[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(char[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(long[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(int[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(float[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(T[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(byte[]):INS,DROP]]
db96f2d6318a285bf8ce97e97cf5bba0bf763b78 : [[org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean):INS,DROP]]
d0c239adae7192ea007c01991e6607bde99322bb : [[org.apache.commons.lang3.CharUtils.compare(char,char):INS,DROP]]
435f99aaf3c47efaf3a56876e23a2133a342ed71 : [[org.apache.commons.lang3.math.NumberUtils.compare(short,short):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(byte,byte):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(long,long):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(int,int):INS,DROP]]
51647542f0b1faf021c8a88b99f93028ea5834ba : []
00f1591028a73010d82f3515f1f1759f2908b646 : []
a45ce73893c77b19bf396d3148c1c0ceba0638f3 : []
df0d65e31a225dcf92cab9da5fdee536b486e70d : []
47559218b74cc8dbefc503c84786a97ed0c0f1c0 : []
3ae932ab98708984ea6a4d174e023d6a703da55b : []
0ca9e4b3f87997e2418c6370db6e7a9cd7bd6a04 : []
ce5000030fa8ac5f0cf574e6f98af5aa0014362e : [[org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle:INS,DROP]]
36c1be208f53c9e399359a878bf8f4b99d053fdc : []
433eb1d979b95514b6feddae9b4f13e29ea57b41 : []
7fc800a7d01393b0a9b03e9e0c3967d873aa6219 : []
83e9e05213d6b09e6847ba77e97d643e18f3cbf5 : []
48f59c49b856a471d2262d53870b7186b5f5c7ff : []
8dac5ca6b35c0e3b4c36d74f6e272fe782775a70 : [[org.apache.commons.lang3.math.NumberUtils.createBigInteger(String):UPD,DROP]]
729eae95ba0251c604034d34c6ca4ee5efe81f6f : []
931865cf865f31d7e0f32bbe554934c68d917aab : []
81e69619e8ab77bae0636edce9a07ecf7bf00aa3 : []
7209cabd8bef36d05607653f4b404bab5cdb45e6 : []
bb4bb67745094209b25944fef95333a745293b8e : []
e3af98bec8f32fe7dbb461107e3e075fad9d356f : []
245fe2a25ebd97e498b53b0a3b04033cade5d306 : [[org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean):UPD,DROP]]
ed90bb1c8afa230ba684b7f773d1b0408e5f57a1 : []
1c06b1b5a6a44ddf03e967cb3096a88bb0c0bd48 : []
be4c4e69a88683c86a51a69a81c2f2218b12a154 : [[org.apache.commons.lang3.ArrayUtils.add(T[],T):UPD,DROP]]
7a3083d837a20caa766b9679ff33a0f4aa206de1 : []
e1c8b77a0a4257b3e403d33225c00e6de0d9d01c : []
9796b385cf48c37c27d9fccb47d3cc5299c8e37f : []
8a1e549fbffee1e5795bd8dda20685719d360f92 : []
fb107bf510e55d0fd90813f5a2fdffaa97b0d354 : [[org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...):INS,DROP]]
067667b5c28aa514e6e360cbf869cdff489f9cb1 : []
92d5928b240dd0c15c86689822284a28b6f33d05 : [[org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...):UPD,DROP]]
2a268b34769de2090f9c5fa6e58aeadc115ec0a3 : []
60c2d7401bf51138f98f2717968bd5074e9aaa3b : []
7c390696057846b9e1970ebfe38464dc70b43ae8 : []
3ec4f7b3f7503474a7e54ef225a8a3bbdc3aec93 : []
9129a3be4ab66d251e0284114ef59e4bb7ec3bd2 : []
769055c3890a872263f83e3cc5ecaefb51e7c9ab : []
311a4565a43a336f10298e35a9e64ff5e5ad0949 : []
376baa254db0e41c713d2199f2c29a44c2d14f9f : []
40d0023f42d4e8ba8a386196d4ad93ae5dbb6a18 : []
74292980ed5af5fec795fb5408ba85da29aa4ba6 : []
52997d4b6d09c8ad417cb06a3733ae4835295d8a : []
bf3796e4bad9f9c6c9b8638a7913bad63d572a28 : [[org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle:INS,COMP], [org.apache.commons.lang3.builder.ToStringStyle.NO_CLASS_NAME_STYLE : ToStringStyle:INS,DROP]]
75a4a13906841b02932f272bddcb47eb367e6e6f : []
f52d60d6b769b35a95d9a84a695d9923d24f3af9 : []
a3a7ebf84e967bfed1589acb802470a89abbbba6 : [[org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE : ToStringStyle:INS,DROP], [org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle:INS,COMP]]
54ebdcb6293f82e66d9899a54b4018c9c9fee35e : []
3c4fc783bbdd13cdcace733e65e1f0dc08567337 : []
c75aefd418102e14af949d7b016ddaab022319c1 : []
a38959688fe4e435bb83c598eacaadb87f70e3d1 : []
608260e878cd0722de6b08dd2d5f3fe5e74da79a : []
25096fca243f20b0ca044b520c5598da21fe70f6 : []
3f9fc9a8cabbb0068c76fe025c8b337f13709f0c : []
6897da2c379c8f4590c0e4690041d4cc9ca454ea : []
0706fb115a28474c03f3e57bd18fdc00400729e3 : []
c9b250f13caaef114c49379fb35a4060d2673638 : []
abe847be5a978d08cf22c16443cff4a96bdf3c2b : []
9f9bc1570ab05c2a0cf000e91ab88cafaa12e088 : []
9d35d45c2c5b2b09c0637ceeef68ab53c4097265 : [[org.apache.commons.lang3.SerializationUtils.roundtrip(T):UPD,DROP]]
4ebdcd11c3dd748a8e40ab8139bca19e90e2e50a : []
289cc48af3241524e2a128d3e4343bb899621d73 : []
c069afea52ad69b63a01ebbcb60e467d77242ada : [[org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle):UPD,DROP], [org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle,boolean):INS,DROP]]
38346119e9607d72ae7e590a425f289e1382bbb4 : []
645ad518dbb1737d047a75d3911a6a4cfd553aa9 : []
ebf5060cb1728bd03171526e5fd1b5077a9dcce7 : [[org.apache.commons.lang3.text.StrLookup.SYSTEM_PROPERTIES_LOOKUP : StrLookup<String>:DEL,DROP], [org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup():UPD,DROP], [org.apache.commons.lang3.text.StrLookup.copyProperties(Properties):INS,DROP], [org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP : StrLookup<String>:UPD,DROP]]
ef66ae5425139d10d268d7158714aa702fb1524e : []
87703be18862165fab51477d909548d5b4494509 : []
78d80fd86f5ae84ca42384067902242cf7c7beb5 : []
5fd8fbc4fe133a8890f11f30b0b1aa5d72682799 : []
e4367f170f2b8f159cd3e379f1c1d6e11915dab7 : [[org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object):UPD,DROP]]
13b3b1118575eb20f1964b640966d54510f85f4a : []
7b059101bb14e13ae5d1095e498fe913b85bdba1 : []
264b3dea730da6ca303d9beca4c36adfe08f1486 : []
c1771911ec80b74b6fb1954ee8f50f25ba99d337 : []
085c6755fcf63c87cc71b281c159fb80c851ad5e : []
58faacf526ea47a4a0a285ac2303f12bd060751b : []
4a5104189318fbcbb6cc336d38721d02de9c4397 : []
20d3c6e965f960171a1ac8854c2b39ce50448767 : []
dd614d6487eba392c4ca23d745eefcdf0170873e : []
8f5076fe1bbb63cb4b14f6970320ae49542397d3 : [[org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get():UPD,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch:INS,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException>:INS,DROP]]
2107ac57a96933f0d99dfc482e25bf00abef680c : []
0e5aeaef12383d38857b120c8e6157c46849deb5 : []
a129b642135530fc80d5d2db58096aff232a3b36 : []
30894be8ba524613ff2e1052a7bf403713e11d9c : []
f65c7a878561ef66043acb7e9da130d4960603ea : []
13f2ec88850aa72784ea4f9004c99e93b050be3e : []
273d81670bff133ae5db6fcf3c4898e91a41f436 : []
71083b199f2ea14361bb3f9e0d54c85fc5abde5c : [[org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch:DEL,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException>:DEL,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get():UPD,DROP]]
99aad053c11ae9cc4505869188a1e007758c9667 : []
b15675d8186bdfd5ada5ab935d04955d1a02ecd4 : []
4fe59e69b00a3912fa3b32332fda761f820a8fc3 : []
1b2ef9955f5c4886e4c971f42726cf9163c877a3 : []
f8f43843748eb28c6441563cd2122e6b4654245a : []
24f6a2de3240284755ab03970954c597e9ef8b20 : [[org.apache.commons.lang3.math.NumberUtils.createNumber(String):UPD,DROP], [org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.getMantissa(String):INS,DROP]]
f1ab9623a8e9d9ab30d3b0d2043174bb17483671 : []
81b2e181d7dcfb904c5daed5480cbebc35d34691 : []
28364536d887f88828141751a31dfd889b5b29da : [[org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale):UPD,DROP]]
1ca45c464f9decda4439d74d35dd3e9d809e7453 : []
adc202d1ff18016976416eeb38cd2edf79c1f3cd : []
967e0546ae3038c61e00fb7567e8b1d08fed282a : []
3b781ee14bfda93cb4d2161edee049b527a983e3 : []
89ba5bae82b3b058e8d3c19c5ea7db2882b79e8d : []
e1deada81e6601388ea201de911bde05b89e9947 : [[org.apache.commons.lang3.time.FastDateParser.HOUR12_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_OF_DAY_STRATEGY : Strategy:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_STRATEGY : Strategy:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.HOUR24_OF_DAY_STRATEGY : Strategy:INS,DROP]]
85593cd9ed5ec19d6d74c1114516ea93ecd750d0 : []
bede4e2c380d9d3d0e439b1377cb44a6d02221ec : []
0da032be97704aeea3aa22d56c2e369b39674256 : []
6d0fd21c72ea2e40d6ac0c9bd181b59151aec356 : []
95a31c5fc93d8ca96f2abacaaca46eefc6dc9996 : []
691736374eff37dd78b0460ab5eb7f742447ed24 : []
eab0abd38e6998d757c629b3a8f1e58e59cc150d : []
802c0cb9c074feb9e47efc1f3b550ed104caf6c5 : []
54c28452eb2ea333c6f9d458da08b9c48e6aaf65 : []
47337482c34fd1893e5bca5b976d3151a4d72a00 : [[org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int):INS,TEST], [org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int):INS,TEST]]
cb5d50d77d6a6c41e9645dc4ef2f3fb2a7c796e0 : []
33453612c3d32e10cb14dd3d4af7fc0c521e9376 : []
4c33d6c67f14dcf643f776021c06fe8f24c8dd2b : []
e97c7f3c6a4a022110a1fb78bb675e3f7fc36e3e : []
0a300ecf616d0d050b8947de9abf5d77b2822c94 : [[org.apache.commons.lang3.CharUtils.unicodeEscaped(char):UPD,DROP], [org.apache.commons.lang3.CharUtils.HEX_DIGITS : char[]:INS,DROP]]
5c87d4a66ec1384e991a31b973f1da84b631cd76 : [[org.apache.commons.lang3.text.translate.CharSequenceTranslator.HEX_DIGITS : char[]:INS,DROP], [org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer):UPD,DROP]]
d640a134d096875edea541e75978e26fee2d8d2d : [[org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer):UPD,DROP]]
346df57c70335872c2e6c712a1135708a01b895b : []
42ac012a52829436bd80f45da55c0b0de543b5ca : []
24fe23f8b296ace60b8abcd0b892a7ef54dca92f : [[org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(StringBuffer,Calendar):UPD,DROP]]
c1f48462b45866abb7569f996453dafcc201d68f : []
44cdae6300b4a4edcd76bf2775ac05d46acc76c2 : []
54eec98c538c19f0cf5436e859105930ff256888 : []
36caddc64c180424d7f57ec5fe6d9caac0cf944e : []
2bfb68cde8070a3a81c86bb24b449bbcbadb60e7 : []
7de5f51f3ebb420c8cdb50e14b3de0f649c2c229 : []
02a8538e77f5d0bcebdd4cf90512cfab42100bbc : []
6055c7ac9a0dcc8d4ce0604f3f28e17f8443e955 : []
2a6a7c68e9412ae556f651ac834e8920d1701019 : []
252845389adb0329c7ce53d80dfd4d6c03a78ac8 : []
f3e2e1787a6fe415ef8cb88c75d6828d380de0fd : []
f9ecbe9c2aadbbae73482d8ad84fa1e965f9ad94 : []
b9ca7b8336a4ac14983e9ecc785d0ca8439b4d4d : []
e80185d826ac0babed0400d2354359f5eacdb8d2 : []
2b056d91e64ac701c3de91f5fc0a3d3b08e1350e : []
ff2a77998605441d17a511bde88eb35b4a152810 : [[org.apache.commons.lang3.text.StrBuilder.append(CharSequence):UPD,DROP], [org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int):INS,DROP], [org.apache.commons.lang3.text.StrBuilder.append(Object):UPD,DROP], [org.apache.commons.lang3.text.StrBuilder.append(CharBuffer):INS,DROP]]
79fa7c41d3508158fd5c9d73a10fdb9f4a782170 : []
d91230e6277f35d2eaee92321d0d0ea739c8db83 : []
49fe354ee97c6f2cb3da4e6bb7541c656aefd33d : []
7610d280eb1e81f88cb1944b8db3f237146ad440 : [[org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition):INS,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList<String>):UPD,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder,boolean):DEL,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition):UPD,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder):INS,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition,boolean):DEL,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String):UPD,DROP]]
8256dd1397952c7b81a9e5361cb4f95b483a8e4d : []
9797cb8cd661f455ea40f70271f0377f856a4de3 : []
62c621f71a5eefed54fac1c54d06762f81fdcfa4 : [[org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.prefixSet : HashSet<Character>:INS,DROP]]
59d41a67f5fd3c68ac46dce7349a309c44fe2d34 : [[org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy:UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.formatPattern : Pattern:UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int):INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy():DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.pattern : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_2_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.PATTERN : String:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_3_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_1_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy(String):INS,DROP]]
b87b65a77018a949d26ea511e0bf5285512c44f4 : [[org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.appendDigits(StringBuffer,int):INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.parsePattern():UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(StringBuffer,int):UPD,DROP]]
dcf45c0c40c847893a1d3e4eb9ce47a403ef3bf0 : []
a24bd2b2ee80e00ddd31d851af16146e72446683 : []
e1b19db90e5406f9f3d5da611b297e9b44998af9 : []
b557e06e6f41f21b9a5d718783302bb8ba8b082e : []
bdf324c655aa7ecdd1363d8553f9fc7db7388c56 : []
8980da22428a7e456d0ba2ee7639e994637ed0ad : []
8ea51e577713c102e0eebe18c4e3855052b3c052 : [[org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength():UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int):UPD,DROP]]
3b51d6a08658cb0d651a9d5b19c2f08aa69704d4 : []
021eeafcd59f8eaca7a1520ba45e7ef42decd417 : []
fdf12c3829f7111feae19e545f06de3e29a22872 : []
a9a0d9844b88cbebfe4696a18ba91efc0c88fa05 : []
fd09e02c641b14f149d24015597a875d408fce86 : []
8f3d660a55b9d033e1de77e2c5af472d8dc2f0d2 : []
fefb230671f6c7a9de8d8dd99ef9d3f0b3fbb6ac : []
5b859c651ab2808101b358769743eb7764f560e3 : []
712f30962cf63092e08988256716ca43cc576833 : []
b516edfb2e78a0b38c16fd43b809094b8f8eb3cb : []
ab985c5b962263b1ca54fc29f3619b921dffe747 : []
5c8908ad584537f9b2aa5bbbe67435554dd9e212 : []
f98f7dae69e9291e094826327d872d58731e69b9 : [[org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, CharSequence>:DEL,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, String>:INS,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...):UPD,DROP]]
db83a45e4e800e767081067a74308aa95f5246fb : []
0c3ac5708deead1a8a33f0ad81b7365514a21a39 : []
c0227806ce7c7641754b74c769c7cf55f06af4fe : [[org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String):UPD,DROP]]
db4635beb8c6a520d7e7739e1e43b6aa9a60b4fd : []
d611ce4768e03a8c766d011811d60314c5128616 : [[org.apache.commons.lang3.SystemUtils.isOSVersionMatch(String,String):INS,DROP], [org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String):UPD,DROP]]
1971f6863a47182feb9bb266ec48adba35a3e4e4 : []
a3d5ec9c23c27a067556c95d0b8133e313e15e22 : []
e8663d25de7f5d59c8805851f6368579d6bf1c1a : [[org.apache.commons.lang3.SystemUtils.IS_JAVA_1_9 : boolean:INS,DROP]]
abbdec8cb829b9d7b3d482a3be84c97397d43a51 : []
f3f4c6577722fca4db4ac12661213936e14c61d0 : []
8ed73eccba5f477ac89a1f6b2f79a3db73203040 : []
6920b645eebd31fdb78e9b955c27df8e59c58347 : []
4a67cb8db809439a9d3e700eebf0b6413998f6a0 : []
6717ec5b89577eb0ee11d674a4bc7c5692c5f827 : []
f3bf6a5d0abab9a2daeb9250a813fb2e3f350df1 : []
c48fa803d035d88ac3ffbc33c29bcb986611ad6f : [[org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object):UPD,DROP]]
c59d650d4fd5757123831153e1be5b0c287bff41 : [[org.apache.commons.lang3.ObjectUtils.toString():DEL,DROP]]
353709805cd278479c114090a0353c0e9b9910db : []
d3afa1565363bc103dbb1f3b3221a8c0c80b20c6 : [[org.apache.commons.lang3.text.ExtendedMessageFormat.ESCAPED_QUOTE : String:DEL,DROP]]
d4d9ae49d31b83fdf6ef162415342c3e1d6c158a : [[org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean):UPD,DROP]]
01a13f364d77ddccd272d849d99638d4958191dc : [[org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte):UPD,DROP]]
b3c4f222763125c9b7cea9ce2ce99fdcba738488 : [[org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble):UPD,DROP]]
bfba743e81897171042ee49ee4745fbdfe83f625 : [[org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat):UPD,DROP]]
07b9131b7265b099aab62efb95762179db47e05a : [[org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt):UPD,DROP]]
fa80415129e984734998392fc706229bcf757d05 : [[org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong):UPD,DROP]]
66ffaddfe91b4ebbe5f5dc2aa8ff1eb88023f680 : [[org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort):UPD,DROP]]
48043d3ae32f2f3020edcb5896d69cbac90c7e3b : []
abc27239f747d2d0d09bad3e50c5955dc336bc5b : []
38bbd4f55ed654c5053579ca0b98f3de719ccfa5 : []
130f01cf811c27b3149128b2bd062d27e67d34a3 : []
e41ec076ae96e1d34ac635327ae855beebdff89d : []
3398b7e232e9ddd16f096c663c51387dca2e4c5a : []
af2a3d817e109448803087602fe5f4e48bb517a5 : []
2a0e1d76f2327289a78c791e9403a3af32a38a9b : []
59e061105af63e5ff63340f734469652f1aed6f3 : []
59c3d1a6c1fd698209704b7dbe3c79e0fe4ee3a6 : []
8654845e64a1f3e613140942410aa9fd2a94e726 : []
2ae0561849752b64cae1071ea62d9d837975d945 : [[org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2012 : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2003 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2008 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98 : boolean:UPD,DROP]]
c840400fd58995318a882ee93554221101c99056 : []
3e28ac48fb8456c2a559bc7f8e0f069b92be11b4 : []
e2d4f6c306c8a1ecefd898c581d8963df31b2bdf : [[org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_TIGER : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PUMA : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MAVERICKS : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PANTHER : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_YOSEMITE : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LION : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_JAGUAR : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LEOPARD : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_SNOW_LEOPARD : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_CHEETAH : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MOUNTAIN_LION : boolean:INS,DROP]]
69d701d434059d88a77c9c755760273536f3f7e7 : []
a60accbde58b2ace4f124ea61d462a02873367df : []
72ba3f3f5aab37f80c3aec9a1d4e7ba53daf5363 : []
277c44f1991541c96831b26b7d67d6f71ba9390e : []
77210e69cbb675d8cc4492587da48d90814baf19 : []
65b710808056989e434c8a627b6a93bad445b015 : []
fea83e6436c4ce1b7ce5b5698ac4cb3dc2df181d : []
4aa9b2abe86abcce6376f77a430b62a0fd2e0827 : []
f02d21367a74ad7bebfc753b308df18c85034580 : []
bb9eca1bd98425610d88b6f49438fda01992876c : []
bf07961cd7403022ffae224a4c3a33720d140b6f : []
b3958ffdc3136b6d04f29c7242cdbf399299e763 : [[org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[]):UPD,DROP]]
577323642f31853474a9c3a5db1b2897e73ea9ac : [[org.apache.commons.lang3.ArrayUtils.isEmpty(double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(Object[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]):UPD,DROP]]
cfced562b52da6bff9dc59ef182744a587d4cda3 : [[org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]):UPD,DROP]]
9e4fb8a700259b17ec427b5ca5a9a7179066a0b6 : []
80d3c5d9f59cf32544524e2de231d63d57d0c8bf : []
38fe7dbc3eeaafb9123760ec569e06bacb520b9f : []
f827dfe58452998727da8833d663203ee71ed9aa : [[org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int):UPD,DROP]]
f478e669602d109d8e67c7b7baa16863feae8742 : [[org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[]):UPD,DROP]]
d6811f22c3b26dac85903a87a2f35c5f9c582211 : [[org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class<?>,EqualsBuilder,boolean,String[]):UPD,DROP]]
5ca1ab641cf1c68d47a9700da14563b2bf516cfd : [[org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[]):UPD,DROP]]
87522cd9f068f3e6d28688411f6e491771935a33 : []
824febcb4393f8481c8fa0d041a03e971339eefd : [[org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(short,short):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(char,char):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(long,long):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(float,float):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(double,double):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(int,int):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[]):UPD,DROP]]
6b74695b87b0576cfa0244fbfa2249ad53eb0b76 : []
4fd1d0ab51f002860dd78705f117f147a9a4d1b8 : []
9db93a361ca003eedb5d628f8ebf9552610be480 : []
4f7b7ca34c98be046fa945c97d96e1e1fdfde9e8 : []
195978d743b713593a172e0ee906052729454f38 : []
a8e70d312d21b4ddfb8d084e61f5b48b49a33533 : []
6c166a5db5001d120fe23851b66840d4940d83f1 : []
f77343c18ade6e7089234710f6f59b94b28e7f0b : []
cc5df9998b596a96c50c93dd6c662633f4b0bab9 : []
65e3afd6867fa11bd2ffc3c3ec952b302ca15970 : []
4c8cd7bf2dffad86d8504115511f8749953343a0 : []
a7742da0f9b574ab68cd7da62aa6f36629a71b4a : [[org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.validTimeZoneChars : String:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TZ_DATABASE : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.VALID_TZ : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.GMT_OPTION : String:INS,DROP]]
0320e026014c63b206af4b39992f728b60bbae40 : []
59a9540284aed2a43e4e298dc5f14815240a2e8a : []
229cadcb494b27b3eaa7e72b6091f7a55092e05a : []
]
[OUTPUT] Results:
DROP: 229cadcb : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: 59a95402 : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: 0320e026 : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java
DROP: a7742da0 : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 4c8cd7bf : [76cc69c LANG-1109 - Number percentage formatting with fractional digits] src/changes/changes.xml
DROP: 65e3afd6 : [d4c7f63 Use annotation based checking for expected exceptions] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: cc5df999 : [8ea1aa1 Remove another necessary assignment] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: f77343c1 : [59985b4 Remove unnecessary assignment] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: 6c166a5d : [3455884 Format source code] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: a8e70d31 : [a498b87 Build requires at least Java 6 - check for Java version can be removed] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: 195978d7 : [83775c4 Test fields can be private] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: 4f7b7ca3 : [3f0f42f Drop unnecessary empty lines] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: 9db93a36 : [98817e8 Use BeforeClass hook to set up test date] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: 4fd1d0ab : [35f1cc0 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/time/DateUtils.java
DROP: 6b74695b : [2bc2ffd PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java
DROP: 824febcb : [11491d3 Use not bool instead of bool == false] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java
DROP: 87522cd9 : [9072a76 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java
DROP: 5ca1ab64 : [f525bc3 Use not String.contains instead of indexOf == -1] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java
DROP: d6811f22 : [f525bc3 Use not String.contains instead of indexOf == -1] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java
DROP: f478e669 : [f525bc3 Use not String.contains instead of indexOf == -1] src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
DROP: f827dfe5 : [2fefdc7 Scope of local variabel shift can be narrower] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 38fe7dbc : [d3252a5 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 80d3c5d9 : [c4c03a3 PMD: Useless parentheses] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 9e4fb8a7 : [9106f4e Define Findbugs exlucde for internally used map key class] findbugs-exclude-filter.xml
DROP: cfced562 : [173c162 Simplify isNotEmpty by reusing isEmpty] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: 57732364 : [ef51b06 Simplify isEmpty be reusing getLength] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: b3958ffd : [319588b Simplify isSameLenght implementations by reusing getLength. This also fixes a lot of the useless paranthesis warnings generated by PMD.] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: bf07961c : [921ee58 Document required java version for every release] src/site/xdoc/release-history.xml
DROP: bb9eca1b : [3f418c2 Use date schema from changes.xml on release history page] src/site/xdoc/release-history.xml
DROP: f02d2136 : [1c532ef Add next release to changes.xml] src/changes/changes.xml
DROP: 4aa9b2ab : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] src/site/xdoc/release-history.xml
DROP: fea83e64 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] src/changes/changes.xml
DROP: 65b71080 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] pom.xml
DROP: 77210e69 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] doap_lang.rdf
DROP: 277c44f1 : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] default.properties
DROP: 72ba3f3f : [cdbf475 Post release clean up: bump version number, document release date, add release to doap file] README.md
DROP: a60accbd : [0d5d666 Add entry for the upcoming 3.4 release to the release history page] src/site/xdoc/release-history.xml
DROP: 69d701d4 : [e83123d Fix copy past error] src/changes/changes.xml
DROP: e2d4f6c3 : [09c42e7 LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.] src/main/java/org/apache/commons/lang3/SystemUtils.java
DROP: 3e28ac48 : [09c42e7 LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.] src/changes/changes.xml
DROP: c840400f : [09c42e7 LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.] RELEASE-NOTES.txt
DROP: 2ae05618 : [9c7b0fb LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.] src/main/java/org/apache/commons/lang3/SystemUtils.java
DROP: 8654845e : [9c7b0fb LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.] src/changes/changes.xml
DROP: 59c3d1a6 : [9c7b0fb LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.] RELEASE-NOTES.txt
DROP: 59e06110 : [8c84cfd The latest release is 3.3.2] RELEASE-NOTES.txt
DROP: 2a0e1d76 : [6039dd3 Fix ant build] default.properties
DROP: af2a3d81 : [6039dd3 Fix ant build] build.properties.sample
DROP: 3398b7e2 : [9e575c4 Document change of constant in DurationUtils as suggested by Oliver Heger.] RELEASE-NOTES.txt
DROP: e41ec076 : [79aceed Add LANG-1104 to release notes] RELEASE-NOTES.txt
DROP: 130f01cf : [06d7245 LANG-1104 - FastDateParserTest.testParses fails in TimeZone America/Sao_Paulo] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: 38bbd4f5 : [06d7245 LANG-1104 - FastDateParserTest.testParses fails in TimeZone America/Sao_Paulo] src/changes/changes.xml
DROP: abc27239 : [56462a1 maven-checkstyle-plugin 2.14 -> 2.15.] pom.xml
DROP: 48043d3a : [3548f0a Update site for release 3.4] src/site/xdoc/index.xml
DROP: 66ffaddf : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableShort.java
DROP: fa804151 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableLong.java
DROP: 07b9131b : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableInt.java
DROP: bfba743e : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java
DROP: b3c4f222 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java
DROP: 01a13f36 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableByte.java
DROP: d4d9ae49 : [dfaa656 PMD: Useless parentheses.] src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java
DROP: d3afa156 : [bb01292 PMD: Avoid unused private fields such as 'ESCAPED_QUOTE'] src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
DROP: 35370980 : [3ab0bc3 Fix typo] src/main/java/org/apache/commons/lang3/ObjectUtils.java
DROP: c59d650d : [f718ec1 PMD: Overriding method merely calls super] src/main/java/org/apache/commons/lang3/ObjectUtils.java
DROP: c48fa803 : [e29f33c FindBugs: Load of known null value.] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java
DROP: f3bf6a5d : [346aae3 Make checkstyle happy: add missing JavaDoc] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 6717ec5b : [346aae3 Make checkstyle happy: add missing JavaDoc] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 4a67cb8d : [4fdc606 Update RELEASE-NOTES for release 3.4] RELEASE-NOTES.txt
DROP: 6920b645 : [11279f7 Update download page in preparation for 3.4 release] src/site/xdoc/download_lang.xml
DROP: 8ed73ecc : [11279f7 Update download page in preparation for 3.4 release] pom.xml
DROP: f3f4c657 : [fccd59e Change test back to printing to std out, since continuum seems to be running on HAL-9000] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
DROP: abbdec8c : [3225ba6 LANG-1103: Add SystemUtils.IS_JAVA_1_9] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
DROP: e8663d25 : [3225ba6 LANG-1103: Add SystemUtils.IS_JAVA_1_9] src/main/java/org/apache/commons/lang3/SystemUtils.java
DROP: a3d5ec9c : [3225ba6 LANG-1103: Add SystemUtils.IS_JAVA_1_9] src/changes/changes.xml
DROP: 1971f686 : [11c0df1 LANG-1102: Make logic for comparing OS versions in SystemUtils smarter] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
DROP: d611ce47 : [11c0df1 LANG-1102: Make logic for comparing OS versions in SystemUtils smarter] src/main/java/org/apache/commons/lang3/SystemUtils.java
DROP: db4635be : [11c0df1 LANG-1102: Make logic for comparing OS versions in SystemUtils smarter] src/changes/changes.xml
DROP: c0227806 : [1dc65ff Reuse isOsNameMatch] src/main/java/org/apache/commons/lang3/SystemUtils.java
DROP: 0c3ac570 : [2b7e195 This test should fail instead of writing to std out so that we can add missing OS] src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
DROP: db83a45e : [098395e Dummy commit to close github issue, which has been fixed in r1669520. This fixes #56 from github.] pom.xml
DROP: f98f7dae : [2f62425 Further optimization of LANG-935: - Avoid toString of the replacement sequence by doing it once. - Avoid calculating the maximum when not needed. - Fixup comment for greedy algorithm] src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java
DROP: 5c8908ad : [a211ef2 Better JavaDoc for LANG-1093: Add ClassUtils.getAbbreviatedName. This fixes #57 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/ClassUtils.java
DROP: ab985c5b : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java
DROP: b516edfb : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java
DROP: 712f3096 : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java
DROP: 5b859c65 : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java
DROP: fefb2306 : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java
DROP: 8f3d660a : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java
DROP: fd09e02c : [c8e96c0 LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.] src/changes/changes.xml
DROP: a9a0d984 : [0b7ef7f update changes.xml to set proper issue number for previously committed work] src/changes/changes.xml
DROP: fdf12c38 : [a74ed8c Dummy commit to close github issue. This fixes #35 from github.] src/changes/changes.xml
DROP: 021eeafc : [aeaa333 Add missing issues to changes.xml] src/changes/changes.xml
DROP: 3b51d6a0 : [10e18ae LANG-1100: Avoid memory allocation when using date formating to StringBuffer] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: 8ea51e57 : [10e18ae LANG-1100: Avoid memory allocation when using date formating to StringBuffer] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 8980da22 : [8bc91a9 replace tabs with spaces] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: bdf324c6 : [8bc91a9 replace tabs with spaces] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: b557e06e : [8bc91a9 replace tabs with spaces] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: e1b19db9 : [8bc91a9 replace tabs with spaces] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: a24bd2b2 : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: dcf45c0c : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: b87b65a7 : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 59d41a67 : [bbfa8eb LANG-1101 FastDateParser and FastDatePrinter support 'X' format] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 62c621f7 : [7bb99bc LANG-935: Possible performance improvement on string escape functions. Thanks to Fabian Lange and Thomas Neidhart.] src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java
DROP: 9797cb8c : [7bb99bc LANG-935: Possible performance improvement on string escape functions. Thanks to Fabian Lange and Thomas Neidhart.] src/changes/changes.xml
DROP: 8256dd13 : [bf6ee5c LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.] src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java
DROP: 7610d280 : [bf6ee5c LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.] src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
DROP: 49fe354e : [bf6ee5c LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.] src/changes/changes.xml
DROP: d91230e6 : [cbeb45b Kudos to the people how care about Commons Lang] pom.xml
DROP: 79fa7c41 : [3328387 LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.] src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java
DROP: ff2a7799 : [3328387 LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.] src/main/java/org/apache/commons/lang3/text/StrBuilder.java
DROP: 2b056d91 : [3328387 LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.] src/changes/changes.xml
DROP: e80185d8 : [1181552 Correct change types] src/changes/changes.xml
DROP: b9ca7b83 : [adebbdc LANG-1098: Update maven-checkstyle-plugin to 2.14. This fixes #55 from github. Thanks to Michał Kordas.] src/changes/changes.xml
DROP: f9ecbe9c : [adebbdc LANG-1098: Update maven-checkstyle-plugin to 2.14. This fixes #55 from github. Thanks to Michał Kordas.] pom.xml
DROP: f3e2e178 : [d6f59c3 LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Michał Kordas.] src/changes/changes.xml
DROP: 25284538 : [d6f59c3 LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Michał Kordas.] pom.xml
DROP: 2a6a7c68 : [08a854a LANG-1096: Update maven-pmd-plugin to 3.4. This fixes #53 from github. Thanks to Michał Kordas.] src/changes/changes.xml
DROP: 6055c7ac : [08a854a LANG-1096: Update maven-pmd-plugin to 3.4. This fixes #53 from github. Thanks to Michał Kordas.] pom.xml
DROP: 02a8538e : [bf3e77d LANG-1095: Update maven-antrun-plugin to 1.8. This fixes #52 from github. Thanks to Michał Kordas] src/changes/changes.xml
DROP: 7de5f51f : [bf3e77d LANG-1095: Update maven-antrun-plugin to 1.8. This fixes #52 from github. Thanks to Michał Kordas] pom.xml
DROP: 2bfb68cd : [4556cc5 Add missing AL header] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTimeZonesTest.java
DROP: 36caddc6 : [442e8c2 Extract formatting tests of time zones into parameterized test] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTimeZonesTest.java
DROP: 54eec98c : [442e8c2 Extract formatting tests of time zones into parameterized test] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: 44cdae63 : [04c8de2 No need to exclude the current time zone from testing] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: c1f48462 : [8aa1b44 LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: 24fe23f8 : [8aa1b44 LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 42ac012a : [8aa1b44 LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter] src/changes/changes.xml
DROP: 346df57c : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/CharUtilsTest.java
DROP: d640a134 : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java
DROP: 5c87d4a6 : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
DROP: 0a300ecf : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/CharUtils.java
DROP: e97c7f3c : [1f75a8f LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.] src/changes/changes.xml
DROP: 4c33d6c6 : [a234f03 Fix JavaDoc link] src/main/java/org/apache/commons/lang3/ClassUtils.java
DROP: 33453612 : [f29eb8e Use annotation based testing for expected exceptions] src/test/java/org/apache/commons/lang3/ClassUtilsTest.java
DROP: cb5d50d7 : [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/test/java/org/apache/commons/lang3/ClassUtilsTest.java
TEST: 47337482 : [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/main/java/org/apache/commons/lang3/ClassUtils.java
DROP: 54c28452 : [d38919f LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.] src/changes/changes.xml
DROP: 802c0cb9 : [ce7f4ed LANG-1090 FastDateParser does not set error indication in ParsePosition] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: eab0abd3 : [ce7f4ed LANG-1090 FastDateParser does not set error indication in ParsePosition] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 69173637 : [ce7f4ed LANG-1090 FastDateParser does not set error indication in ParsePosition] src/changes/changes.xml
DROP: 95a31c5f : [8db46b1 Javadoc] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 6d0fd21c : [8db46b1 Javadoc] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 0da032be : [e124486 Simplify] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: bede4e2c : [3ec99c1 Add AL header (props joerg)] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: 85593cd9 : [7c8443f LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: e1deada8 : [7c8443f LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 89ba5bae : [7c8443f LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat] src/changes/changes.xml
DROP: 3b781ee1 : [6ec90c4 Docs] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 967e0546 : [b321bde Generics] src/test/java/org/apache/commons/lang3/text/StrLookupTest.java
DROP: adc202d1 : [4d228dd Comment] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: 1ca45c46 : [2367948 LANG-1061 FastDateParser error - timezones not handled correctly] src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java
DROP: 28364536 : [2367948 LANG-1061 FastDateParser error - timezones not handled correctly] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 81b2e181 : [2367948 LANG-1061 FastDateParser error - timezones not handled correctly] src/changes/changes.xml
DROP: f1ab9623 : [45a6467 LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: 24f6a2de : [45a6467 LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: f8f43843 : [45a6467 LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.] src/changes/changes.xml
DROP: 1b2ef995 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/LazyInitializerTest.java
DROP: 4fe59e69 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java
DROP: b15675d8 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/AtomicInitializerTest.java
DROP: 99aad053 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java
DROP: 71083b19 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java
DROP: 273d8167 : [6183618 Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.] src/changes/changes.xml
DROP: 13f2ec88 : [4975b89 CGI must be svn:executable *] src/site/resources/download_lang.cgi
DROP: f65c7a87 : [ed4d262 Update to latest parent pom] pom.xml
DROP: 30894be8 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/LazyInitializerTest.java
DROP: a129b642 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java
DROP: 0e5aeaef : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/AtomicInitializerTest.java
DROP: 2107ac57 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java
DROP: 8f5076fe : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java
DROP: dd614d64 : [bdb5d97 LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.] src/changes/changes.xml
DROP: 20d3c6e9 : [ffdc427 Fix up Findbugs version so it works with Java 6] pom.xml
DROP: 4a510418 : [813e18f Checkstyle: Add missing JavaDoc] src/main/java/org/apache/commons/lang3/text/StrLookup.java
DROP: 58faacf5 : [4792f85 Checkstyle: Add missing JavaDoc] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
DROP: 085c6755 : [425d057 Make JavaDoc tool happy by adding missing @return tag] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java
DROP: c1771911 : [58320be Add some JavaDocs] src/main/java/org/apache/commons/lang3/JavaVersion.java
DROP: 264b3dea : [6b90fe3 Add missing license header] src/test/java/org/apache/commons/lang3/reflect/testbed/Annotated.java
DROP: 7b059101 : [d8c65c4 Add Jonathan Baker to the list of contributors] pom.xml
DROP: 13b3b111 : [ffc38b1 LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java
DROP: e4367f17 : [ffc38b1 LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java
DROP: 5fd8fbc4 : [ffc38b1 LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.] src/changes/changes.xml
DROP: 78d80fd8 : [3181b40 Add an additional test for LANG-1055] src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java
DROP: 87703be1 : [3181b40 Add an additional test for LANG-1055] src/changes/changes.xml
DROP: ef66ae54 : [63f1d6b LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently. This fixes #43 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/text/StrLookupTest.java
DROP: ebf5060c : [63f1d6b LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently. This fixes #43 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/text/StrLookup.java
DROP: 645ad518 : [cc991fe Add since tag to new constructor of DiffBuilder] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java
DROP: 38346119 : [38ed1a0 LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java
DROP: c069afea : [38ed1a0 LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java
DROP: 289cc48a : [38ed1a0 LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.] src/changes/changes.xml
DROP: 4ebdcd11 : [6eac346 LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.] src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java
DROP: 9d35d45c : [6eac346 LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.] src/main/java/org/apache/commons/lang3/SerializationUtils.java
DROP: 9f9bc157 : [6eac346 LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.] src/changes/changes.xml
DROP: abe847be : [89c8519 Update copyright year] NOTICE.txt
DROP: c9b250f1 : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] CONTRIBUTING.md
DROP: 0706fb11 : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] src/assembly/src.xml
DROP: 6897da2c : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] src/assembly/bin.xml
DROP: 3f9fc9a8 : [9af6c5e Use README.md and CONTRIBUTING.md generated by commons build plugin] README.md
DROP: 25096fca : [5160730 Add test for merging toString with super toString] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
DROP: 608260e8 : [d903279 Remove assertions in error cases. They won't be executed.] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
DROP: a3895968 : [42728e8 Test against static value] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
DROP: c75aefd4 : [2515b3e Format source code] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
DROP: 3c4fc783 : [8d9662e JsonToStringStyle doesn't use line breaks. Change JavaDoc to reflect this.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
DROP: 54ebdcb6 : [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
COMP: a3a7ebf8 : [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
DROP: f52d60d6 : [c4ddbe6 LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.] src/changes/changes.xml
DROP: 75a4a139 : [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/test/java/org/apache/commons/lang3/builder/NoClassNameToStringStyleTest.java
COMP: bf3796e4 : [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
DROP: 52997d4b : [c87380f LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.] src/changes/changes.xml
DROP: 74292980 : [e22e066 Revert to using cobertura. The Jacoco instrumentation will add fields to all classes. This in turn breaks the tests for FieldUtils.getAllFields(Class).] src/site/resources/profile.cobertura
DROP: 40d0023f : [e22e066 Revert to using cobertura. The Jacoco instrumentation will add fields to all classes. This in turn breaks the tests for FieldUtils.getAllFields(Class).] src/site/resources/profile.jacoco
DROP: 376baa25 : [2f97b43 Don't redefine plugin default values] pom.xml
DROP: 311a4565 : [00f00cc Need to set MaxPermSize as well or the site build will fail with OutOfMemoryError] pom.xml
DROP: 769055c3 : [867d318 Update JavaNCSS plugin to latest version] pom.xml
DROP: 9129a3be : [e4bcd50 Add jacoco file to activate report via parent pom (forgot that in last commit)] src/site/resources/profile.jacoco
DROP: 3ec4f7b3 : [517b430 Use jacoco via parent pom configuration file instead of cobertura (which takes forever to run)] pom.xml
DROP: 7c390696 : [c533282 LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 60c2d740 : [c533282 LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover.] src/changes/changes.xml
DROP: 2a268b34 : [5cb1ae6 Add examples for containsAny(CharSequence, CharSequence...)] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 92d5928b : [a169e86 Use enhanced for loop instead of indexed based iteration] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 067667b5 : [9e26c7b LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.] src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
DROP: fb107bf5 : [9e26c7b LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 8a1e549f : [9e26c7b LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.] src/changes/changes.xml
DROP: 9796b385 : [23d55b0 Can't link to private inner classes, use public field instead] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java
DROP: e1c8b77a : [5f61aa0 Update to latest parent pom] pom.xml
DROP: 7a3083d8 : [3902225 Add another assertion documention the current behavior of StringUtils.join] src/test/java/org/apache/commons/lang3/StringUtilsTest.java
DROP: be4c4e69 : [4a2cc4f LANG-1073 Read wrong component type of array in add in ArrayUtils] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: 1c06b1b5 : [4a2cc4f LANG-1073 Read wrong component type of array in add in ArrayUtils] src/changes/changes.xml
DROP: ed90bb1c : [e5a3039 LANG-1077 StringUtils.ordinalIndexOf(aaaaaa, aa, 2) != 3 in StringUtils] src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
DROP: 245fe2a2 : [e5a3039 LANG-1077 StringUtils.ordinalIndexOf(aaaaaa, aa, 2) != 3 in StringUtils] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: e3af98be : [e5a3039 LANG-1077 StringUtils.ordinalIndexOf(aaaaaa, aa, 2) != 3 in StringUtils] src/changes/changes.xml
DROP: bb4bb677 : [0576347 clarify behavior of #isNumber() with blanks] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: 7209cabd : [0576347 clarify behavior of #isNumber() with blanks] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 81e69619 : [d4cf086 Typo] pom.xml
DROP: 931865cf : [a25d6d8 Update to latest junit release] pom.xml
DROP: 729eae95 : [0162032 LANG-1072 Duplicated 0x check in createBigInteger in NumberUtils] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: 8dac5ca6 : [0162032 LANG-1072 Duplicated 0x check in createBigInteger in NumberUtils] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 48f59c49 : [0162032 LANG-1072 Duplicated 0x check in createBigInteger in NumberUtils] src/changes/changes.xml
DROP: 83e9e052 : [2120121 maven-pmd-plugin 3.2 -> 3.3.] pom.xml
DROP: 7fc800a7 : [2afdf4d Javadoc fix for LANG-1064.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 433eb1d9 : [2afdf4d Javadoc fix for LANG-1064.] src/changes/changes.xml
DROP: 36c1be20 : [635e41e LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.] src/test/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyleTest.java
DROP: ce500003 : [635e41e LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java
DROP: 0ca9e4b3 : [635e41e LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.] src/changes/changes.xml
DROP: 3ae932ab : [85c18d0 Update to latest commons parent pom] pom.xml
DROP: 47559218 : [0661ab5 No need to explicitly extend Object.] src/test/java/org/apache/commons/lang3/ClassUtilsTest.java
DROP: df0d65e3 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: a45ce738 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/CharUtilsTest.java
DROP: 00f15910 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java
DROP: 51647542 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java
DROP: 435f99aa : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: d0c239ad : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/CharUtils.java
DROP: db96f2d6 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/BooleanUtils.java
DROP: 16210c32 : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: 03c65bed : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] src/changes/changes.xml
DROP: 31aec23a : [ef26a66 LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.] pom.xml
DROP: 0af91091 : [09cee6a Use isEmpty() where possible. Thanks to James Sawle for pointing this out.] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: 48827b4d : [b199af8 LANG-1043 - isAllUpperCase should only check Alpha characters Document and test additional cases] src/test/java/org/apache/commons/lang3/StringUtilsTest.java
DROP: 36cfa8da : [b199af8 LANG-1043 - isAllUpperCase should only check Alpha characters Document and test additional cases] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 2a75e6bb : [0d3d319 Javadocs.] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java
DROP: b5a77a8f : [ab57062 Update maven-checkstyle-plugin from 2.9.1 to 2.13.] pom.xml
DROP: 65477e8d : [a113511 [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
DROP: 9c916cdb : [a113511 [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java
DROP: 6a3a9f7f : [a113511 [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>] src/changes/changes.xml
DROP: af6dec38 : [0648a30 Javadoc examples looked better wrapped in {@code} tags.] src/main/java/org/apache/commons/lang3/StringEscapeUtils.java
DROP: bc3ea28c : [4477ae6 LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
DROP: fa6391f9 : [4477ae6 LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.] src/changes/changes.xml
DROP: 4029db1d : [4477ae6 LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.] pom.xml
DROP: c707500f : [aa3f174 Remove tab characters] src/changes/changes.xml
DROP: 288de84f : [7406d02 Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons] src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
DROP: 32f6b199 : [7406d02 Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons] src/changes/changes.xml
DROP: 899442f5 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: 09b49046 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/test/java/org/apache/commons/lang3/time/DateFormatUtilsTest.java
DROP: c31eeeb0 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 488afb9e : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 3149d281 : [22b6781 Added missing support for ISO 8601 parsing and printing using ZZ pattern (code now matches Javadoc). Addresses LANG-1000.] src/changes/changes.xml
DROP: 3879d44b : [2aae22d Removed redundant static modifier (thanks, Matt).] src/main/java/org/apache/commons/lang3/time/DateUtils.java
DROP: bdf6d408 : [52e854e Replaced private integer constants with private static enum.] src/main/java/org/apache/commons/lang3/time/DateUtils.java
DROP: 2bdf8687 : [bc91bed Made it clear that the fields of the object form the hash code (LANG-1039). Pulled magic values into constants.] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java
DROP: b93f9a79 : [bdb1a68 Added Javadoc warnings related to LANG-796.] src/main/java/org/apache/commons/lang3/time/DateUtils.java
DROP: 3a0c078a : [2154d5f Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear] src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java
DROP: 43f659f6 : [2154d5f Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear] src/changes/changes.xml
DROP: 21074723 : [1e6c8c1 Simplify statement by calling substring on str directly. StringUtils.startsWith makes sure that str is not  null at this point. Improvement suggested by sebb.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 94fac577 : [161ef97 Add fixme regarding a JDK 1.3 workaround] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java
DROP: db218195 : [01a950e Better JavaDoc formatting] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: f61ddb35 : [fceafc5 Fix typo] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 74eba75f : [bc8e238 LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: a1f68c9e : [bc8e238 LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github.] src/changes/changes.xml
DROP: a794fe9a : [092d6da Add missing fail calls. Errors would be silently ignored if those calls are missing.] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java
DROP: b4443c5f : [84c43fe Update plugins to current versions.] pom.xml
DROP: ebbb4038 : [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java
TEST: f086c2c8 : [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 27c012ee : [1384457 [LANG-1033] Add StringUtils.countMatches(CharSequence, char)] src/changes/changes.xml
DROP: 3797db61 : [a67075b Update to latest parent pom] pom.xml
DROP: 8e0e50ff : [9b2357c Fix JavaDoc problem] src/main/java/org/apache/commons/lang3/JavaVersion.java
DROP: 1f91d959 : [5ae1b02 Document the changes from LANG-1027] src/changes/changes.xml
DROP: b166ee4b : [3fa5334 LANG-1027 don't fail if java version is unknown, lang is too much used to make apps and libs failling cause of an unknown java version.] src/test/java/org/apache/commons/lang3/JavaVersionTest.java
DROP: 74615763 : [3fa5334 LANG-1027 don't fail if java version is unknown, lang is too much used to make apps and libs failling cause of an unknown java version.] src/main/java/org/apache/commons/lang3/JavaVersion.java
DROP: 36bb672b : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/test/java/org/apache/commons/lang3/reflect/testbed/Annotated.java
DROP: e52f0681 : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
DROP: 8637c56a : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java
DROP: b6bfeb86 : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java
DROP: ba067dae : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java
DROP: 75a19a94 : [de67dec LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.] src/changes/changes.xml
DROP: 316b1aac : [03aa1e7 Use the more modern, compact, and flexible Javadoc {@code ...} instead of the HTML <tt>...</tt>.] src/main/java/org/apache/commons/lang3/StringEscapeUtils.java
DROP: 354a0466 : [88dd10f Use the more modern, compact, and flexible Javadoc {@code ...} instead of the HTML <tt>...</tt>.] src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java
DROP: b2832244 : [b1caa21 LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 7055b650 : [b1caa21 LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha] src/changes/changes.xml
DROP: 2295a37d : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
DROP: 8b0415ea : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: b4d074be : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java
DROP: c2771a80 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: 3968a504 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java
DROP: 74112edc : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/time/DateUtilsRoundingTest.java
DROP: b5e3c453 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java
DROP: e32e42bc : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java
DROP: 14f53652 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java
DROP: 2cf60fe3 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java
DROP: 135f159b : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java
DROP: 5c121d45 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java
DROP: 685b35ad : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java
DROP: e1999289 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java
DROP: d5d4f3d9 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/builder/ToStringBuilderTest.java
DROP: 2a046e1a : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/StringUtilsTest.java
DROP: 27ea4e52 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java
DROP: afb27ea3 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/RandomUtilsTest.java
DROP: e3613692 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
DROP: b018e1eb : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java
DROP: 950003e1 : [967fdd0 LANG-1024: Fix JavaDoc errors in test code] src/site/xdoc/index.xml
DROP: 94122b52 : [6240a05 LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: 6acd7017 : [6240a05 LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 0f4f9585 : [673dbc5 Tiddy up JavaDoc] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 0a32305c : [7022c19 LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: 1c3ce833 : [7022c19 LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: f4743170 : [7022c19 LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.] src/changes/changes.xml
DROP: 92b881a2 : [4fcfad9 Formating.] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 936d33f9 : [c8e024f Formating.] src/main/java/org/apache/commons/lang3/SerializationUtils.java
DROP: 2a93c33b : [248fd21 Restore previous behavior that allows function results (arrays of booleans) to be modified.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: a3fd7e12 : [7196611 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/LocaleUtils.java
DROP: 94e843cc : [dd74cf1 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/reflect/InheritanceUtils.java
DROP: 88267a9b : [8a95db3 Format to 120 line length.] src/main/java/org/apache/commons/lang3/math/Fraction.java
DROP: 31551b34 : [60b79a9 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/math/Fraction.java
DROP: 0aecc999 : [0ff8493 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/event/EventUtils.java
DROP: e63e0a9b : [7b33ab1 Format to 120 line length.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: b362bea2 : [cf83256 Format to 120 line length.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 706064c3 : [2e9a359 Simplify using ternary expressions.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 52ec52d4 : [c9e3793 Refactor commons constants (no need to generate new arrays on every call).] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 9f641170 : [e769c18 Simplify using ternary expressions instead of nested if-elses.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 2cb7a6e2 : [082eb39 Format to 120 line length.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: ac0610ec : [c987d16 Simplify using ternary expressions instead of nested if-elses.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 29a953e1 : [f7e5f2c Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/LocaleUtils.java
DROP: 86754fde : [299ea79 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/SerializationUtils.java
DROP: e6b8441f : [93b1808 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java
DROP: e08d9459 : [8e757f1 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java
DROP: a3fbff94 : [b52a49a Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java
DROP: 7e4502f5 : [3833488 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 04af2f0e : [0ef7471 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/ClassUtils.java
DROP: 0ac4cce7 : [e3ee532 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/ClassUtils.java
DROP: ce5917d6 : [5a1101d Remove unused imports.] src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
DROP: d7423c1d : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: 8fd936dd : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java
DROP: 42b76a2e : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
DROP: aa45e601 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java
DROP: 3cdeacee : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java
DROP: 2cf00a8a : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java
DROP: 48629884 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/testbed/GenericParent.java
DROP: 10562baa : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java
DROP: 8e224df2 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java
DROP: 9da93e09 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
DROP: c50e6164 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java
DROP: 9a6c7014 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/DiffTest.java
DROP: c2c8449e : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/DiffResultTest.java
DROP: fb5c4aca : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java
DROP: 8e22cc14 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/StringUtilsTest.java
DROP: 35e8306f : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java
DROP: f488410c : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java
DROP: ac4c8351 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/RandomUtilsTest.java
DROP: d952f5d1 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java
DROP: 3ea70c13 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/NotImplementedExceptionTest.java
DROP: 20f9d767 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java
DROP: b3f81f98 : [96c30e2 Use final consistently.] src/test/java/org/apache/commons/lang3/ClassPathUtilsTest.java
DROP: b529818f : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/FormatCache.java
DROP: 30854e76 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: f9f60df3 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: ae2ed8fd : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/time/DateUtils.java
DROP: 04b67ac7 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java
DROP: 36fbb1d8 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java
DROP: 76127a2b : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java
DROP: fd3ae0fc : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
DROP: 1981ef32 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java
DROP: 5496b0b2 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java
DROP: ea72e083 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java
DROP: fc579b21 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java
DROP: 85bc86b2 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/builder/DiffResult.java
DROP: 032252bf : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/builder/Diff.java
DROP: 45f99b7d : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/Validate.java
TEST: 09f6ca49 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 3506011d : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/RandomUtils.java
DROP: bf5c77aa : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ObjectUtils.java
DROP: be4a4345 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/LocaleUtils.java
DROP: c1a9fd5e : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/EnumUtils.java
DROP: 2b593ca6 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ClassUtils.java
DROP: ba391299 : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ClassPathUtils.java
DROP: 284a0aff : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
DROP: b1ae2cdb : [96c30e2 Use final consistently.] src/main/java/org/apache/commons/lang3/ArrayUtils.java
DROP: d0524536 : [ba8c6f6 Add some missing tests.] src/test/java/org/apache/commons/lang3/ValidateTest.java
DROP: e37aaaca : [d965865 LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.] src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java
DROP: 1af89321 : [d965865 LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 0c952f0d : [d965865 LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.] src/changes/changes.xml
DROP: 2fbf6166 : [8f9a427 Fix broken JavaDoc] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 8c339545 : [68a6fd6 TypeUtils wildcard fixes] src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
DROP: 1b856808 : [6f688e4 add some failing tests with wildcards] src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
DROP: c967d879 : [9a16b76 Using Validate where possible in time package.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: 6572a809 : [5a28357 Using Validate where possible in math package.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: f068c5e8 : [5a28357 Using Validate where possible in math package.] src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
DROP: 6fdc842b : [a2c356d Using Validate where possible in concurrent package.] src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java
DROP: 56673c60 : [a2c356d Using Validate where possible in concurrent package.] src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java
DROP: 20de1f05 : [10641f9 Using Validate where possible in builder package.] src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java
DROP: fc8eabfd : [10641f9 Using Validate where possible in builder package.] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java
DROP: cda5a10a : [3728344 LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 419381fb : [3728344 LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
DROP: f498174f : [3728344 LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.] src/changes/changes.xml
DROP: 7f91e806 : [10f136b Use the term distance in documentation of getFuzzyDistance] src/main/java/org/apache/commons/lang3/StringUtils.java
HUNK: f887fce7 : [a2f44d0 Make checkstyle happy] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 9470424d : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/test/java/org/apache/commons/lang3/StringUtilsTest.java
HUNK: 37ba70f5 : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 01de1333 : [b78295b LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.] src/changes/changes.xml
DROP: 88b89120 : [287aba5 Tab police] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 0f75a7b7 : [287aba5 Tab police] src/changes/changes.xml
DROP: 9b653321 : [d16c62a Clarify that 0.d is decimal, not octal] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: 76f4699b : [21cbe95 Explained treatment of leading zeroes in isNumber() method Javadoc.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: ca6e94d0 : [39a5b77 Corrected Javadoc example.] src/main/java/org/apache/commons/lang3/StringUtils.java
HUNK: 30a9c9c4 : [daf4b4f Further tidying of Javadoc.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 7e7e4245 : [01fe918 Correct wrong documentation regarding extensibility of ImmutablePair and ImmutableTriple. This closes #13 from github.] src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java
DROP: dab225e6 : [01fe918 Correct wrong documentation regarding extensibility of ImmutablePair and ImmutableTriple. This closes #13 from github.] src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java
DROP: 0bde74a4 : [bd7a8d5 Dummy commit which closes #22 from github] pom.xml
DROP: 91914789 : [9376d1e Dummy commit which closes #21 from github] pom.xml
DROP: 77acac48 : [da147fc Add Thiago Andrade to the list of contributors for his contributions via github.] pom.xml
DROP: d02f3ee9 : [4b28af1 Fix typo] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: a0fc6aaa : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/test/java/org/apache/commons/lang3/StringUtilsTest.java
HUNK: 56d88b17 : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/StringUtils.java
DROP: 23adcde8 : [c3d6546 LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.] src/changes/changes.xml
DROP: a0df7d1f : [80f1988 Point potential contributors to the TagList report] src/site/xdoc/index.xml
DROP: 289f93ed : [cef1ca2 Use finer grained TagList configuration proposed by Bernd Eckenfels for the csv components] pom.xml
DROP: 5fec22b3 : [7d6e0be LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: 1f132f85 : [7d6e0be LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: 160a4be0 : [7d6e0be LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.] src/changes/changes.xml
DROP: 7ea3ee5f : [d910918 LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade.] src/main/java/org/apache/commons/lang3/math/NumberUtils.java
DROP: b6d1c039 : [d910918 LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade.] src/changes/changes.xml
DROP: a43cfca7 : [75fbc00 LANG-731: Better Javadoc for BitField class] src/main/java/org/apache/commons/lang3/BitField.java
DROP: fbfef6de : [75fbc00 LANG-731: Better Javadoc for BitField class] src/changes/changes.xml
DROP: 806f6724 : [d44f573 Add Michael Osipov to the list of contributors for his contributions to DurationFormatUtils] pom.xml
DROP: 34e576df : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/test/java/org/apache/commons/lang3/time/StopWatchTest.java
DROP: df5967fe : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: bf3a23bc : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: ab05c4c7 : [fd54d42 LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov] src/changes/changes.xml
DROP: 40b36d7c : [00dc479 Remove tab characters] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: 6437a49c : [2f0beab Remove more debug output (which is never actually written out)] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: f548897c : [98f76f4 Remove debug output from test] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: ee5c9ef9 : [4b74c38 LANG-1003: DurationFormatUtils are not able to handle negative duration/periods. Document new behavior for negative inputs.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: 137dda1c : [2486300 Removed unnecessary multiplication by one.] src/main/java/org/apache/commons/lang3/Conversion.java
DROP: 8b1d9ce3 : [64ef8a8 LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: 50c59cb5 : [64ef8a8 LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: 350c68d6 : [64ef8a8 LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.] src/changes/changes.xml
DROP: 1d51d6dd : [358f139 Organize imports, don't use wildcard imports] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: 36412843 : [548e5c4 Use org.junit.Assert.assertArrayEquals] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: ccf8d219 : [fe354be Remove commented out test code] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: 461a0111 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java
DROP: cc589653 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/StopWatch.java
DROP: 2793c649 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 4d1779d0 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
DROP: fdf70166 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: 3fa095ea : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java
DROP: 2ecb1d81 : [b4b51a8 <action issue=LANG-1001 type=fix dev=ggregory due-to=Michael Osipov>ISO 8601 misspelled throughout the Javadocs</action>] src/changes/changes.xml
DROP: 0cf09998 : [6125951 LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.] src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java
DROP: 2871baf1 : [6125951 LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.] src/main/java/org/apache/commons/lang3/text/StrBuilder.java
DROP: f759d9eb : [6125951 LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.] src/changes/changes.xml
DROP: c0c46390 : [d13a402 Remove keyValues map  per sebb's suggestion] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 4abc1d3f : [d9bd12d Rename TextStrategy to CaseInsensitiveTextStrategy per sebb's suggestion] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 130d4347 : [454fd1e Add another missing ticket to changes.xml] src/changes/changes.xml
DROP: ff2289d5 : [b464711 Add missing bug fix to changes.xml] src/changes/changes.xml
DROP: 87298382 : [804e5f8 Merge qualifiers] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: da8e0167 : [f4b7d62 LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
DROP: 32191568 : [f4b7d62 LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 3c164ffe : [f4b7d62 LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter] src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
DROP: 7a26b6ce : [649a089 LANG-1088 - toLowerCase should use locale, additional unit tests for case-insensitive matching] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: c4baf2c1 : [649a089 LANG-1088 - toLowerCase should use locale, additional unit tests for case-insensitive matching] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: 368d1bbe : [3b2de24 LANG-1088 - FastDateParser should be case insensitive] src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
DROP: d2a96d81 : [3b2de24 LANG-1088 - FastDateParser should be case insensitive] src/main/java/org/apache/commons/lang3/time/FastDateParser.java
DROP: ea31491c : [e288d39 Use enhanced for loop] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: c222ec55 : [5d9141e Added Javadoc to clear checkstyle error] src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
DROP: 48a4ae75 : [fbb0f7f LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya] src/test/java/org/apache/commons/lang3/text/WordUtilsTest.java
DROP: 7e9722f5 : [fbb0f7f LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya] src/main/java/org/apache/commons/lang3/text/WordUtils.java
DROP: 07e8ef9c : [fbb0f7f LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya] src/changes/changes.xml
DROP: 0cd67210 : [d99f581 Clean up Javadocs. You do not need to refer to classes in java.lang with a FQCN.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
COMP: ffb12e15 : [3efd6cc Refactor magic number into constant.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
DROP: 0b6b8a75 : [4eb70a5 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
DROP: c6708e08 : [70d9e8b Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
DROP: 28da524e : [39168bb Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
COMP: e4a0ab0f : [3e33304 Statement unnecessarily nested within else clause.] src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
DROP: 29141a9a : [6b438fe Add next version to changes.xml] src/changes/changes.xml
DROP: 7b8d8f8d : [8a52863 Document 3.3.2 in doap] doap_lang.rdf
DROP: 68d6d375 : [5bcbf2e Update README.md after release 3.3.2] README.md
DROP: 95d23872 : [d72d2b0 Document 3.3.2 release date] src/site/xdoc/release-history.xml
DROP: cf2d9813 : [d72d2b0 Document 3.3.2 release date] src/changes/changes.xml
DROP: b515a66e : [0105640 Bump version after release of 3.3.2] pom.xml
DROP: 7d364559 : [0105640 Bump version after release of 3.3.2] default.properties

[STATS] ************** Stats **************
[STATS] total.time : 9.583
[STATS] main.algo : 4.805
[STATS] insert.edge : 0.0
[STATS] hunk.deps.time : 1.14
[STATS] extract.time : 0.0
[STATS] call.graph.time : 0.78
[STATS] tests.time : 2.581
[STATS] comp.count : 4
[STATS] hunk.count : 4
[STATS] test.count : 3
[STATS] hunk.deps.set : 4
[STATS] drop.count : 493
[STATS] ast.line.count : 446
[STATS] test.deps : 12
[STATS] comp.deps : 66
[STATS] reduction.hunk : 97.81746031746032
[STATS] reduction.rate : 98.61111111111111
[STATS] ***********************************
