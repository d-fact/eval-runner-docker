===== Git History Slicing Toolkit =====
   ______ _____  __ _                  
  / ____// ___/ / /(_)_____ ___   _____
 / /     \__ \ / // // ___// _ \ / ___/
/ /___  ___/ // // // /__ /  __// /
\____/ /____//_//_/ \___/ \___//_/

=======================================
[DEBUG] Original |H|: 269
[OUTPUT] Computing FUNC & COMP set ... 
[OUTPUT] Running coverage analysis ...
[DEBUG] FULL
[DEBUG] 214 classes have been analyzed.
[DEBUG] Analyzing package: org/apache/commons/net/bsd ...
[DEBUG] 	File: RCommandClient.java ...
[DEBUG] 	File: RLoginClient.java ...
[DEBUG] 	File: RExecClient.java ...
[DEBUG] Analyzing package: examples/nntp ...
[DEBUG] 	File: ExtendedNNTPOps.java ...
[DEBUG] 	File: ArticleReader.java ...
[DEBUG] 	File: ListNewsgroups.java ...
[DEBUG] 	File: NNTPUtils.java ...
[DEBUG] 	File: MessageThreading.java ...
[DEBUG] 	File: PostMessage.java ...
[DEBUG] Analyzing package: examples/unix ...
[DEBUG] 	File: daytime.java ...
[DEBUG] 	File: echo.java ...
[DEBUG] 	File: rlogin.java ...
[DEBUG] 	File: rshell.java ...
[DEBUG] 	File: rexec.java ...
[DEBUG] 	File: rdate.java ...
[DEBUG] 	File: finger.java ...
[DEBUG] 	File: fwhois.java ...
[DEBUG] 	File: chargen.java ...
[DEBUG] Analyzing package: examples/cidr ...
[DEBUG] 	File: SubnetUtilsExample.java ...
[DEBUG] Analyzing package: org/apache/commons/net/discard ...
[DEBUG] 	File: DiscardUDPClient.java ...
[DEBUG] 	File: DiscardTCPClient.java ...
[DEBUG] Analyzing package: org/apache/commons/net/imap ...
[DEBUG] 	File: IMAPSClient.java ...
[DEBUG] 	File: IMAPClient.java ...
[DEBUG] 	File: IMAP.java ...
[DEBUG] 	File: IMAPCommand.java ...
[DEBUG] 	File: AuthenticatingIMAPClient.java ...
[DEBUG] 	File: IMAPReply.java ...
[DEBUG] Analyzing package: org/apache/commons/net/ftp ...
[DEBUG] 	File: FTPClient.java ...
[DEBUG] 	File: FTPCommand.java ...
[DEBUG] 	File: FTP.java ...
[DEBUG] 	File: FTPSSocketFactory.java ...
[DEBUG] 	File: FTPListParseEngine.java ...
[DEBUG] 	File: FTPReply.java ...
[DEBUG] 	File: FTPSTrustManager.java ...
[DEBUG] 	File: FTPConnectionClosedException.java ...
[DEBUG] 	File: FTPClientConfig.java ...
[DEBUG] 	File: FTPFileFilters.java ...
[DEBUG] 	File: FTPCmd.java ...
[DEBUG] 	File: FTPSCommand.java ...
[DEBUG] 	File: FTPSClient.java ...
[DEBUG] 	File: FTPHTTPClient.java ...
[DEBUG] 	File: FTPFile.java ...
[DEBUG] 	File: FTPFileEntryParserImpl.java ...
[DEBUG] 	File: FTPSServerSocketFactory.java ...
[DEBUG] Analyzing package: org/apache/commons/net/util ...
[DEBUG] 	File: ListenerList.java ...
[DEBUG] 	File: SubnetUtils.java ...
[DEBUG] 	File: KeyManagerUtils.java ...
[DEBUG] 	File: Charsets.java ...
[DEBUG] 	File: Base64.java ...
[DEBUG] 	File: SSLSocketUtils.java ...
[DEBUG] 	File: TrustManagerUtils.java ...
[DEBUG] 	File: SSLContextUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/net/time ...
[DEBUG] 	File: TimeTCPClient.java ...
[DEBUG] 	File: TimeUDPClient.java ...
[DEBUG] Analyzing package: examples/util ...
[DEBUG] 	File: IOUtil.java ...
[DEBUG] Analyzing package: org/apache/commons/net/smtp ...
[DEBUG] 	File: SMTPReply.java ...
[DEBUG] 	File: SMTPSClient.java ...
[DEBUG] 	File: SMTPCommand.java ...
[DEBUG] 	File: SimpleSMTPHeader.java ...
[DEBUG] 	File: SMTP.java ...
[DEBUG] 	File: SMTPClient.java ...
[DEBUG] 	File: RelayPath.java ...
[DEBUG] 	File: SMTPConnectionClosedException.java ...
[DEBUG] 	File: AuthenticatingSMTPClient.java ...
[DEBUG] Analyzing package: org/apache/commons/net/tftp ...
[DEBUG] 	File: TFTPErrorPacket.java ...
[DEBUG] 	File: TFTPDataPacket.java ...
[DEBUG] 	File: TFTPRequestPacket.java ...
[DEBUG] 	File: TFTPPacketException.java ...
[DEBUG] 	File: TFTPReadRequestPacket.java ...
[DEBUG] 	File: TFTPAckPacket.java ...
[DEBUG] 	File: TFTPWriteRequestPacket.java ...
[DEBUG] 	File: TFTPClient.java ...
[DEBUG] 	File: TFTPPacket.java ...
[DEBUG] 	File: TFTP.java ...
[DEBUG] Analyzing package: org/apache/commons/net/ftp/parser ...
[DEBUG] 	File: VMSFTPEntryParser.java ...
[DEBUG] 	File: RegexFTPFileEntryParserImpl.java ...
[DEBUG] 	File: NetwareFTPEntryParser.java ...
[DEBUG] 	File: CompositeFileEntryParser.java ...
[DEBUG] 	File: NTFTPEntryParser.java ...
[DEBUG] 	File: UnixFTPEntryParser.java ...
[DEBUG] 	File: MacOsPeterFTPEntryParser.java ...
[DEBUG] 	File: VMSVersioningFTPEntryParser.java ...
[DEBUG] 	File: OS2FTPEntryParser.java ...
[DEBUG] 	File: DefaultFTPFileEntryParserFactory.java ...
[DEBUG] 	File: EnterpriseUnixFTPEntryParser.java ...
[DEBUG] 	File: OS400FTPEntryParser.java ...
[DEBUG] 	File: MLSxEntryParser.java ...
[DEBUG] 	File: FTPTimestampParserImpl.java ...
[DEBUG] 	File: ConfigurableFTPFileEntryParserImpl.java ...
[DEBUG] 	File: ParserInitializationException.java ...
[DEBUG] 	File: MVSFTPEntryParser.java ...
[DEBUG] Analyzing package: org/apache/commons/net/io ...
[DEBUG] 	File: CopyStreamEvent.java ...
[DEBUG] 	File: CopyStreamException.java ...
[DEBUG] 	File: ToNetASCIIInputStream.java ...
[DEBUG] 	File: CRLFLineReader.java ...
[DEBUG] 	File: Util.java ...
[DEBUG] 	File: CopyStreamAdapter.java ...
[DEBUG] 	File: SocketInputStream.java ...
[DEBUG] 	File: DotTerminatedMessageWriter.java ...
[DEBUG] 	File: ToNetASCIIOutputStream.java ...
[DEBUG] 	File: DotTerminatedMessageReader.java ...
[DEBUG] 	File: SocketOutputStream.java ...
[DEBUG] 	File: FromNetASCIIOutputStream.java ...
[DEBUG] 	File: FromNetASCIIInputStream.java ...
[DEBUG] Analyzing package: examples/ftp ...
[DEBUG] 	File: TFTPExample.java ...
[DEBUG] 	File: FTPClientExample.java ...
[DEBUG] 	File: ServerToServerFTP.java ...
[DEBUG] Analyzing package: org/apache/commons/net/echo ...
[DEBUG] 	File: EchoTCPClient.java ...
[DEBUG] 	File: EchoUDPClient.java ...
[DEBUG] Analyzing package: org/apache/commons/net ...
[DEBUG] 	File: ProtocolCommandEvent.java ...
[DEBUG] 	File: ProtocolCommandSupport.java ...
[DEBUG] 	File: SocketClient.java ...
[DEBUG] 	File: DatagramSocketClient.java ...
[DEBUG] 	File: DefaultSocketFactory.java ...
[DEBUG] 	File: PrintCommandListener.java ...
[DEBUG] 	File: DefaultDatagramSocketFactory.java ...
[DEBUG] 	File: MalformedServerReplyException.java ...
[DEBUG] Analyzing package: org/apache/commons/net/daytime ...
[DEBUG] 	File: DaytimeTCPClient.java ...
[DEBUG] 	File: DaytimeUDPClient.java ...
[DEBUG] Analyzing package: org/apache/commons/net/pop3 ...
[DEBUG] 	File: ExtendedPOP3Client.java ...
[DEBUG] 	File: POP3Reply.java ...
[DEBUG] 	File: POP3.java ...
[DEBUG] 	File: POP3Command.java ...
[DEBUG] 	File: POP3Client.java ...
[DEBUG] 	File: POP3SClient.java ...
[DEBUG] 	File: POP3MessageInfo.java ...
[DEBUG] Analyzing package: org/apache/commons/net/nntp ...
[DEBUG] 	File: ThreadContainer.java ...
[DEBUG] 	File: ArticleIterator.java ...
[DEBUG] 	File: ArticlePointer.java ...
[DEBUG] 	File: NNTPReply.java ...
[DEBUG] 	File: Threader.java ...
[DEBUG] 	File: SimpleNNTPHeader.java ...
[DEBUG] 	File: NNTPConnectionClosedException.java ...
[DEBUG] 	File: NNTP.java ...
[DEBUG] 	File: ArticleInfo.java ...
[DEBUG] 	File: NewsgroupInfo.java ...
[DEBUG] 	File: NewsgroupIterator.java ...
[DEBUG] 	File: NNTPClient.java ...
[DEBUG] 	File: NNTPCommand.java ...
[DEBUG] 	File: NewGroupsOrNewsQuery.java ...
[DEBUG] 	File: Article.java ...
[DEBUG] 	File: ReplyIterator.java ...
[DEBUG] Analyzing package: org/apache/commons/net/chargen ...
[DEBUG] 	File: CharGenTCPClient.java ...
[DEBUG] 	File: CharGenUDPClient.java ...
[DEBUG] Analyzing package: examples/ntp ...
[DEBUG] 	File: NTPClient.java ...
[DEBUG] 	File: TimeClient.java ...
[DEBUG] 	File: SimpleNTPServer.java ...
[DEBUG] Analyzing package: org/apache/commons/net/finger ...
[DEBUG] 	File: FingerClient.java ...
[DEBUG] Analyzing package: org/apache/commons/net/telnet ...
[DEBUG] 	File: TelnetCommand.java ...
[DEBUG] 	File: WindowSizeOptionHandler.java ...
[DEBUG] 	File: TerminalTypeOptionHandler.java ...
[DEBUG] 	File: TelnetInputStream.java ...
[DEBUG] 	File: Telnet.java ...
[DEBUG] 	File: SimpleOptionHandler.java ...
[DEBUG] 	File: EchoOptionHandler.java ...
[DEBUG] 	File: TelnetOption.java ...
[DEBUG] 	File: TelnetOutputStream.java ...
[DEBUG] 	File: SuppressGAOptionHandler.java ...
[DEBUG] 	File: TelnetClient.java ...
[DEBUG] 	File: InvalidTelnetOptionException.java ...
[DEBUG] 	File: TelnetOptionHandler.java ...
[DEBUG] Analyzing package: examples/mail ...
[DEBUG] 	File: IMAPExportMbox.java ...
[DEBUG] 	File: IMAPUtils.java ...
[DEBUG] 	File: IMAPImportMbox.java ...
[DEBUG] 	File: IMAPMail.java ...
[DEBUG] 	File: SMTPMail.java ...
[DEBUG] 	File: POP3Mail.java ...
[DEBUG] Analyzing package: org/apache/commons/net/whois ...
[DEBUG] 	File: WhoisClient.java ...
[DEBUG] Analyzing package: examples/telnet ...
[DEBUG] 	File: WeatherTelnet.java ...
[DEBUG] 	File: TelnetClientExample.java ...
[DEBUG] Analyzing package: examples ...
[DEBUG] 	File: Main.java ...
[DEBUG] Analyzing package: org/apache/commons/net/ntp ...
[DEBUG] 	File: NtpV3Impl.java ...
[DEBUG] 	File: NTPUDPClient.java ...
[DEBUG] 	File: NtpUtils.java ...
[DEBUG] 	File: TimeInfo.java ...
[DEBUG] 	File: TimeStamp.java ...
[DEBUG] Drawing static call graph ...
[OUTPUT] Scanning class files ...
[DEBUG] 0 Reading class file: DefaultDatagramSocketFactory.class
[DEBUG] 1 Reading class file: EchoUDPClient.class
[DEBUG] 2 Reading class file: EchoTCPClient.class
[DEBUG] 3 Reading class file: RExecClient.class
[DEBUG] 4 Reading class file: RCommandClient.class
[DEBUG] 5 Reading class file: RLoginClient.class
[DEBUG] 6 Reading class file: ProtocolCommandEvent.class
[DEBUG] 7 Reading class file: SocketClient.class
[DEBUG] 8 Reading class file: TimeUDPClient.class
[DEBUG] 9 Reading class file: TimeTCPClient.class
[DEBUG] 10 Reading class file: ProtocolCommandSupport.class
[DEBUG] 11 Reading class file: FromNetASCIIOutputStream.class
[DEBUG] 12 Reading class file: Util.class
[DEBUG] 13 Reading class file: CopyStreamAdapter.class
[DEBUG] 14 Reading class file: SocketInputStream.class
[DEBUG] 15 Reading class file: DotTerminatedMessageReader.class
[DEBUG] 16 Reading class file: CopyStreamListener.class
[DEBUG] 17 Reading class file: DotTerminatedMessageWriter.class
[DEBUG] 18 Reading class file: CRLFLineReader.class
[DEBUG] 19 Reading class file: CopyStreamException.class
[DEBUG] 20 Reading class file: SocketOutputStream.class
[DEBUG] 21 Reading class file: CopyStreamEvent.class
[DEBUG] 22 Reading class file: ToNetASCIIOutputStream.class
[DEBUG] 23 Reading class file: FromNetASCIIInputStream.class
[DEBUG] 24 Reading class file: ToNetASCIIInputStream.class
[DEBUG] 25 Reading class file: TelnetOption.class
[DEBUG] 26 Reading class file: TelnetCommand.class
[DEBUG] 27 Reading class file: SuppressGAOptionHandler.class
[DEBUG] 28 Reading class file: EchoOptionHandler.class
[DEBUG] 29 Reading class file: TelnetOptionHandler.class
[DEBUG] 30 Reading class file: Telnet.class
[DEBUG] 31 Reading class file: SimpleOptionHandler.class
[DEBUG] 32 Reading class file: TerminalTypeOptionHandler.class
[DEBUG] 33 Reading class file: TelnetOutputStream.class
[DEBUG] 34 Reading class file: TelnetClient.class
[DEBUG] 35 Reading class file: WindowSizeOptionHandler.class
[DEBUG] 36 Reading class file: TelnetNotificationHandler.class
[DEBUG] 37 Reading class file: TelnetInputStream.class
[DEBUG] 38 Reading class file: TelnetInputListener.class
[DEBUG] 39 Reading class file: InvalidTelnetOptionException.class
[DEBUG] 40 Reading class file: DaytimeTCPClient.class
[DEBUG] 41 Reading class file: DaytimeUDPClient.class
[DEBUG] 42 Reading class file: DefaultSocketFactory.class
[DEBUG] 43 Reading class file: DatagramSocketClient.class
[DEBUG] 44 Reading class file: DiscardUDPClient.class
[DEBUG] 45 Reading class file: DiscardTCPClient.class
[DEBUG] 46 Reading class file: FingerClient.class
[DEBUG] 47 Reading class file: IMAP$IMAPState.class
[DEBUG] 48 Reading class file: IMAPClient.class
[DEBUG] 49 Reading class file: AuthenticatingIMAPClient$AUTH_METHOD.class
[DEBUG] 50 Reading class file: IMAP$1.class
[DEBUG] 51 Reading class file: IMAP$IMAPChunkListener.class
[DEBUG] 52 Reading class file: IMAPClient$FETCH_ITEM_NAMES.class
[DEBUG] 53 Reading class file: IMAPClient$STATUS_DATA_ITEMS.class
[DEBUG] 54 Reading class file: AuthenticatingIMAPClient$1.class
[DEBUG] 55 Reading class file: AuthenticatingIMAPClient.class
[DEBUG] 56 Reading class file: IMAPCommand.class
[DEBUG] 57 Reading class file: IMAPClient$SEARCH_CRITERIA.class
[DEBUG] 58 Reading class file: IMAPSClient.class
[DEBUG] 59 Reading class file: IMAPReply.class
[DEBUG] 60 Reading class file: IMAP.class
[DEBUG] 61 Reading class file: MalformedServerReplyException.class
[DEBUG] 62 Reading class file: CharGenTCPClient.class
[DEBUG] 63 Reading class file: CharGenUDPClient.class
[DEBUG] 64 Reading class file: WhoisClient.class
[DEBUG] 65 Reading class file: TrustManagerUtils$TrustManager.class
[DEBUG] 66 Reading class file: SubnetUtils$1.class
[DEBUG] 67 Reading class file: SubnetUtils$SubnetInfo.class
[DEBUG] 68 Reading class file: KeyManagerUtils.class
[DEBUG] 69 Reading class file: SSLContextUtils.class
[DEBUG] 70 Reading class file: TrustManagerUtils.class
[DEBUG] 71 Reading class file: SSLSocketUtils.class
[DEBUG] 72 Reading class file: SubnetUtils.class
[DEBUG] 73 Reading class file: ListenerList.class
[DEBUG] 74 Reading class file: Charsets.class
[DEBUG] 75 Reading class file: KeyManagerUtils$ClientKeyStore.class
[DEBUG] 76 Reading class file: KeyManagerUtils$X509KeyManager.class
[DEBUG] 77 Reading class file: Base64.class
[DEBUG] 78 Reading class file: PrintCommandListener.class
[DEBUG] 79 Reading class file: POP3.class
[DEBUG] 80 Reading class file: POP3SClient.class
[DEBUG] 81 Reading class file: POP3Command.class
[DEBUG] 82 Reading class file: POP3Client.class
[DEBUG] 83 Reading class file: POP3MessageInfo.class
[DEBUG] 84 Reading class file: POP3Reply.class
[DEBUG] 85 Reading class file: ExtendedPOP3Client.class
[DEBUG] 86 Reading class file: ExtendedPOP3Client$1.class
[DEBUG] 87 Reading class file: ExtendedPOP3Client$AUTH_METHOD.class
[DEBUG] 88 Reading class file: TFTPAckPacket.class
[DEBUG] 89 Reading class file: TFTP.class
[DEBUG] 90 Reading class file: TFTPPacket.class
[DEBUG] 91 Reading class file: TFTPWriteRequestPacket.class
[DEBUG] 92 Reading class file: TFTPClient.class
[DEBUG] 93 Reading class file: TFTPReadRequestPacket.class
[DEBUG] 94 Reading class file: TFTPRequestPacket.class
[DEBUG] 95 Reading class file: TFTPDataPacket.class
[DEBUG] 96 Reading class file: TFTPErrorPacket.class
[DEBUG] 97 Reading class file: TFTPPacketException.class
[DEBUG] 98 Reading class file: FTPCommand.class
[DEBUG] 99 Reading class file: FTPClientConfig.class
[DEBUG] 100 Reading class file: FTP.class
[DEBUG] 101 Reading class file: FTPClient.class
[DEBUG] 102 Reading class file: FTPFileFilters$1.class
[DEBUG] 103 Reading class file: FTPSTrustManager.class
[DEBUG] 104 Reading class file: FTPFileFilters$3.class
[DEBUG] 105 Reading class file: FTPClient$CSL.class
[DEBUG] 106 Reading class file: FTPFileFilters$2.class
[DEBUG] 107 Reading class file: FTPFileEntryParser.class
[DEBUG] 108 Reading class file: FTPSServerSocketFactory.class
[DEBUG] 109 Reading class file: FTPFileEntryParserImpl.class
[DEBUG] 110 Reading class file: FTPClient$PropertiesSingleton.class
[DEBUG] 111 Reading class file: FTPHTTPClient.class
[DEBUG] 112 Reading class file: FTPFileFilters.class
[DEBUG] 113 Reading class file: FTPTimestampParserImpl.class
[DEBUG] 114 Reading class file: VMSFTPEntryParser.class
[DEBUG] 115 Reading class file: ParserInitializationException.class
[DEBUG] 116 Reading class file: RegexFTPFileEntryParserImpl.class
[DEBUG] 117 Reading class file: CompositeFileEntryParser.class
[DEBUG] 118 Reading class file: VMSVersioningFTPEntryParser.class
[DEBUG] 119 Reading class file: MLSxEntryParser.class
[DEBUG] 120 Reading class file: NTFTPEntryParser.class
[DEBUG] 121 Reading class file: ConfigurableFTPFileEntryParserImpl.class
[DEBUG] 122 Reading class file: NetwareFTPEntryParser.class
[DEBUG] 123 Reading class file: MacOsPeterFTPEntryParser.class
[DEBUG] 124 Reading class file: OS400FTPEntryParser.class
[DEBUG] 125 Reading class file: MVSFTPEntryParser.class
[DEBUG] 126 Reading class file: OS2FTPEntryParser.class
[DEBUG] 127 Reading class file: FTPTimestampParser.class
[DEBUG] 128 Reading class file: FTPFileEntryParserFactory.class
[DEBUG] 129 Reading class file: EnterpriseUnixFTPEntryParser.class
[DEBUG] 130 Reading class file: DefaultFTPFileEntryParserFactory.class
[DEBUG] 131 Reading class file: UnixFTPEntryParser.class
[DEBUG] 132 Reading class file: FTPCmd.class
[DEBUG] 133 Reading class file: FTPListParseEngine.class
[DEBUG] 134 Reading class file: FTPReply.class
[DEBUG] 135 Reading class file: FTPSCommand.class
[DEBUG] 136 Reading class file: FTPFile.class
[DEBUG] 137 Reading class file: Configurable.class
[DEBUG] 138 Reading class file: FTPSClient.class
[DEBUG] 139 Reading class file: FTPConnectionClosedException.class
[DEBUG] 140 Reading class file: FTPSSocketFactory.class
[DEBUG] 141 Reading class file: FTPFileFilter.class
[DEBUG] 142 Reading class file: SimpleNNTPHeader.class
[DEBUG] 143 Reading class file: NNTPClient.class
[DEBUG] 144 Reading class file: ArticlePointer.class
[DEBUG] 145 Reading class file: NewsgroupIterator.class
[DEBUG] 146 Reading class file: NewsgroupInfo.class
[DEBUG] 147 Reading class file: ThreadContainer.class
[DEBUG] 148 Reading class file: Threader.class
[DEBUG] 149 Reading class file: ArticleInfo.class
[DEBUG] 150 Reading class file: NewGroupsOrNewsQuery.class
[DEBUG] 151 Reading class file: NNTPConnectionClosedException.class
[DEBUG] 152 Reading class file: Threadable.class
[DEBUG] 153 Reading class file: ArticleIterator.class
[DEBUG] 154 Reading class file: Article.class
[DEBUG] 155 Reading class file: NNTPCommand.class
[DEBUG] 156 Reading class file: ReplyIterator.class
[DEBUG] 157 Reading class file: NNTPReply.class
[DEBUG] 158 Reading class file: NNTP.class
[DEBUG] 159 Reading class file: TimeInfo.class
[DEBUG] 160 Reading class file: NtpUtils.class
[DEBUG] 161 Reading class file: NtpV3Impl.class
[DEBUG] 162 Reading class file: TimeStamp.class
[DEBUG] 163 Reading class file: NTPUDPClient.class
[DEBUG] 164 Reading class file: NtpV3Packet.class
[DEBUG] 165 Reading class file: ProtocolCommandListener.class
[DEBUG] 166 Reading class file: SimpleSMTPHeader.class
[DEBUG] 167 Reading class file: SMTPSClient.class
[DEBUG] 168 Reading class file: SMTPClient.class
[DEBUG] 169 Reading class file: SMTP.class
[DEBUG] 170 Reading class file: SMTPReply.class
[DEBUG] 171 Reading class file: SMTPConnectionClosedException.class
[DEBUG] 172 Reading class file: AuthenticatingSMTPClient$AUTH_METHOD.class
[DEBUG] 173 Reading class file: RelayPath.class
[DEBUG] 174 Reading class file: AuthenticatingSMTPClient.class
[DEBUG] 175 Reading class file: SMTPCommand.class
[DEBUG] 176 Reading class file: DatagramSocketFactory.class
[DEBUG] 177 Reading class file: SubnetUtilsExample.class
[DEBUG] 178 Reading class file: IMAPExportMbox.class
[DEBUG] 179 Reading class file: IMAPImportMbox.class
[DEBUG] 180 Reading class file: IMAPExportMbox$MboxListener.class
[DEBUG] 181 Reading class file: IMAPExportMbox$1.class
[DEBUG] 182 Reading class file: SMTPMail.class
[DEBUG] 183 Reading class file: POP3Mail.class
[DEBUG] 184 Reading class file: IMAPMail.class
[DEBUG] 185 Reading class file: IMAPUtils.class
[DEBUG] 186 Reading class file: TelnetClientExample.class
[DEBUG] 187 Reading class file: WeatherTelnet.class
[DEBUG] 188 Reading class file: Main.class
[DEBUG] 189 Reading class file: rdate.class
[DEBUG] 190 Reading class file: rshell.class
[DEBUG] 191 Reading class file: fwhois.class
[DEBUG] 192 Reading class file: chargen.class
[DEBUG] 193 Reading class file: rlogin.class
[DEBUG] 194 Reading class file: daytime.class
[DEBUG] 195 Reading class file: finger.class
[DEBUG] 196 Reading class file: echo.class
[DEBUG] 197 Reading class file: rexec.class
[DEBUG] 198 Reading class file: IOUtil.class
[DEBUG] 199 Reading class file: IOUtil$2.class
[DEBUG] 200 Reading class file: IOUtil$1.class
[DEBUG] 201 Reading class file: FTPClientExample.class
[DEBUG] 202 Reading class file: FTPClientExample$1.class
[DEBUG] 203 Reading class file: TFTPExample.class
[DEBUG] 204 Reading class file: ServerToServerFTP.class
[DEBUG] 205 Reading class file: ArticleReader.class
[DEBUG] 206 Reading class file: ListNewsgroups.class
[DEBUG] 207 Reading class file: NNTPUtils.class
[DEBUG] 208 Reading class file: ExtendedNNTPOps.class
[DEBUG] 209 Reading class file: PostMessage.class
[DEBUG] 210 Reading class file: MessageThreading.class
[DEBUG] 211 Reading class file: NTPClient.class
[DEBUG] 212 Reading class file: TimeClient.class
[DEBUG] 213 Reading class file: SimpleNTPServer.class
[DEBUG] 1: Done: org.apache.commons.net.DatagramSocketClient
[DEBUG] 2: Done: org.apache.commons.net.ntp.NTPUDPClient
[DEBUG] 3: Done: org.apache.commons.net.ntp.TimeStamp
[DEBUG] 4: Done: org.apache.commons.net.ntp.TimeInfo
[DEBUG] 5: Done: examples.ntp.SimpleNTPServer
[DEBUG] 6: Done: org.apache.commons.net.DefaultDatagramSocketFactory
[DEBUG] 7: Done: org.apache.commons.net.ntp.NtpV3Impl
[DEBUG] 8: Done: org.apache.commons.net.ntp.NtpUtils
[DEBUG] 9: Done: org.apache.commons.net.DatagramSocketFactory
[DEBUG] 10: Done: org.apache.commons.net.ntp.NtpV3Packet
[DEBUG] Adding to touch set ...
[DEBUG] Test: examples.ntp.SimpleNTPServer.connect()
Test: org.apache.commons.net.ntp.NtpV3Impl.setReferenceId(int)
Test: org.apache.commons.net.ntp.TimeStamp.getCurrentTime()
Test: org.apache.commons.net.ntp.NtpV3Impl.buf : byte[]
Test: org.apache.commons.net.ntp.NtpV3Impl.setRootDispersion(int)
Test: org.apache.commons.net.ntp.NtpV3Impl.getMode()
Test: org.apache.commons.net.ntp.NtpV3Impl.getReferenceTimeStamp()
Test: org.apache.commons.net.ntp.NtpV3Impl.getTransmitTimeStamp()
Test: examples.ntp.SimpleNTPServer.isRunning()
Test: org.apache.commons.net.ntp.NtpV3Impl.setRootDelay(int)
Test: org.apache.commons.net.ntp.NtpV3Impl
Test: org.apache.commons.net.ntp.NtpV3Impl.getReceiveTimeStamp()
Test: org.apache.commons.net.ntp.TimeInfo.getReturnTime()
Test: examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long)
Test: org.apache.commons.net.ntp.NtpV3Impl.setPrecision(int)
Test: org.apache.commons.net.DefaultDatagramSocketFactory
Test: org.apache.commons.net.DatagramSocketClient
Test: org.apache.commons.net.ntp.NtpV3Impl.setTransmitTime(TimeStamp)
Test: org.apache.commons.net.ntp.NtpV3Impl.setReferenceTime(TimeStamp)
Test: org.apache.commons.net.ntp.TimeStamp.TimeStamp(long)
Test: org.apache.commons.net.ntp.NtpV3Impl.setTimestamp(int,TimeStamp)
Test: examples.ntp.SimpleNTPServer.run()
Test: org.apache.commons.net.ntp.NtpV3Impl.setStratum(int)
Test: org.apache.commons.net.ntp.NtpV3Impl.setMode(int)
Test: org.apache.commons.net.ntp.NtpUtils.getReferenceClock(NtpV3Packet)
Test: org.apache.commons.net.ntp.NtpV3Impl.ui(byte)
Test: org.apache.commons.net.ntp.NtpV3Impl.setPoll(int)
Test: org.apache.commons.net.ntp.TimeInfo.TimeInfo(NtpV3Packet,long,List,boolean)
Test: org.apache.commons.net.ntp.NtpV3Impl.getOriginateTimeStamp()
Test: org.apache.commons.net.ntp.NtpV3Impl.setInt(int,int)
Test: org.apache.commons.net.ntp.NtpV3Impl.NtpV3Impl()
Test: org.apache.commons.net.ntp.NTPUDPClient.NTPUDPClient()
Test: org.apache.commons.net.ntp.TimeStamp.compareTo(TimeStamp)
Test: org.apache.commons.net.ntp.TimeStamp.getTime(long)
Test: examples.ntp.SimpleNTPServer
Test: org.apache.commons.net.ntp.TimeStamp.toNtpTime(long)
Test: org.apache.commons.net.DatagramSocketClient.isOpen()
Test: org.apache.commons.net.ntp.NtpV3Impl.getLong(int)
Test: examples.ntp.SimpleNTPServer.stop()
Test: org.apache.commons.net.DatagramSocketClient.close()
Test: org.apache.commons.net.DefaultDatagramSocketFactory.DefaultDatagramSocketFactory()
Test: org.apache.commons.net.ntp.TimeStamp
Test: org.apache.commons.net.ntp.NtpV3Impl.getReferenceId()
Test: org.apache.commons.net.DefaultDatagramSocketFactory.createDatagramSocket()
Test: org.apache.commons.net.ntp.NtpV3Impl.setVersion(int)
Test: org.apache.commons.net.ntp.TimeInfo.TimeInfo(NtpV3Packet,long,boolean)
Test: org.apache.commons.net.ntp.TimeStamp.ntpValue()
Test: org.apache.commons.net.ntp.NtpV3Impl.getDatagramPacket()
Test: examples.ntp.SimpleNTPServer.start()
Test: org.apache.commons.net.DatagramSocketClient.setDefaultTimeout(int)
Test: org.apache.commons.net.ntp.NtpV3Impl.getInt(int)
Test: org.apache.commons.net.DatagramSocketClient.open()
Test: org.apache.commons.net.ntp.NtpUtils
Test: examples.ntp.SimpleNTPServer.isStarted()
Test: org.apache.commons.net.ntp.NtpV3Impl.getStratum()
Test: org.apache.commons.net.DatagramSocketClient.__DEFAULT_SOCKET_FACTORY : DatagramSocketFactory
Test: org.apache.commons.net.ntp.TimeInfo
Test: org.apache.commons.net.ntp.NtpV3Impl.ul(byte)
Test: org.apache.commons.net.ntp.NtpV3Impl.setOriginateTimeStamp(TimeStamp)
Test: org.apache.commons.net.ntp.NtpV3Impl.getVersion()
Test: org.apache.commons.net.ntp.NtpV3Impl.setDatagramPacket(DatagramPacket)
Test: org.apache.commons.net.ntp.TimeInfo.getMessage()
Test: org.apache.commons.net.DatagramSocketClient.DatagramSocketClient()
Test: examples.ntp.SimpleNTPServer.SimpleNTPServer(int)
Test: org.apache.commons.net.ntp.NtpUtils.getModeName(int)
Test: org.apache.commons.net.ntp.TimeStamp.getNtpTime(long)
Test: org.apache.commons.net.ntp.NTPUDPClient.getTime(InetAddress,int)
Test: org.apache.commons.net.ntp.NtpV3Impl.setReceiveTimeStamp(TimeStamp)
Test: examples.ntp.SimpleNTPServer.getPort()
Test: org.apache.commons.net.ntp.NTPUDPClient
Test: org.apache.commons.net.ntp.NTPUDPClient._version : int
Test: org.apache.commons.net.ntp.NtpV3Impl.getTimestamp(int)
Test: org.apache.commons.net.ntp.TimeStamp.getTime()
Test: org.apache.commons.net.DatagramSocketClient.charset : Charset
Comp: examples.ntp.SimpleNTPServer.stop()
Comp: org.apache.commons.net.ntp.NtpV3Packet.getReceiveTimeStamp()
Comp: org.apache.commons.net.DefaultDatagramSocketFactory.DefaultDatagramSocketFactory()
Comp: org.apache.commons.net.ntp.NtpV3Impl.setDatagramPacket(DatagramPacket)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setRootDelay(int)
Comp: org.apache.commons.net.DatagramSocketFactory
Comp: org.apache.commons.net.DatagramSocketClient._socket_ : DatagramSocket
Comp: org.apache.commons.net.ntp.NtpV3Packet.getMode()
Comp: org.apache.commons.net.DatagramSocketClient
Comp: org.apache.commons.net.ntp.TimeStamp
Comp: org.apache.commons.net.ntp.NtpV3Packet.setReferenceId(int)
Comp: org.apache.commons.net.ntp.TimeInfo
Comp: org.apache.commons.net.ntp.TimeStamp.TimeStamp(long)
Comp: org.apache.commons.net.ntp.TimeInfo.TimeInfo(NtpV3Packet,long,List)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setRootDispersion(int)
Comp: examples.ntp.SimpleNTPServer.start()
Comp: org.apache.commons.net.ntp.NtpV3Impl.ul(byte)
Comp: examples.ntp.SimpleNTPServer.getPort()
Comp: examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setMode(int)
Comp: org.apache.commons.net.ntp.NtpV3Packet.getDatagramPacket()
Comp: org.apache.commons.net.ntp.NtpV3Impl.getReceiveTimeStamp()
Comp: org.apache.commons.net.ntp.NtpV3Impl.setOriginateTimeStamp(TimeStamp)
Comp: org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int)
Comp: examples.ntp.SimpleNTPServer
Comp: org.apache.commons.net.ntp.NtpV3Impl.setStratum(int)
Comp: org.apache.commons.net.DefaultDatagramSocketFactory
Comp: org.apache.commons.net.ntp.NtpV3Packet.setMode(int)
Comp: org.apache.commons.net.ntp.NtpV3Impl.getVersion()
Comp: org.apache.commons.net.ntp.NtpV3Impl
Comp: org.apache.commons.net.ntp.TimeInfo.getReturnTime()
Comp: org.apache.commons.net.ntp.NtpV3Impl.setReceiveTimeStamp(TimeStamp)
Comp: org.apache.commons.net.ntp.TimeStamp.ntpTime : long
Comp: examples.ntp.SimpleNTPServer.isRunning()
Comp: org.apache.commons.net.ntp.NtpV3Impl.setTransmitTime(TimeStamp)
Comp: org.apache.commons.net.ntp.NtpV3Packet.setVersion(int)
Comp: org.apache.commons.net.ntp.NTPUDPClient.open()
Comp: org.apache.commons.net.ntp.NtpV3Impl.getReferenceId()
Comp: org.apache.commons.net.ntp.TimeInfo.computeDetails()
Comp: org.apache.commons.net.ntp.NtpV3Packet.setTransmitTime(TimeStamp)
Comp: examples.ntp.SimpleNTPServer.connect()
Comp: org.apache.commons.net.ntp.TimeStamp.getCurrentTime()
Comp: examples.ntp.SimpleNTPServer.started : boolean
Comp: org.apache.commons.net.ntp.NtpV3Impl.getLong(int)
Comp: org.apache.commons.net.ntp.NtpV3Impl.getDatagramPacket()
Comp: org.apache.commons.net.ntp.NtpV3Packet.setDatagramPacket(DatagramPacket)
Comp: org.apache.commons.net.DatagramSocketClient.__DEFAULT_SOCKET_FACTORY : DatagramSocketFactory
Comp: org.apache.commons.net.DatagramSocketClient.isOpen()
Comp: org.apache.commons.net.ntp.NtpV3Impl.setPoll(int)
Comp: org.apache.commons.net.ntp.TimeInfo._comments : List
Comp: org.apache.commons.net.DatagramSocketClient.open()
Comp: org.apache.commons.net.DatagramSocketFactory.createDatagramSocket()
Comp: byte[]
Comp: org.apache.commons.net.ntp.NtpV3Packet.setPoll(int)
Comp: org.apache.commons.net.DatagramSocketClient._timeout_ : int
Comp: org.apache.commons.net.ntp.TimeInfo._delay : Long
Comp: org.apache.commons.net.ntp.TimeStamp.compareTo(TimeStamp)
Comp: org.apache.commons.net.ntp.NtpV3Packet
Comp: examples.ntp.SimpleNTPServer.run()
Comp: org.apache.commons.net.DatagramSocketClient._isOpen_ : boolean
Comp: org.apache.commons.net.ntp.TimeStamp.getNtpTime(long)
Comp: org.apache.commons.net.ntp.TimeInfo.TimeInfo(NtpV3Packet,long,boolean)
Comp: org.apache.commons.net.DatagramSocketClient.close()
Comp: org.apache.commons.net.ntp.NtpV3Impl.getStratum()
Comp: org.apache.commons.net.ntp.NtpV3Packet.setOriginateTimeStamp(TimeStamp)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setReferenceTime(TimeStamp)
Comp: org.apache.commons.net.DatagramSocketClient.setDefaultTimeout(int)
Comp: examples.ntp.SimpleNTPServer.socket : DatagramSocket
Comp: examples.ntp.SimpleNTPServer.running : boolean
Comp: org.apache.commons.net.ntp.NtpV3Impl.setPrecision(int)
Comp: examples.ntp.SimpleNTPServer.SimpleNTPServer()
Comp: org.apache.commons.net.ntp.TimeInfo._detailsComputed : boolean
Comp: org.apache.commons.net.ntp.TimeInfo.TimeInfo(NtpV3Packet,long,List,boolean)
Comp: org.apache.commons.net.ntp.NtpV3Impl.getReferenceTimeStamp()
Comp: org.apache.commons.net.ntp.TimeStamp.ntpValue()
Comp: org.apache.commons.net.ntp.TimeInfo._returnTime : long
Comp: org.apache.commons.net.ntp.NtpUtils.getModeName(int)
Comp: org.apache.commons.net.ntp.NTPUDPClient._version : int
Comp: org.apache.commons.net.ntp.TimeInfo.getMessage()
Comp: org.apache.commons.net.ntp.NtpV3Impl.dp : DatagramPacket
Comp: org.apache.commons.net.ntp.NtpV3Impl.buf : byte[]
Comp: org.apache.commons.net.ntp.NTPUDPClient.getTime(InetAddress,int)
Comp: examples.ntp.SimpleNTPServer.SimpleNTPServer(int)
Comp: org.apache.commons.net.ntp.NtpV3Impl.getTransmitTimeStamp()
Comp: org.apache.commons.net.ntp.NtpV3Packet.getReferenceId()
Comp: examples.ntp.SimpleNTPServer.isStarted()
Comp: org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setReferenceId(int)
Comp: org.apache.commons.net.ntp.NtpV3Packet.setReferenceTime(TimeStamp)
Comp: org.apache.commons.net.ntp.NtpV3Packet.getOriginateTimeStamp()
Comp: org.apache.commons.net.ntp.TimeStamp.TimeStamp(Date)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setTimestamp(int,TimeStamp)
Comp: org.apache.commons.net.DatagramSocketClient._socketFactory_ : DatagramSocketFactory
Comp: org.apache.commons.net.ntp.NtpV3Packet.getTransmitTimeStamp()
Comp: org.apache.commons.net.ntp.TimeInfo._offset : Long
Comp: org.apache.commons.net.ntp.NTPUDPClient
Comp: org.apache.commons.net.ntp.NtpV3Impl.setInt(int,int)
Comp: org.apache.commons.net.ntp.NtpV3Impl.NtpV3Impl()
Comp: org.apache.commons.net.ntp.NtpV3Impl.ui(byte)
Comp: org.apache.commons.net.ntp.NtpV3Impl.getOriginateTimeStamp()
Comp: org.apache.commons.net.ntp.TimeStamp.toNtpTime(long)
Comp: org.apache.commons.net.ntp.NTPUDPClient.isOpen()
Comp: org.apache.commons.net.ntp.NTPUDPClient.NTPUDPClient()
Comp: org.apache.commons.net.DatagramSocketClient.DatagramSocketClient()
Comp: org.apache.commons.net.ntp.NtpV3Impl.getTimestamp(int)
Comp: org.apache.commons.net.ntp.NtpV3Packet.setStratum(int)
Comp: org.apache.commons.net.ntp.NtpV3Impl.getInt(int)
Comp: examples.ntp.SimpleNTPServer.port : int
Comp: org.apache.commons.net.ntp.NTPUDPClient._socket_ : DatagramSocket
Comp: org.apache.commons.net.ntp.TimeStamp.getTime(long)
Comp: org.apache.commons.net.ntp.TimeInfo._message : NtpV3Packet
Comp: org.apache.commons.net.ntp.TimeStamp.getTime()
Comp: org.apache.commons.net.ntp.NtpV3Impl.getMode()
Comp: org.apache.commons.net.ntp.NtpV3Packet.setReceiveTimeStamp(TimeStamp)
Comp: org.apache.commons.net.ntp.NtpUtils.getReferenceClock(NtpV3Packet)
Comp: org.apache.commons.net.ntp.NtpV3Impl.setVersion(int)
Comp: org.apache.commons.net.DatagramSocketClient.charset : Charset
Comp: org.apache.commons.net.ntp.NtpUtils
Comp: org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int)


[OUTPUT] Initial |S| = 269
[OUTPUT] Analysing Commits ... 
[DEBUG] === Inspecting commit: abd67115 : Fix dates and versions ===
[DEBUG] 
[DEBUG] === Inspecting commit: d0d31602 : Drop unnecessary README ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6f978339 : RATs - forgot AL header ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7b8b5e5a : Fix up site URL ===
[DEBUG] 
[DEBUG] === Inspecting commit: 99281093 : Recent changes ===
[DEBUG] 
[DEBUG] === Inspecting commit: 15d7caf2 : Latest versions ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8447d34d : Doc ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9bb6841f : Checkstyle: Line length ===
[DEBUG] 
[DEBUG] === Inspecting commit: ab2fd4f9 : Checkstyle: Line length ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] Update: METHOD: examples.Main.main(String[]) : examples.Main.main(String[]) : (34, 100) --> (34, 104)
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (99, 292) --> (99, 297)
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPImportMbox.main(String[]) : examples.mail.IMAPImportMbox.main(String[]) : (54, 146) --> (54, 147)
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSTrustManager.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NetwareFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS400FTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/AuthenticatingIMAPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/ThreadContainer.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Threader.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/ExtendedPOP3Client.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/AuthenticatingSMTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/KeyManagerUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SSLContextUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/TrustManagerUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e8d76ef9 : NET-581 SimpleSMTPHeader fails to supply the required Date: header ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SimpleSMTPHeader.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.SimpleSMTPHeader.addHeaderField(String,String) : org.apache.commons.net.smtp.SimpleSMTPHeader.addHeaderField(String,String) : (82, 100) --> (87, 108)
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.SimpleSMTPHeader.toString() : org.apache.commons.net.smtp.SimpleSMTPHeader.toString() : (120, 156) --> (128, 170)
[DEBUG] Insert: FIELD: org.apache.commons.net.smtp.SimpleSMTPHeader.hasHeaderDate : boolean : org.apache.commons.net.smtp.SimpleSMTPHeader : (58, 58)
[DEBUG] 
[DEBUG] === Inspecting commit: 77a30c21 : SImplify ===
[DEBUG] 
[DEBUG] === Inspecting commit: a19fae72 : NET-582 SimpleSMTPHeader does not allow for missing To: field ===
[DEBUG] 
[DEBUG] === Inspecting commit: 83b95072 : NET-582 SimpleSMTPHeader does not allow for missing To: field ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SimpleSMTPHeader.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.SimpleSMTPHeader.toString() : org.apache.commons.net.smtp.SimpleSMTPHeader.toString() : (112, 150) --> (120, 156)
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.SimpleSMTPHeader.SimpleSMTPHeader(String,String,String) : org.apache.commons.net.smtp.SimpleSMTPHeader.SimpleSMTPHeader(String,String,String) : (54, 72) --> (56, 80)
[DEBUG] 
[DEBUG] === Inspecting commit: 642158f7 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SimpleSMTPHeader.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0177f900 : NET-580 SMTPClient.sendSimpleMessage() silently ignores failed recipients Update Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 05111dae : RedundantThrows no longer supported ===
[DEBUG] 
[DEBUG] === Inspecting commit: 5e3fd2b3 : Empty Catch Blocks ===
[DEBUG] --- Modify File: src/main/java/examples/unix/rexec.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/rlogin.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/rshell.java ---
[DEBUG] --- Modify File: src/main/java/examples/util/IOUtil.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/SocketClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SSLSocketUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: cf4d2069 : Latest checkstyle tool ===
[DEBUG] 
[DEBUG] === Inspecting commit: ecf65484 : Moved @author entries to pom ===
[DEBUG] --- Modify File: src/main/java/examples/cidr/SubnetUtilsExample.java ---
[DEBUG] --- Modify File: src/main/java/examples/nntp/ExtendedNNTPOps.java ---
[DEBUG] --- Modify File: src/main/java/examples/nntp/NNTPUtils.java ---
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFileEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/CompositeFileEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/EnterpriseUnixFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NTFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NetwareFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS2FTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/VMSFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Article.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPCommand.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/ThreadContainer.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Threader.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/EchoOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/InvalidTelnetOptionException.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/SimpleOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/SuppressGAOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/Telnet.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetNotificationHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TerminalTypeOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/WindowSizeOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/Base64.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 16b656fc : Missing @return ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DefaultDatagramSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: bb74e81c : These are now fixed, so make them errors ===
[DEBUG] 
[DEBUG] === Inspecting commit: 41401894 : Redundant spaces ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/chargen/CharGenUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/daytime/DaytimeUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/echo/EchoUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/EnterpriseUnixFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPAckPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPDataPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/time/TimeUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d4267c5a : Redundant spaces ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 65302de2 : NET-579 SSL/TLS SocketClients do not verify the hostname against the certificate ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/SocketClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.disconnect() : org.apache.commons.net.SocketClient.disconnect() : (301, 319) --> (311, 330)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.connect(InetAddress,int,InetAddress,int) : org.apache.commons.net.SocketClient.connect(InetAddress,int,InetAddress,int) : (208, 237) --> (214, 244)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.connect(String,int,InetAddress,int) : org.apache.commons.net.SocketClient.connect(String,int,InetAddress,int) : (240, 261) --> (247, 269)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.connect(InetAddress,int) : org.apache.commons.net.SocketClient.connect(InetAddress,int) : (160, 185) --> (164, 190)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.connect(InetAddress) : org.apache.commons.net.SocketClient.connect(InetAddress) : (264, 279) --> (272, 288)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.SocketClient() : org.apache.commons.net.SocketClient.SocketClient() : (116, 132) --> (119, 136)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.connect(String,int) : org.apache.commons.net.SocketClient.connect(String,int) : (187, 205) --> (192, 211)
[DEBUG] Update: METHOD: org.apache.commons.net.SocketClient.connect(String) : org.apache.commons.net.SocketClient.connect(String) : (282, 298) --> (291, 308)
[DEBUG] Insert: FIELD: org.apache.commons.net.SocketClient._hostname_ : String : org.apache.commons.net.SocketClient : (83, 84)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPSClient.sslNegotiation() : org.apache.commons.net.ftp.FTPSClient.sslNegotiation() : (241, 277) --> (254, 301)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPSClient.setEndpointCheckingEnabled(boolean) : org.apache.commons.net.ftp.FTPSClient : (720, 732)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPSClient.setHostnameVerifier(HostnameVerifier) : org.apache.commons.net.ftp.FTPSClient : (695, 704)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPSClient.isEndpointCheckingEnabled() : org.apache.commons.net.ftp.FTPSClient : (706, 718)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPSClient.getHostnameVerifier() : org.apache.commons.net.ftp.FTPSClient : (684, 693)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.FTPSClient.tlsEndpointChecking : boolean : org.apache.commons.net.ftp.FTPSClient : (119, 120)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.FTPSClient.hostnameVerifier : HostnameVerifier : org.apache.commons.net.ftp.FTPSClient : (116, 117)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPSClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.imap.IMAPSClient.performSSLNegotiation() : org.apache.commons.net.imap.IMAPSClient.performSSLNegotiation() : (178, 213) --> (191, 234)
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAPSClient.setEndpointCheckingEnabled(boolean) : org.apache.commons.net.imap.IMAPSClient : (376, 386)
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAPSClient.setHostnameVerifier(HostnameVerifier) : org.apache.commons.net.imap.IMAPSClient : (354, 362)
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAPSClient.isEndpointCheckingEnabled() : org.apache.commons.net.imap.IMAPSClient : (364, 374)
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAPSClient.getHostnameVerifier() : org.apache.commons.net.imap.IMAPSClient : (344, 352)
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAPSClient.tlsEndpointChecking : boolean : org.apache.commons.net.imap.IMAPSClient : (86, 87)
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAPSClient.hostnameVerifier : HostnameVerifier : org.apache.commons.net.imap.IMAPSClient : (83, 84)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3SClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.pop3.POP3SClient.performSSLNegotiation() : org.apache.commons.net.pop3.POP3SClient.performSSLNegotiation() : (187, 218) --> (200, 239)
[DEBUG] Insert: METHOD: org.apache.commons.net.pop3.POP3SClient.setEndpointCheckingEnabled(boolean) : org.apache.commons.net.pop3.POP3SClient : (381, 391)
[DEBUG] Insert: METHOD: org.apache.commons.net.pop3.POP3SClient.setHostnameVerifier(HostnameVerifier) : org.apache.commons.net.pop3.POP3SClient : (359, 367)
[DEBUG] Insert: METHOD: org.apache.commons.net.pop3.POP3SClient.isEndpointCheckingEnabled() : org.apache.commons.net.pop3.POP3SClient : (369, 379)
[DEBUG] Insert: METHOD: org.apache.commons.net.pop3.POP3SClient.getHostnameVerifier() : org.apache.commons.net.pop3.POP3SClient : (349, 357)
[DEBUG] Insert: FIELD: org.apache.commons.net.pop3.POP3SClient.tlsEndpointChecking : boolean : org.apache.commons.net.pop3.POP3SClient : (90, 91)
[DEBUG] Insert: FIELD: org.apache.commons.net.pop3.POP3SClient.hostnameVerifier : HostnameVerifier : org.apache.commons.net.pop3.POP3SClient : (87, 88)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPSClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.SMTPSClient.performSSLNegotiation() : org.apache.commons.net.smtp.SMTPSClient.performSSLNegotiation() : (176, 210) --> (189, 229)
[DEBUG] Insert: METHOD: org.apache.commons.net.smtp.SMTPSClient.setEndpointCheckingEnabled(boolean) : org.apache.commons.net.smtp.SMTPSClient : (370, 380)
[DEBUG] Insert: METHOD: org.apache.commons.net.smtp.SMTPSClient.setHostnameVerifier(HostnameVerifier) : org.apache.commons.net.smtp.SMTPSClient : (348, 356)
[DEBUG] Insert: METHOD: org.apache.commons.net.smtp.SMTPSClient.isEndpointCheckingEnabled() : org.apache.commons.net.smtp.SMTPSClient : (358, 368)
[DEBUG] Insert: METHOD: org.apache.commons.net.smtp.SMTPSClient.getHostnameVerifier() : org.apache.commons.net.smtp.SMTPSClient : (338, 346)
[DEBUG] Insert: FIELD: org.apache.commons.net.smtp.SMTPSClient.tlsEndpointChecking : boolean : org.apache.commons.net.smtp.SMTPSClient : (81, 82)
[DEBUG] Insert: FIELD: org.apache.commons.net.smtp.SMTPSClient.hostnameVerifier : HostnameVerifier : org.apache.commons.net.smtp.SMTPSClient : (78, 79)
[DEBUG] --- New File: src/main/java/org/apache/commons/net/util/SSLSocketUtils.java ---
[DEBUG] Insert: CLASS: org.apache.commons.net.util.SSLSocketUtils : org.apache.commons.net.util.SSLSocketUtils : (26, 63)
[DEBUG] 
[DEBUG] === Inspecting commit: 4ca6aa3f : Checkstyle fixes ===
[DEBUG] 
[DEBUG] === Inspecting commit: 06adc0bd : Always use blocks ===
[DEBUG] 
[DEBUG] === Inspecting commit: f1bb5ed0 : Qualifier order ===
[DEBUG] 
[DEBUG] === Inspecting commit: 95249151 : Qualifier order ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPPacket.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 6512d665 : Qualifier order ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Impl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeStamp.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 452081a3 : Qualifier order ===
[DEBUG] --- Modify File: src/main/java/examples/telnet/WeatherTelnet.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c9a1c7d0 : Move assembly to standard location ===
[DEBUG] 
[DEBUG] === Inspecting commit: 31044ba5 : NET-558 - getModificationTime(<filename>) returns complete received line including response code and EOL ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.getModificationTime(String) : org.apache.commons.net.ftp.FTPClient.getModificationTime(String) : (3517, 3533) --> (3517, 3533)
[DEBUG] 
[DEBUG] === Inspecting commit: f5304f2e : CP37 => CP38 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4450add7 : NET-576 Allow FTPClient to use SYST response if system type is not specified in configuration ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.__createParser(String) : org.apache.commons.net.ftp.FTPClient.__createParser(String) : (3337, 3379) --> (3337, 3383)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClientConfig.FTPClientConfig(String,String,String,String,String,String,boolean,boolean) : org.apache.commons.net.ftp.FTPClientConfig : (283, 320)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClientConfig.FTPClientConfig(String,FTPClientConfig) : org.apache.commons.net.ftp.FTPClientConfig : (323, 332)
[DEBUG] 
[DEBUG] === Inspecting commit: 55758ab0 : NET-575 FTPClientExample should support setting the date format ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (87, 515) --> (89, 531)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (54, 85) --> (54, 89)
[DEBUG] 
[DEBUG] === Inspecting commit: 53468c68 : Order ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (54, 85) --> (54, 85)
[DEBUG] 
[DEBUG] === Inspecting commit: 12f145e4 : Add test for NET-573 ===
[DEBUG] 
[DEBUG] === Inspecting commit: ff519f3d : Add hint ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (54, 84) --> (54, 88)
[DEBUG] 
[DEBUG] === Inspecting commit: fa0e3dd5 : No need for fields to be mutable or package-visible ===
[DEBUG] 
[DEBUG] === Inspecting commit: f6d1a4d9 : NET-538 - FTPHTTPClient should use socket factory to create sockets ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPHTTPClient._openDataConnection_(String,String) : org.apache.commons.net.ftp.FTPHTTPClient._openDataConnection_(String,String) : (79, 127) --> (79, 127)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPHTTPClient.connect(String,int) : org.apache.commons.net.ftp.FTPHTTPClient.connect(String,int) : (129, 145) --> (129, 145)
[DEBUG] 
[DEBUG] === Inspecting commit: 5df3f18b : NET-570 - empty description tag causes RDF parser fail ===
[DEBUG] 
[DEBUG] === Inspecting commit: aa36b3b5 : Each Version must be in its own release section ===
[DEBUG] 
[DEBUG] === Inspecting commit: e17d89b3 : CGI must be svn:executable * ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3c52e534 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d12b5c37 : No longer needed, as excluded in parent pom ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0b32962c : Update to CP37 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 43235dbb : Synch release notes ===
[DEBUG] 
[DEBUG] === Inspecting commit: 768dd780 : Happy New Year ===
[DEBUG] 
[DEBUG] === Inspecting commit: 45113dcf : Tab police ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: a31fe81a : Checkstyle ===
[DEBUG] --- Modify File: src/main/java/examples/ntp/SimpleNTPServer.java ---
[DEBUG] Update: METHOD: examples.ntp.SimpleNTPServer.SimpleNTPServer(int) : examples.ntp.SimpleNTPServer.SimpleNTPServer(int) : (56, 67) --> (56, 69)
[DEBUG] Update: METHOD: examples.ntp.SimpleNTPServer.connect() : examples.ntp.SimpleNTPServer.connect() : (94, 108) --> (96, 112)
[DEBUG] 
[DEBUG] === Inspecting commit: 483a6a52 : Use simpler way of parsing the compiler target ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6eda86da : Use constant for port number Use different ports for tests that might run consecutively ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7de68184 : Looks like there was a corrupt rat in my local repo; deleted it and it all works again now ===
[DEBUG] 
[DEBUG] === Inspecting commit: 16c748d8 : Fix NPE in RAT Only display current version in jira report ===
[DEBUG] 
[DEBUG] === Inspecting commit: ad6853f5 : Remove unnecessary overrides ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8112b379 : Next version is 3.4 ===
[DEBUG] 
[DEBUG] === Inspecting commit: e36f8917 : Should not have been committed ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0d157e15 : AL header ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4df00cef : Document why Clirr errors are OK ===
[DEBUG] 
[DEBUG] === Inspecting commit: 92e5980b : revert r1652867 ===
[DEBUG] --- Modify File: src/main/java/examples/ntp/SimpleNTPServer.java ---
[DEBUG] Update: METHOD: examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long) : examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long) : (152, 194) --> (151, 193)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Impl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Packet.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int) : org.apache.commons.net.ntp.NtpV3Packet : (124, 129)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int) : org.apache.commons.net.ntp.NtpV3Packet : (136, 141)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int) : org.apache.commons.net.ntp.NtpV3Packet : (153, 158)
[DEBUG] --- Delete File: src/main/java/org/apache/commons/net/ntp/NtpV3Packetbis.java ---
[DEBUG] Delete: CLASS: org.apache.commons.net.ntp.NtpV3Packetbis : org.apache.commons.net.ntp.NtpV3Packetbis : (19, 50)
[DEBUG] 
[DEBUG] === Inspecting commit: c0277c63 : NET-525 Added missing set methods on NTP class and interface Restore compatibility ===
[DEBUG] --- Modify File: src/main/java/examples/ntp/SimpleNTPServer.java ---
[DEBUG] Update: METHOD: examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long) : examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long) : (151, 193) --> (152, 194)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Impl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Packet.java ---
[DEBUG] Delete: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int) : org.apache.commons.net.ntp.NtpV3Packet : (124, 129)
[DEBUG] Delete: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int) : org.apache.commons.net.ntp.NtpV3Packet : (136, 141)
[DEBUG] Delete: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int) : org.apache.commons.net.ntp.NtpV3Packet : (153, 158)
[DEBUG] --- New File: src/main/java/org/apache/commons/net/ntp/NtpV3Packetbis.java ---
[DEBUG] Insert: CLASS: org.apache.commons.net.ntp.NtpV3Packetbis : org.apache.commons.net.ntp.NtpV3Packetbis : (19, 50)
[DEBUG] 
[DEBUG] === Inspecting commit: 06341a39 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/examples/nntp/NNTPUtils.java ---
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 7a4e64b0 : Drop examples from CLI invocation of clirr:clirr ===
[DEBUG] 
[DEBUG] === Inspecting commit: e27c3821 : Javadoc @since ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPReply.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Impl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Packet.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeInfo.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e49f1851 : Should be OK with Javadoc 8 now (phew!) ===
[DEBUG] 
[DEBUG] === Inspecting commit: cd2d049f : Javadoc 8 fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPListParseEngine.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPReply.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPSClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/FromNetASCIIInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Impl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Packet.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int) : org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int) : (148, 152) --> (151, 155)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeInfo.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeStamp.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ntp.TimeStamp.decodeNtpHexString(String) : org.apache.commons.net.ntp.TimeStamp.decodeNtpHexString(String) : (238, 261) --> (240, 264)
[DEBUG] Update: METHOD: org.apache.commons.net.ntp.TimeStamp.TimeStamp(String) : org.apache.commons.net.ntp.TimeStamp.TimeStamp(String) : (97, 107) --> (98, 109)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3Command.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3MessageInfo.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/Telnet.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPAckPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPDataPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/time/TimeUDPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 724d534b : Javadoc 8 fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3Client.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3Command.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3MessageInfo.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3Reply.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPConnectionClosedException.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/Telnet.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetNotificationHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetOption.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPAckPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPDataPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPErrorPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPPacketException.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPReadRequestPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPRequestPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPWriteRequestPacket.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/time/TimeTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/time/TimeUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/whois/WhoisClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 00104e73 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DatagramSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/chargen/CharGenUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/daytime/DaytimeUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/echo/EchoUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/ConfigurableFTPFileEntryParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeStamp.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/ExtendedPOP3Client.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5469e099 : Empty/unnecessary <p> tags ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] --- Modify File: src/main/java/examples/ftp/ServerToServerFTP.java ---
[DEBUG] --- Modify File: src/main/java/examples/ftp/TFTPExample.java ---
[DEBUG] --- Modify File: src/main/java/examples/mail/POP3Mail.java ---
[DEBUG] --- Modify File: src/main/java/examples/mail/SMTPMail.java ---
[DEBUG] --- Modify File: src/main/java/examples/nntp/ListNewsgroups.java ---
[DEBUG] --- Modify File: src/main/java/examples/nntp/PostMessage.java ---
[DEBUG] --- Modify File: src/main/java/examples/ntp/TimeClient.java ---
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] --- Modify File: src/main/java/examples/telnet/WeatherTelnet.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/chargen.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/daytime.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/echo.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/finger.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/fwhois.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/rdate.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/rexec.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/rlogin.java ---
[DEBUG] --- Modify File: src/main/java/examples/unix/rshell.java ---
[DEBUG] --- Modify File: src/main/java/examples/util/IOUtil.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DatagramSocketClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DatagramSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DefaultDatagramSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DefaultSocketFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/MalformedServerReplyException.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ProtocolCommandEvent.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ProtocolCommandListener.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ProtocolCommandSupport.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/bsd/RCommandClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/bsd/RExecClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/bsd/RLoginClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/chargen/CharGenTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/chargen/CharGenUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/daytime/DaytimeTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/daytime/DaytimeUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/discard/DiscardTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/discard/DiscardUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/echo/EchoTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/echo/EchoUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/finger/FingerClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPCmd.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPCommand.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPConnectionClosedException.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFileEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPReply.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSCommand.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/ConfigurableFTPFileEntryParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MacOsPeterFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NTFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NetwareFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS2FTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/VMSFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/AuthenticatingIMAPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/CopyStreamAdapter.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/CopyStreamEvent.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/CopyStreamListener.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/DotTerminatedMessageWriter.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/FromNetASCIIInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/FromNetASCIIOutputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/SocketInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/SocketOutputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/ToNetASCIIInputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/ToNetASCIIOutputStream.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 966226bd : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.FTPClientConfig.SYST_UNIX_TRIM_LEADING : String : org.apache.commons.net.ftp.FTPClientConfig.SYST_UNIX_TRIM_LEADING : String : (147, 153) --> (147, 153)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo(int) : org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo(int) : (1634, 1642) --> (1631, 1639)
[DEBUG] 
[DEBUG] === Inspecting commit: 8fadf001 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 50a124bf : NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.FTPClientConfig.SYST_UNIX_TRIM_LEADING : String : org.apache.commons.net.ftp.FTPClientConfig : (147, 153)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createFileEntryParser(String,FTPClientConfig) : org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createFileEntryParser(String,FTPClientConfig) : (99, 174) --> (99, 178)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createOS400FTPEntryParser(FTPClientConfig) : org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createOS400FTPEntryParser(FTPClientConfig) : (257, 277) --> (262, 283)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createNTFTPEntryParser(FTPClientConfig) : org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createNTFTPEntryParser(FTPClientConfig) : (225, 245) --> (229, 250)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig) : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig) : (147, 162) --> (147, 162)
[DEBUG] 
[DEBUG] === Inspecting commit: 1762d632 : Test forced trimming ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3426c6e0 : expected value comes before actual value ===
[DEBUG] 
[DEBUG] === Inspecting commit: f9a8a384 : NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names Add option to parser to not skip leading spaces TODO make this the default but still allow reversion ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig) : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig) : (143, 159) --> (147, 162)
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String : (66, 127) --> (66, 127)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.parseFTPEntry(String) : (176, 311) --> (199, 337)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig,boolean) : org.apache.commons.net.ftp.parser.UnixFTPEntryParser : (164, 182)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.trimLeadingSpaces : boolean : org.apache.commons.net.ftp.parser.UnixFTPEntryParser : (132, 132)
[DEBUG] 
[DEBUG] === Inspecting commit: ff154772 : Merge filename processing into single group Always process link type (no functional change) ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String : (66, 127) --> (66, 129)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.parseFTPEntry(String) : (176, 320) --> (176, 311)
[DEBUG] 
[DEBUG] === Inspecting commit: 85b6e116 : docs ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b43ac62d : No code change; split RE so separators are more clearly identified ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String : org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String : (66, 108) --> (66, 116)
[DEBUG] 
[DEBUG] === Inspecting commit: 28232bf9 : Clarify what setControlEncoding does ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d6dda0c1 : Allow for broken Animal Sniffer 1.13 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 33df0280 : Allow for missing properties file ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] Update: METHOD: examples.Main.main(String[]) : examples.Main.main(String[]) : (30, 90) --> (31, 99)
[DEBUG] 
[DEBUG] === Inspecting commit: 759f29fd : Move properties to correct place ===
[DEBUG] 
[DEBUG] === Inspecting commit: d822758c : Replace Java 6+ method call ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0a3c3449 : Simplify examples/Main - use predefined properties file to define aliases ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] Update: METHOD: examples.Main.main(String[]) : examples.Main.main(String[]) : (33, 108) --> (30, 90)
[DEBUG] Insert: METHOD: examples.Main.fromJar() : examples.Main : (92, 98)
[DEBUG] Delete: METHOD: examples.Main.scanForClasses(int,File,Map<String, String>,boolean) : examples.Main : (110, 121)
[DEBUG] Delete: METHOD: examples.Main.processFileName(String,Map<String, String>,boolean) : examples.Main : (123, 141)
[DEBUG] 
[DEBUG] === Inspecting commit: 03f251f0 : Fix up Maven warning - cannot have two copies of build helper in main build ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4632dbae : Automatically generate the correct Animal Sniffer signature name ===
[DEBUG] 
[DEBUG] === Inspecting commit: bfc2d81a : Trial implementation of animal-sniffer ===
[DEBUG] 
[DEBUG] === Inspecting commit: b158a367 : Update to latest versions of plugins and dependencies ===
[DEBUG] 
[DEBUG] === Inspecting commit: dd596752 : Revert unintentional commit ===
[DEBUG] 
[DEBUG] === Inspecting commit: 51352231 : Document ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9fb2ca62 : NET-552 SocketTimeoutException connecting a FTP server via an HTTP Proxy ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTP._connectAction_() : org.apache.commons.net.ftp.FTP._connectAction_() : (373, 408) --> (374, 382)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTP._connectAction_(Reader) : org.apache.commons.net.ftp.FTP : (385, 418)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient._connectAction_() : org.apache.commons.net.ftp.FTPClient._connectAction_() : (939, 963) --> (940, 944)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClient._connectAction_(Reader) : org.apache.commons.net.ftp.FTPClient : (947, 971)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPHTTPClient.tunnelHandshake(String,int,InputStream,OutputStream) : org.apache.commons.net.ftp.FTPHTTPClient.tunnelHandshake(String,int,InputStream,OutputStream) : (145, 196) --> (147, 199)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPHTTPClient.connect(String,int) : org.apache.commons.net.ftp.FTPHTTPClient.connect(String,int) : (128, 143) --> (129, 145)
[DEBUG] 
[DEBUG] === Inspecting commit: 021922ee : Document what looks like code duplication ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPSClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3SClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPSClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5e34e05f : Fails on Continuum ===
[DEBUG] 
[DEBUG] === Inspecting commit: 896ccef9 : Allow use of exec:java to launch examples from classpath ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1bde5cd5 : Improved error reporting ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (85, 510) --> (86, 514)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (53, 83) --> (53, 85)
[DEBUG] 
[DEBUG] === Inspecting commit: 7caaa91a : Enable alias mechanism to work from the classpath Better output when class not found ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] Update: METHOD: examples.Main.main(String[]) : examples.Main.main(String[]) : (32, 105) --> (33, 108)
[DEBUG] Insert: METHOD: examples.Main.scanForClasses(int,File,Map<String, String>,boolean) : examples.Main : (110, 121)
[DEBUG] Insert: METHOD: examples.Main.processFileName(String,Map<String, String>,boolean) : examples.Main : (123, 141)
[DEBUG] 
[DEBUG] === Inspecting commit: e0aba3e6 : Implement retry for temporary failures ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (93, 253) --> (99, 292)
[DEBUG] Update: FIELD: examples.mail.IMAPExportMbox.MboxListener.lastSeq : long : examples.mail.IMAPExportMbox.MboxListener.lastSeq : long : (266, 266) --> (309, 310)
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : (287, 371) --> (334, 418)
[DEBUG] Insert: METHOD: examples.mail.IMAPExportMbox.matches(String,Pattern,int) : examples.mail.IMAPExportMbox : (299, 305)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.PATEXISTS : Pattern : examples.mail.IMAPExportMbox : (91, 91)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.PATTEMPFAIL : Pattern : examples.mail.IMAPExportMbox : (94, 94)
[DEBUG] 
[DEBUG] === Inspecting commit: 0e2f4d6f : Docs ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (90, 249) --> (93, 253)
[DEBUG] 
[DEBUG] === Inspecting commit: 5337e4e7 : Print the missing ids at the end ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (87, 234) --> (90, 249)
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : (267, 346) --> (283, 367)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.missingIds : List<String> : examples.mail.IMAPExportMbox.MboxListener : (261, 261)
[DEBUG] 
[DEBUG] === Inspecting commit: 20a4cc78 : Check sequence of responses to detect missed messages ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (83, 229) --> (87, 234)
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : (259, 327) --> (267, 346)
[DEBUG] Insert: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(BufferedWriter,String,boolean,boolean,boolean) : examples.mail.IMAPExportMbox.MboxListener : (258, 265)
[DEBUG] Delete: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(BufferedWriter,String,boolean,boolean) : examples.mail.IMAPExportMbox.MboxListener : (251, 257)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.lastSeq : long : examples.mail.IMAPExportMbox.MboxListener : (246, 246)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.checkSequence : boolean : examples.mail.IMAPExportMbox.MboxListener : (256, 256)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.PATID_DATE_GROUP : int : examples.mail.IMAPExportMbox : (79, 79)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.PATSEQ_SEQUENCE_GROUP : int : examples.mail.IMAPExportMbox : (82, 82)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.PATSEQ : Pattern : examples.mail.IMAPExportMbox : (81, 81)
[DEBUG] 
[DEBUG] === Inspecting commit: d225362c : Better handling of multiple item names ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (83, 210) --> (83, 229)
[DEBUG] 
[DEBUG] === Inspecting commit: e8605ab7 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 90124986 : Better handling of protocol commands ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (81, 212) --> (83, 210)
[DEBUG] 
[DEBUG] === Inspecting commit: 231850ff : Allow overwrite of mbox file ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (81, 195) --> (81, 212)
[DEBUG] Update: FIELD: examples.mail.IMAPExportMbox.MboxListener.bw : BufferedWriter : examples.mail.IMAPExportMbox.MboxListener.bw : BufferedWriter : (204, 204) --> (227, 227)
[DEBUG] Insert: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(BufferedWriter,String,boolean,boolean) : examples.mail.IMAPExportMbox.MboxListener : (234, 240)
[DEBUG] Delete: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean,boolean) : examples.mail.IMAPExportMbox.MboxListener : (217, 228)
[DEBUG] 
[DEBUG] === Inspecting commit: b01fe9bf : Add a bit more debug when requests fail ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (81, 188) --> (81, 195)
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : (220, 284) --> (230, 298)
[DEBUG] Insert: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean,boolean) : examples.mail.IMAPExportMbox.MboxListener : (217, 228)
[DEBUG] Delete: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean) : examples.mail.IMAPExportMbox.MboxListener : (208, 218)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.lastFetched : String : examples.mail.IMAPExportMbox.MboxListener : (206, 206)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.printMarker : boolean : examples.mail.IMAPExportMbox.MboxListener : (215, 215)
[DEBUG] 
[DEBUG] === Inspecting commit: 330a6717 : Better handling of invalid entries; Javadoc ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (85, 514) --> (85, 510)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.toFormattedString(String) : org.apache.commons.net.ftp.FTPFile.toFormattedString(String) : (434, 490) --> (444, 503)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.hasPermission(int,int) : org.apache.commons.net.ftp.FTPFile.hasPermission(int,int) : (392, 406) --> (393, 412)
[DEBUG] 
[DEBUG] === Inspecting commit: 375a63b1 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c0f6da1e : Mistakenly committed ===
[DEBUG] --- Delete File: src/main/java/examples/telnet/TelnetClientScript.java ---
[DEBUG] Delete: CLASS: examples.telnet.TelnetClientScript : examples.telnet.TelnetClientScript : (10, 75)
[DEBUG] 
[DEBUG] === Inspecting commit: c2be3466 : NET-528 FTPListParseEngine does not provide access to raw responses N.B. TelnetClientScript did not belong in this commit; removed in r1644803 ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (83, 493) --> (85, 514)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (53, 81) --> (53, 85)
[DEBUG] --- New File: src/main/java/examples/telnet/TelnetClientScript.java ---
[DEBUG] Insert: CLASS: examples.telnet.TelnetClientScript : examples.telnet.TelnetClientScript : (10, 75)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPFileEntryParser,String) : org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPFileEntryParser,String) : (3344, 3379) --> (3344, 3379)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.initiateMListParsing(String) : org.apache.commons.net.ftp.FTPClient.initiateMListParsing(String) : (3381, 3405) --> (3381, 3405)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClientConfig.setUnparseableEntries(boolean) : org.apache.commons.net.ftp.FTPClientConfig : (587, 594)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClientConfig.getUnparseableEntries() : org.apache.commons.net.ftp.FTPClientConfig : (596, 602)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.FTPClientConfig.saveUnparseableEntries : boolean : org.apache.commons.net.ftp.FTPClientConfig : (220, 220)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.toFormattedString(String) : org.apache.commons.net.ftp.FTPFile.toFormattedString(String) : (401, 453) --> (434, 490)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.FTPFile() : org.apache.commons.net.ftp.FTPFile.FTPFile() : (70, 84) --> (71, 84)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPFile.FTPFile(String) : org.apache.commons.net.ftp.FTPFile : (86, 105)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPFile.isValid() : org.apache.commons.net.ftp.FTPFile : (175, 186)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPListParseEngine.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPListParseEngine.getFiles(FTPFileFilter) : org.apache.commons.net.ftp.FTPListParseEngine.getFiles(FTPFileFilter) : (227, 259) --> (248, 283)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPListParseEngine.getNext(int) : org.apache.commons.net.ftp.FTPListParseEngine.getNext(int) : (138, 172) --> (153, 190)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPListParseEngine.FTPListParseEngine(FTPFileEntryParser) : org.apache.commons.net.ftp.FTPListParseEngine.FTPListParseEngine(FTPFileEntryParser) : (84, 86) --> (86, 88)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPListParseEngine.getPrevious(int) : org.apache.commons.net.ftp.FTPListParseEngine.getPrevious(int) : (174, 210) --> (192, 231)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPListParseEngine.FTPListParseEngine(FTPFileEntryParser,FTPClientConfig) : org.apache.commons.net.ftp.FTPListParseEngine : (90, 101)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.FTPListParseEngine.saveUnparseableEntries : boolean : org.apache.commons.net.ftp.FTPListParseEngine : (84, 84)
[DEBUG] 
[DEBUG] === Inspecting commit: 32f3b815 : Layout ===
[DEBUG] 
[DEBUG] === Inspecting commit: bc21e8bd : Test precision unit tests ===
[DEBUG] 
[DEBUG] === Inspecting commit: 306f43c2 : Unnecessary linewrap ===
[DEBUG] 
[DEBUG] === Inspecting commit: 50fe5b9d : Simplify by using common test method ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0c0d1df4 : Need to check all significant units are set ... ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4b325fe9 : Oops - also need to check previous entry ===
[DEBUG] 
[DEBUG] === Inspecting commit: cb5b5c3d : Shared method for checking precision ===
[DEBUG] 
[DEBUG] === Inspecting commit: 59f559ad : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date Only clear one field as doing re-enables the 'set' status for all others ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(int,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(int,Calendar) : (126, 139) --> (127, 140)
[DEBUG] 
[DEBUG] === Inspecting commit: b262d06a : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date More efficient implementation - only parse format string when it is set up Ensure formats always set via private setter method Clear all insignificant fields below the least significant parsed field ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.configure(FTPClientConfig) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.configure(FTPClientConfig) : (262, 317) --> (339, 388)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.FTPTimestampParserImpl() : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.FTPTimestampParserImpl() : (51, 57) --> (141, 147)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar) : (81, 156) --> (171, 246)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setRecentDateFormat(String,DateFormatSymbols) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (289, 305)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setDefaultDateFormat(String,DateFormatSymbols) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (260, 276)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.getEntry(SimpleDateFormat) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (82, 107)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.indexOf(int) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (112, 120)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(int,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (126, 139)
[DEBUG] Delete: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(SimpleDateFormat,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (158, 185)
[DEBUG] Delete: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setDefaultDateFormat(String) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (199, 207)
[DEBUG] Delete: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setRecentDateFormat(String) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (220, 228)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.CALENDAR_UNITS : int[] : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (68, 75)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.defaultDateSmallestUnitIndex : int : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (47, 47)
[DEBUG] Insert: FIELD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.recentDateSmallestUnitIndex : int : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (52, 52)
[DEBUG] 
[DEBUG] === Inspecting commit: 19783e58 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date +set Calendar to indicate which parts are significant remaining parsers TODO: improve tests - ensure all more significant fields are set ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar) : (81, 154) --> (81, 156)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(SimpleDateFormat,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl : (158, 185)
[DEBUG] 
[DEBUG] === Inspecting commit: be045051 : Check for parse error ===
[DEBUG] 
[DEBUG] === Inspecting commit: a9a79104 : Check for parse error ===
[DEBUG] 
[DEBUG] === Inspecting commit: fb85a39f : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date +set Calendar to indicate which parts are significant in Enterprise Parser ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/EnterpriseUnixFTPEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser.parseFTPEntry(String) : (77, 161) --> (77, 166)
[DEBUG] 
[DEBUG] === Inspecting commit: 76fa83ce : More tests ===
[DEBUG] 
[DEBUG] === Inspecting commit: c422412d : More parsing tests and fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String) : (96, 177) --> (97, 182)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String) : org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String) : (179, 209) --> (184, 216)
[DEBUG] 
[DEBUG] === Inspecting commit: a4a8f826 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date +set Calendar to indicate which parts are significant in MLSxEntryParser ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String) : org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String) : (179, 202) --> (179, 209)
[DEBUG] 
[DEBUG] === Inspecting commit: bfac1aec : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e2c97990 : Update to use mdtmFile ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (88, 500) --> (83, 493)
[DEBUG] Delete: METHOD: examples.ftp.FTPClientExample.parseGMTdate(String) : examples.ftp.FTPClientExample : (522, 544)
[DEBUG] 
[DEBUG] === Inspecting commit: 809652a3 : NET-565 Add FTPClient method to return an FTPFile from an MDTM command ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClient.mdtmFile(String) : org.apache.commons.net.ftp.FTPClient : (3492, 3514)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String) : (95, 191) --> (96, 177)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String) : org.apache.commons.net.ftp.parser.MLSxEntryParser : (179, 201)
[DEBUG] 
[DEBUG] === Inspecting commit: 61d2ab41 : Add display timezone option for listing methods Allow multiple listing methods in a single connect session ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (87, 495) --> (88, 500)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (58, 85) --> (58, 89)
[DEBUG] 
[DEBUG] === Inspecting commit: d219afb0 : NET-564 FTPFile.toFormattedString - allow specification of TimeZone for display ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.toFormattedString() : org.apache.commons.net.ftp.FTPFile.toFormattedString() : (386, 426) --> (386, 399)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPFile.toFormattedString(String) : org.apache.commons.net.ftp.FTPFile : (401, 453)
[DEBUG] 
[DEBUG] === Inspecting commit: fd10c3d7 : Typo ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (58, 85) --> (58, 85)
[DEBUG] 
[DEBUG] === Inspecting commit: 3ac7c4c9 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date Part 1: detect which parts are present TODO: set Calendar to indicate which parts are significant ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.toFormattedString() : org.apache.commons.net.ftp.FTPFile.toFormattedString() : (384, 412) --> (386, 426)
[DEBUG] 
[DEBUG] === Inspecting commit: 17ecff74 : NET-563 MLSxEntryParser needs test cases; parsing is too lax ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String) : (95, 173) --> (95, 191)
[DEBUG] 
[DEBUG] === Inspecting commit: fdf3d2c2 : Show boundary ===
[DEBUG] 
[DEBUG] === Inspecting commit: efa533b3 : Add mdtm output ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (81, 477) --> (87, 495)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (53, 79) --> (55, 84)
[DEBUG] Insert: METHOD: examples.ftp.FTPClientExample.parseGMTdate(String) : examples.ftp.FTPClientExample : (517, 539)
[DEBUG] 
[DEBUG] === Inspecting commit: d7eb24cb : Add server Timezone for parsing LIST responses ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (80, 468) --> (81, 477)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (53, 78) --> (53, 82)
[DEBUG] 
[DEBUG] === Inspecting commit: 9a06c433 : Spaces ===
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 182a19bc : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 48786125 : Docn ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/EnterpriseUnixFTPEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: caa3ae14 : Document LIST timestamp restrictions ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 1eeecab0 : Standardise on Calendar.DAY_OF_MONTH rather than the synonym Calendar.DATE - which is less obvious ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/EnterpriseUnixFTPEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser.parseFTPEntry(String) : (73, 157) --> (73, 157)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar) : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar) : (81, 154) --> (81, 154)
[DEBUG] 
[DEBUG] === Inspecting commit: 4c63aa0a : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.recentDateFormat : SimpleDateFormat : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.recentDateFormat : SimpleDateFormat : (45, 45) --> (50, 53)
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.defaultDateFormat : SimpleDateFormat : org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.defaultDateFormat : SimpleDateFormat : (44, 44) --> (44, 49)
[DEBUG] 
[DEBUG] === Inspecting commit: b8f3226d : Fix indentation and unnecessary line wraps ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/EnterpriseUnixFTPEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 1a30a36b : Document what happens when invalid parameters supplied ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 752a551c : NET-561 FTPFile.toFormattedString prints user and group in wrong order ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.toFormattedString() : org.apache.commons.net.ftp.FTPFile.toFormattedString() : (382, 410) --> (382, 410)
[DEBUG] 
[DEBUG] === Inspecting commit: e68628bb : NET-544 FTPClient.initiateListParsing does not correctly check if parserKey was cached ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.initiateListParsing(String,String) : org.apache.commons.net.ftp.FTPClient.initiateListParsing(String,String) : (3213, 3312) --> (3213, 3273)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClient.getEntryParser() : org.apache.commons.net.ftp.FTPClient : (3794, 3796)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.FTPClient.__createParser(String) : org.apache.commons.net.ftp.FTPClient : (3276, 3318)
[DEBUG] 
[DEBUG] === Inspecting commit: d4e49ab1 : Add example config item ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2e6efa8f : NET-554 Simplify TelnetOptionHandler class hierarchy ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/EchoOptionHandler.java ---
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.EchoOptionHandler.startSubnegotiationLocal() : org.apache.commons.net.telnet.EchoOptionHandler : (69, 78)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.EchoOptionHandler.startSubnegotiationRemote() : org.apache.commons.net.telnet.EchoOptionHandler : (80, 89)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.EchoOptionHandler.answerSubnegotiation(int[],int) : org.apache.commons.net.telnet.EchoOptionHandler : (54, 67)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/SimpleOptionHandler.java ---
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.SimpleOptionHandler.startSubnegotiationLocal() : org.apache.commons.net.telnet.SimpleOptionHandler : (75, 84)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.SimpleOptionHandler.startSubnegotiationRemote() : org.apache.commons.net.telnet.SimpleOptionHandler : (86, 95)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.SimpleOptionHandler.answerSubnegotiation(int[],int) : org.apache.commons.net.telnet.SimpleOptionHandler : (61, 73)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/SuppressGAOptionHandler.java ---
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.SuppressGAOptionHandler.startSubnegotiationLocal() : org.apache.commons.net.telnet.SuppressGAOptionHandler : (68, 77)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.SuppressGAOptionHandler.startSubnegotiationRemote() : org.apache.commons.net.telnet.SuppressGAOptionHandler : (79, 88)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.SuppressGAOptionHandler.answerSubnegotiation(int[],int) : org.apache.commons.net.telnet.SuppressGAOptionHandler : (54, 66)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetOptionHandler.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.telnet.TelnetOptionHandler.startSubnegotiationLocal() : org.apache.commons.net.telnet.TelnetOptionHandler.startSubnegotiationLocal() : (206, 215) --> (209, 223)
[DEBUG] Update: METHOD: org.apache.commons.net.telnet.TelnetOptionHandler.startSubnegotiationRemote() : org.apache.commons.net.telnet.TelnetOptionHandler.startSubnegotiationRemote() : (217, 226) --> (225, 239)
[DEBUG] Update: METHOD: org.apache.commons.net.telnet.TelnetOptionHandler.answerSubnegotiation(int[],int) : org.apache.commons.net.telnet.TelnetOptionHandler.answerSubnegotiation(int[],int) : (191, 204) --> (191, 207)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TerminalTypeOptionHandler.java ---
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.TerminalTypeOptionHandler.startSubnegotiationLocal() : org.apache.commons.net.telnet.TerminalTypeOptionHandler : (115, 124)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.TerminalTypeOptionHandler.startSubnegotiationRemote() : org.apache.commons.net.telnet.TerminalTypeOptionHandler : (126, 135)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/WindowSizeOptionHandler.java ---
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.WindowSizeOptionHandler.startSubnegotiationRemote() : org.apache.commons.net.telnet.WindowSizeOptionHandler : (178, 187)
[DEBUG] Delete: METHOD: org.apache.commons.net.telnet.WindowSizeOptionHandler.answerSubnegotiation(int[],int) : org.apache.commons.net.telnet.WindowSizeOptionHandler : (100, 112)
[DEBUG] 
[DEBUG] === Inspecting commit: 316dfd40 : NET-558 - getModificationTime(<filename>) returns complete received line including response code ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.getModificationTime(String) : org.apache.commons.net.ftp.FTPClient.getModificationTime(String) : (3428, 3444) --> (3428, 3444)
[DEBUG] 
[DEBUG] === Inspecting commit: a272cd97 : Trailing spaces ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: dfadc09f : General tidyup and enhancements ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.main(String[]) : examples.mail.IMAPExportMbox.main(String[]) : (76, 133) --> (81, 189)
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : (157, 228) --> (221, 285)
[DEBUG] Insert: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean) : examples.mail.IMAPExportMbox.MboxListener : (209, 219)
[DEBUG] Delete: METHOD: examples.mail.IMAPExportMbox.MboxListener.MboxListener(File) : examples.mail.IMAPExportMbox.MboxListener : (152, 155)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.printHash : boolean : examples.mail.IMAPExportMbox.MboxListener : (207, 207)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.MboxListener.eol : String : examples.mail.IMAPExportMbox.MboxListener : (200, 200)
[DEBUG] Delete: FIELD: examples.mail.IMAPExportMbox.MboxListener.mbox : File : examples.mail.IMAPExportMbox.MboxListener : (144, 144)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.READ_TIMEOUT : int : examples.mail.IMAPExportMbox : (79, 79)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.LF : String : examples.mail.IMAPExportMbox : (70, 70)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.CONNECT_TIMEOUT : int : examples.mail.IMAPExportMbox : (78, 78)
[DEBUG] Insert: FIELD: examples.mail.IMAPExportMbox.EOL_DEFAULT : String : examples.mail.IMAPExportMbox : (71, 71)
[DEBUG] 
[DEBUG] === Inspecting commit: 41bdc4e2 : Don't show reflection wrapper in stack trace if exception was thrown by called code ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] Update: METHOD: examples.Main.main(String[]) : examples.Main.main(String[]) : (31, 95) --> (32, 105)
[DEBUG] 
[DEBUG] === Inspecting commit: 22cd80de : Javadoc ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f9193d5f : findbugs-maven-plugin 2.5.3 -> 2.5.5. ===
[DEBUG] 
[DEBUG] === Inspecting commit: a9d7cc5a : NET-556 Make SubnetInfo.isInRange(int) public ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.isInRange(int) : org.apache.commons.net.util.SubnetUtils.SubnetInfo.isInRange(int) : (129, 134) --> (129, 134)
[DEBUG] 
[DEBUG] === Inspecting commit: c3d19247 : Simplify conditional by using switch Add missing value ===
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] Update: METHOD: examples.telnet.TelnetClientExample.receivedNegotiation(int,int) : examples.telnet.TelnetClientExample.receivedNegotiation(int,int) : (272, 303) --> (272, 307)
[DEBUG] 
[DEBUG] === Inspecting commit: 766da3f0 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ebf09d32 : Trailing spaces ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0f6bc4c0 : Unused import ===
[DEBUG] 
[DEBUG] === Inspecting commit: 5555226c : NET-550 Default FTPClient bufferSize results in very slow retrieve transfers Fix code in Util#copyStream (also copyReader) that failed to use the proper default for buffer size 0 ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.io.Util.copyStream(InputStream,OutputStream,int,long,CopyStreamListener,boolean) : org.apache.commons.net.io.Util.copyStream(InputStream,OutputStream,int,long,CopyStreamListener,boolean) : (52, 140) --> (52, 140)
[DEBUG] Update: METHOD: org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener) : org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener) : (231, 308) --> (231, 308)
[DEBUG] 
[DEBUG] === Inspecting commit: 506d0271 : NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred Rename confusing fields ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.io.Util.copyStream(InputStream,OutputStream,int,long,CopyStreamListener,boolean) : org.apache.commons.net.io.Util.copyStream(InputStream,OutputStream,int,long,CopyStreamListener,boolean) : (52, 140) --> (52, 140)
[DEBUG] Update: METHOD: org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener) : org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener) : (231, 308) --> (231, 308)
[DEBUG] 
[DEBUG] === Inspecting commit: aee94d0b : NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener) : org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener) : (231, 308) --> (231, 308)
[DEBUG] 
[DEBUG] === Inspecting commit: c5192345 : Only create String once ===
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] Update: METHOD: examples.telnet.TelnetClientExample.main(String[]) : examples.telnet.TelnetClientExample.main(String[]) : (54, 268) --> (54, 269)
[DEBUG] 
[DEBUG] === Inspecting commit: d75f0c42 : Added control character processing to TelnetClientExample ===
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] Update: METHOD: examples.telnet.TelnetClientExample.main(String[]) : examples.telnet.TelnetClientExample.main(String[]) : (54, 257) --> (54, 268)
[DEBUG] 
[DEBUG] === Inspecting commit: e58cf27d : NET-547 There is a lack of documentation regarding setControlKeepAliveTimeout ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b62a8b12 : Add tag for 3.3 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 72ea0f2b : NET-549 - Telnet does not convert LF to CRLF in ASCII mode ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetOutputStream.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.telnet.TelnetOutputStream.write(int) : org.apache.commons.net.telnet.TelnetOutputStream.write(int) : (47, 106) --> (48, 114)
[DEBUG] 
[DEBUG] === Inspecting commit: 9eeb9c15 : TYPO ===
[DEBUG] --- Modify File: src/main/java/examples/telnet/TelnetClientExample.java ---
[DEBUG] Update: METHOD: examples.telnet.TelnetClientExample.main(String[]) : examples.telnet.TelnetClientExample.main(String[]) : (54, 257) --> (54, 257)
[DEBUG] 
[DEBUG] === Inspecting commit: 6e790e42 : Trailing spaces ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/ConfigurableFTPFileEntryParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPReply.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Threader.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b77ce822 : Tab police ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] --- Modify File: src/main/java/examples/nntp/ArticleReader.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e7e48da6 : Camel case test method name. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 953b0d30 : Format: Add blank line. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 66d6cbb8 : Update commons-parent to 34 from 33. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 131a120d : NET-543 telnet: spy read EOL is reversed ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/Telnet.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.telnet.Telnet._spyRead(int) : org.apache.commons.net.telnet.Telnet._spyRead(int) : (1194, 1221) --> (1194, 1221)
[DEBUG] 
[DEBUG] === Inspecting commit: 1d8d34db : Javadoc ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 8fe92b71 : Don't "borrow" external hosts for testing ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4115f808 : Javadoc Count messages found ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP) : (150, 220) --> (156, 227)
[DEBUG] 
[DEBUG] === Inspecting commit: 2fec3721 : Use separate BufferedReader variables to avoid resource not closed warning ===
[DEBUG] --- Modify File: src/main/java/examples/nntp/ArticleReader.java ---
[DEBUG] Update: METHOD: examples.nntp.ArticleReader.main(String[]) : examples.nntp.ArticleReader.main(String[]) : (34, 88) --> (34, 89)
[DEBUG] 
[DEBUG] === Inspecting commit: 1a25a4cc : Unnecessary ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPSSocketFactory.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 6077beaa : Unused import ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPSClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: de559667 : Close the resource ===
[DEBUG] --- Modify File: src/main/java/examples/cidr/SubnetUtilsExample.java ---
[DEBUG] Update: METHOD: examples.cidr.SubnetUtilsExample.main(String[]) : examples.cidr.SubnetUtilsExample.main(String[]) : (32, 70) --> (32, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: e9d6422b : Add examples ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPMail.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 56db2c59 : NET-540 Article#printThread should have option to use any PrintStream ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Article.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.Article.printThread(Article,int) : org.apache.commons.net.nntp.Article.printThread(Article,int) : (137, 154) --> (159, 167)
[DEBUG] Insert: METHOD: org.apache.commons.net.nntp.Article.printThread(Article,int,PrintStream) : org.apache.commons.net.nntp.Article : (169, 188)
[DEBUG] Insert: METHOD: org.apache.commons.net.nntp.Article.printThread(Article,PrintStream) : org.apache.commons.net.nntp.Article : (148, 157)
[DEBUG] Insert: METHOD: org.apache.commons.net.nntp.Article.printThread(Article) : org.apache.commons.net.nntp.Article : (138, 146)
[DEBUG] 
[DEBUG] === Inspecting commit: 422b0fe3 : Test if Javadoc 8 fix works ===
[DEBUG] 
[DEBUG] === Inspecting commit: b26a3b41 : NET-539 NPE if Threader.thread invoked with empty list or with null array ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Threader.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.Threader.thread(Iterable<? extends Threadable>) : org.apache.commons.net.nntp.Threader.thread(Iterable<? extends Threadable>) : (47, 91) --> (48, 96)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.Threader.thread(Threadable[]) : org.apache.commons.net.nntp.Threader.thread(Threadable[]) : (446, 456) --> (451, 464)
[DEBUG] 
[DEBUG] === Inspecting commit: 061d70dd : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/finger/FingerClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticleHeader(String,ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.retrieveArticleHeader(String,ArticlePointer) : (1743, 1752) --> (1750, 1764)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.selectPreviousArticle(ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.selectPreviousArticle(ArticlePointer) : (1790, 1799) --> (1813, 1825)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.selectArticle(String,ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.selectArticle(String,ArticlePointer) : (1754, 1764) --> (1766, 1781)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.selectArticle(ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.selectArticle(ArticlePointer) : (1766, 1776) --> (1783, 1796)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticleBody(String,ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.retrieveArticleBody(String,ArticlePointer) : (1730, 1741) --> (1734, 1748)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.selectNextArticle(ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.selectNextArticle(ArticlePointer) : (1778, 1788) --> (1798, 1811)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticle(String,ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.retrieveArticle(String,ArticlePointer) : (1717, 1728) --> (1718, 1732)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPConnectionClosedException.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/SimpleNNTPHeader.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 727f55cc : Remove unthrown exceptions. These are not part of the method signature so don't affect binary compatibility ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPSClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.SMTPSClient.execTLS() : org.apache.commons.net.smtp.SMTPSClient.execTLS() : (283, 298) --> (283, 298)
[DEBUG] 
[DEBUG] === Inspecting commit: 38141bae : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/RelayPath.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SMTPCommand.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/SimpleSMTPHeader.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: cb10f50d : Remove unthrown exceptions. These are not part of the method signature so don't affect binary compatibility ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/AuthenticatingSMTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient(String) : org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient(String) : (50, 57) --> (49, 55)
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient() : org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient() : (40, 48) --> (40, 47)
[DEBUG] Update: METHOD: org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient(String,String) : org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient(String,String) : (93, 102) --> (91, 99)
[DEBUG] 
[DEBUG] === Inspecting commit: 0fb67b40 : Remove unecessary test Javadoc - may cause IDE Javadoc warnings - more to maintain ===
[DEBUG] 
[DEBUG] === Inspecting commit: 616cad1f : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveHeader(String,int,int) : org.apache.commons.net.nntp.NNTPClient.retrieveHeader(String,int,int) : (1580, 1588) --> (1583, 1596)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticle(int,ArticlePointer) : org.apache.commons.net.nntp.NNTPClient.retrieveArticle(int,ArticlePointer) : (1660, 1669) --> (1678, 1692)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticle(int) : org.apache.commons.net.nntp.NNTPClient.retrieveArticle(int) : (1671, 1677) --> (1694, 1704)
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo(int,int) : org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo(int,int) : (1590, 1596) --> (1598, 1608)
[DEBUG] 
[DEBUG] === Inspecting commit: cb0d3f61 : Java 8 Javadoc fixes ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4db79407 : Remove unecessary test Javadoc - may cause IDE Javadoc warnings - more to maintain ===
[DEBUG] 
[DEBUG] === Inspecting commit: 001d716d : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/bsd/RCommandClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/bsd/RLoginClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/VMSFTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/AuthenticatingIMAPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/io/Util.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/tftp/TFTPPacketException.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2e7f9121 : Remove useless Javadoc (causes IDE Javadoc warnings) ===
[DEBUG] 
[DEBUG] === Inspecting commit: 55ebc7bc : Remove useless Javadoc (causes IDE Javadoc warnings) ===
[DEBUG] 
[DEBUG] === Inspecting commit: ad8f8f03 : Remove useless Javadoc (causes IDE Javadoc warnings) ===
[DEBUG] 
[DEBUG] === Inspecting commit: f6ffd04c : Remove useless Javadoc (causes IDE Javadoc warnings) ===
[DEBUG] 
[DEBUG] === Inspecting commit: c83e0eed : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/PrintCommandListener.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/discard/DiscardTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS400FTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/Base64.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f1ebf757 : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeStamp.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/pop3/POP3Client.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/EchoOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/SimpleOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/SuppressGAOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TelnetOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/TerminalTypeOptionHandler.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/telnet/WindowSizeOptionHandler.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 7b71e2ae : Java 8 Javadoc fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/SocketClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 29c80bf4 : Javadoc fixes (Java 8) ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/DatagramSocketClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/PrintCommandListener.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/SocketClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/discard/DiscardTCPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/discard/DiscardUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFileEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/CompositeFileEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS400FTPEntryParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Article.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/ArticlePointer.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTP.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NNTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NewGroupsOrNewsQuery.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/NewsgroupInfo.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Threadable.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/smtp/RelayPath.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/Base64.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/KeyManagerUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/TrustManagerUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e96cf344 : NET-536 IMAP FETCH example : IMAPExportMbox ===
[DEBUG] --- New File: src/main/java/examples/mail/IMAPExportMbox.java ---
[DEBUG] Insert: CLASS: examples.mail.IMAPExportMbox : examples.mail.IMAPExportMbox : (37, 228)
[DEBUG] 
[DEBUG] === Inspecting commit: 1e7d8d6f : Simplify by standardising on URI for server and login details; use common utility method ===
[DEBUG] --- Modify File: src/main/java/examples/Main.java ---
[DEBUG] Update: METHOD: examples.Main.main(String[]) : examples.Main.main(String[]) : (31, 93) --> (31, 95)
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPImportMbox.main(String[]) : examples.mail.IMAPImportMbox.main(String[]) : (55, 204) --> (54, 146)
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPMail.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPMail.main(String[]) : examples.mail.IMAPMail.main(String[]) : (37, 111) --> (37, 74)
[DEBUG] --- New File: src/main/java/examples/mail/IMAPUtils.java ---
[DEBUG] Insert: CLASS: examples.mail.IMAPUtils : examples.mail.IMAPUtils : (27, 96)
[DEBUG] 
[DEBUG] === Inspecting commit: 5d8fa90d : Rewrite to avoid some resource closure warnings caused by reusing the stream variables ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient._retrieveFile(String,String,OutputStream) : org.apache.commons.net.ftp.FTPClient._retrieveFile(String,String,OutputStream) : (1849, 1888) --> (1851, 1892)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient._retrieveFileStream(String,String) : org.apache.commons.net.ftp.FTPClient._retrieveFileStream(String,String) : (1922, 1947) --> (1926, 1952)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient._storeFileStream(String,String) : org.apache.commons.net.ftp.FTPClient._storeFileStream(String,String) : (683, 709) --> (685, 711)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient._storeFile(String,String,InputStream) : org.apache.commons.net.ftp.FTPClient._storeFile(String,String,InputStream) : (628, 675) --> (628, 677)
[DEBUG] 
[DEBUG] === Inspecting commit: 428bac52 : NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses Add TRUE_CHUNK_LISTENER ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAP.TRUE_CHUNK_LISTENER : IMAPChunkListener : org.apache.commons.net.imap.IMAP : (82, 107)
[DEBUG] 
[DEBUG] === Inspecting commit: c21fcb1e : Add details of what example does ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPMail.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPMail.main(String[]) : examples.mail.IMAPMail.main(String[]) : (37, 110) --> (37, 111)
[DEBUG] 
[DEBUG] === Inspecting commit: f8d82c9b : Unescape >+From_ lines, not just >From_ ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPImportMbox.main(String[]) : examples.mail.IMAPImportMbox.main(String[]) : (52, 201) --> (55, 204)
[DEBUG] Insert: METHOD: examples.mail.IMAPImportMbox.startsWith(String,Pattern) : examples.mail.IMAPImportMbox : (206, 209)
[DEBUG] Insert: FIELD: examples.mail.IMAPImportMbox.PATFROM : Pattern : examples.mail.IMAPImportMbox : (53, 53)
[DEBUG] 
[DEBUG] === Inspecting commit: df9480cf : NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.imap.IMAP.__getReply(boolean) : org.apache.commons.net.imap.IMAP.__getReply(boolean) : (93, 135) --> (110, 163)
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAP.setChunkListener(IMAPChunkListener) : org.apache.commons.net.imap.IMAP : (396, 407)
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAP.__chunkListener : IMAPChunkListener : org.apache.commons.net.imap.IMAP : (82, 82)
[DEBUG] Insert: CLASS: org.apache.commons.net.imap.IMAP.IMAPChunkListener : org.apache.commons.net.imap.IMAP : (67, 80)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPReply.java ---
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAPReply.PARTIAL : int : org.apache.commons.net.imap.IMAPReply : (44, 49)
[DEBUG] 
[DEBUG] === Inspecting commit: 560e40ca : NET-534 Unnecesssary call to getReplyString() if no listeners configured ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAP.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAP.fireReplyReceived(int,String) : org.apache.commons.net.imap.IMAP : (137, 150)
[DEBUG] 
[DEBUG] === Inspecting commit: e3b71afb : Javadoc examples ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 955d69ed : Add example ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: a0973e36 : Don't use class fields when local variables are sufficient ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/nntp/Threader.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.nntp.Threader.thread(Iterable<? extends Threadable>) : org.apache.commons.net.nntp.Threader.thread(Iterable<? extends Threadable>) : (50, 95) --> (47, 91)
[DEBUG] Insert: METHOD: org.apache.commons.net.nntp.Threader.buildContainer(Threadable,HashMap<String, ThreadContainer>) : org.apache.commons.net.nntp.Threader : (93, 201)
[DEBUG] Insert: METHOD: org.apache.commons.net.nntp.Threader.gatherSubjects(ThreadContainer) : org.apache.commons.net.nntp.Threader : (291, 441)
[DEBUG] Insert: METHOD: org.apache.commons.net.nntp.Threader.findRootSet(HashMap<String, ThreadContainer>) : org.apache.commons.net.nntp.Threader : (203, 225)
[DEBUG] Delete: METHOD: org.apache.commons.net.nntp.Threader.buildContainer(Threadable) : org.apache.commons.net.nntp.Threader : (97, 203)
[DEBUG] Delete: METHOD: org.apache.commons.net.nntp.Threader.findRootSet() : org.apache.commons.net.nntp.Threader : (205, 226)
[DEBUG] Delete: METHOD: org.apache.commons.net.nntp.Threader.gatherSubjects() : org.apache.commons.net.nntp.Threader : (292, 441)
[DEBUG] Delete: FIELD: org.apache.commons.net.nntp.Threader.bogusIdCount : int : org.apache.commons.net.nntp.Threader : (37, 37)
[DEBUG] Delete: FIELD: org.apache.commons.net.nntp.Threader.root : ThreadContainer : org.apache.commons.net.nntp.Threader : (35, 35)
[DEBUG] Delete: FIELD: org.apache.commons.net.nntp.Threader.idTable : HashMap<String, ThreadContainer> : org.apache.commons.net.nntp.Threader : (36, 36)
[DEBUG] 
[DEBUG] === Inspecting commit: b8ecb3f9 : NET-530 input parameter of org.apache.commons.net.ftp.FTP.__getReply(boolean) is not used ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTP.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTP.__getReply(boolean) : org.apache.commons.net.ftp.FTP.__getReply(boolean) : (307, 369) --> (307, 371)
[DEBUG] 
[DEBUG] === Inspecting commit: 949be1b5 : Update versions; ensure compiler version is specified (we override parent) ===
[DEBUG] 
[DEBUG] === Inspecting commit: f8f24b82 : Regen release notes ===
[DEBUG] 
[DEBUG] === Inspecting commit: c499348a : Fix up incorrect XML ===
[DEBUG] 
[DEBUG] === Inspecting commit: bfcbea41 : Default the current release Java minimum to the current compiler target ===
[DEBUG] 
[DEBUG] === Inspecting commit: adfaf3ba : NET-529 SubnetUtils throws exception on valid input ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.calculate(String) : org.apache.commons.net.util.SubnetUtils.calculate(String) : (250, 273) --> (250, 270)
[DEBUG] 
[DEBUG] === Inspecting commit: d5bceac7 : NET-527 Add SimpleNTPServer as example and for testing ===
[DEBUG] --- New File: src/main/java/examples/ntp/SimpleNTPServer.java ---
[DEBUG] Insert: CLASS: examples.ntp.SimpleNTPServer : examples.ntp.SimpleNTPServer : (28, 228)
[DEBUG] 
[DEBUG] === Inspecting commit: 41dd3db3 : NET-516 parser problem occurs if the filename contains one or more characters of which the second byte of Shift-JIS code is 0x85 Fix NT parser ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NTFTPEntryParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.NTFTPEntryParser.NTFTPEntryParser(FTPClientConfig) : org.apache.commons.net.ftp.parser.NTFTPEntryParser.NTFTPEntryParser(FTPClientConfig) : (65, 88) --> (66, 89)
[DEBUG] 
[DEBUG] === Inspecting commit: 75129393 : Add regex flags to constructors ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/ConfigurableFTPFileEntryParserImpl.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl.ConfigurableFTPFileEntryParserImpl(String,int) : org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl : (59, 71)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.RegexFTPFileEntryParserImpl(String,int) : org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl : (76, 94)
[DEBUG] 
[DEBUG] === Inspecting commit: 30acc18a : Constructors should not call overrideable methods. Add setRegex(regex, flags) method ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.setRegex(String) : org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.setRegex(String) : (138, 154) --> (138, 149)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.RegexFTPFileEntryParserImpl(String) : org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.RegexFTPFileEntryParserImpl(String) : (56, 73) --> (56, 73)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.setRegex(String,int) : org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl : (152, 164)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.compileRegex(String,int) : org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl : (166, 182)
[DEBUG] 
[DEBUG] === Inspecting commit: 934ce8f6 : Fix Javadoc to agree with code ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 7ac3c663 : TODO was fixed a while ago ===
[DEBUG] 
[DEBUG] === Inspecting commit: bba8edb1 : Typo ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFileEntryParserImpl.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: edfbddb9 : Ensure case statement has a default case ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPFile.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPFile.formatType() : org.apache.commons.net.ftp.FTPFile.formatType() : (412, 422) --> (412, 423)
[DEBUG] 
[DEBUG] === Inspecting commit: 5c38cf8f : Typo ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/bsd/RExecClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d645c73e : Add control encoding option ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1d830a80 : Add control encoding option ===
[DEBUG] --- Modify File: src/main/java/examples/ftp/FTPClientExample.java ---
[DEBUG] Update: METHOD: examples.ftp.FTPClientExample.main(String[]) : examples.ftp.FTPClientExample.main(String[]) : (79, 460) --> (80, 468)
[DEBUG] Update: FIELD: examples.ftp.FTPClientExample.USAGE : String : examples.ftp.FTPClientExample.USAGE : String : (53, 77) --> (53, 79)
[DEBUG] 
[DEBUG] === Inspecting commit: 4379a681 : Cut-n-paste bug ===
[DEBUG] 
[DEBUG] === Inspecting commit: b4fabe83 : NET-525 Added missing set methods on NTP class and interface ===
[DEBUG] --- Modify File: src/main/java/examples/ntp/NTPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NTPUDPClient.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Impl.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ntp.NtpV3Impl.setDatagramPacket(DatagramPacket) : org.apache.commons.net.ntp.NtpV3Impl.setDatagramPacket(DatagramPacket) : (553, 568) --> (585, 608)
[DEBUG] Update: METHOD: org.apache.commons.net.ntp.NtpV3Impl.setReferenceId(int) : org.apache.commons.net.ntp.NtpV3Impl.setReferenceId(int) : (282, 295) --> (303, 313)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Impl.equals(Object) : org.apache.commons.net.ntp.NtpV3Impl : (610, 631)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Impl.setInt(int,int) : org.apache.commons.net.ntp.NtpV3Impl : (509, 521)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Impl.hashCode() : org.apache.commons.net.ntp.NtpV3Impl : (633, 643)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Impl.setRootDelay(int) : org.apache.commons.net.ntp.NtpV3Impl : (231, 240)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Impl.setRootDispersion(int) : org.apache.commons.net.ntp.NtpV3Impl : (267, 276)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/NtpV3Packet.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setVersion(int) : org.apache.commons.net.ntp.NtpV3Packet.setVersion(int) : (153, 156) --> (169, 172)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int) : org.apache.commons.net.ntp.NtpV3Packet : (121, 125)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int) : org.apache.commons.net.ntp.NtpV3Packet : (132, 136)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int) : org.apache.commons.net.ntp.NtpV3Packet : (148, 152)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeInfo.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.TimeInfo.hashCode() : org.apache.commons.net.ntp.TimeInfo : (330, 343)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.TimeInfo.equals(Object) : org.apache.commons.net.ntp.TimeInfo : (307, 328)
[DEBUG] Insert: METHOD: org.apache.commons.net.ntp.TimeInfo.getAddress() : org.apache.commons.net.ntp.TimeInfo : (288, 295)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ntp/TimeStamp.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d6a95a75 : TRailing spaces ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS400FTPEntryParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 52b9bc03 : TRailing spaces ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0b144842 : TRailing spaces ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: fbee82eb : NET-526 Avoid greedy matches within a regex ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/NetwareFTPEntryParser.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.NetwareFTPEntryParser.REGEX : String : org.apache.commons.net.ftp.parser.NetwareFTPEntryParser.REGEX : String : (48, 56) --> (48, 59)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/VMSFTPEntryParser.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.VMSFTPEntryParser.REGEX : String : org.apache.commons.net.ftp.parser.VMSFTPEntryParser.REGEX : String : (55, 63) --> (55, 63)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser.PRE_PARSE_REGEX : String : org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser.PRE_PARSE_REGEX : String : (52, 53) --> (52, 53)
[DEBUG] 
[DEBUG] === Inspecting commit: aa4da9ef : Fix bug in matching numbers without commas Start message numbering at 1 Log message number with length ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPImportMbox.main(String[]) : examples.mail.IMAPImportMbox.main(String[]) : (49, 196) --> (49, 198)
[DEBUG] Insert: METHOD: examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String,int) : examples.mail.IMAPImportMbox : (200, 213)
[DEBUG] Delete: METHOD: examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String) : examples.mail.IMAPImportMbox : (198, 210)
[DEBUG] 
[DEBUG] === Inspecting commit: 8290fefe : Don't rely on getLocalHost() being directly accessible ===
[DEBUG] 
[DEBUG] === Inspecting commit: b4380110 : Remove debug ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0a354864 : Let's try explicit local host address ===
[DEBUG] 
[DEBUG] === Inspecting commit: cb17db7c : A bit more debug ===
[DEBUG] 
[DEBUG] === Inspecting commit: a8ee23ca : Add some temporary debug for investigating Continuum test failures ===
[DEBUG] 
[DEBUG] === Inspecting commit: 156724c0 : Replace call to deprecated API ===
[DEBUG] --- Modify File: src/main/java/examples/cidr/SubnetUtilsExample.java ---
[DEBUG] Update: METHOD: examples.cidr.SubnetUtilsExample.main(String[]) : examples.cidr.SubnetUtilsExample.main(String[]) : (32, 70) --> (32, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: a690f593 : Add dates and desc ===
[DEBUG] 
[DEBUG] === Inspecting commit: 64475d4a : Missing spaces ===
[DEBUG] 
[DEBUG] === Inspecting commit: 430884f6 : HNY ===
[DEBUG] 
[DEBUG] === Inspecting commit: 71706889 : NET-520 SubnetUtils("0.0.0.0/0") does not behave as expected Fixed range checking so network and broadcast addresses are treated as unsigned ints ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.isInRange(int) : org.apache.commons.net.util.SubnetUtils.SubnetInfo.isInRange(int) : (124, 127) --> (128, 133)
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.low() : org.apache.commons.net.util.SubnetUtils.SubnetInfo.low() : (103, 106) --> (107, 110)
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCountLong() : org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCountLong() : (182, 192) --> (188, 198)
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.high() : org.apache.commons.net.util.SubnetUtils.SubnetInfo.high() : (108, 111) --> (112, 115)
[DEBUG] Insert: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.broadcastLong() : org.apache.commons.net.util.SubnetUtils.SubnetInfo : (105, 105)
[DEBUG] Insert: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.networkLong() : org.apache.commons.net.util.SubnetUtils.SubnetInfo : (104, 104)
[DEBUG] 
[DEBUG] === Inspecting commit: 1ab1a17f : NET-521 SubnetUtils.SubnetInfo.getAddressCount() can overflow as it returns an int ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCount() : org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCount() : (162, 170) --> (165, 180)
[DEBUG] Insert: METHOD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCountLong() : org.apache.commons.net.util.SubnetUtils.SubnetInfo : (182, 192)
[DEBUG] Insert: FIELD: org.apache.commons.net.util.SubnetUtils.SubnetInfo.UNSIGNED_INT_MASK : long : org.apache.commons.net.util.SubnetUtils.SubnetInfo : (94, 94)
[DEBUG] 
[DEBUG] === Inspecting commit: e333ff8e : Spurious closing tag ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9c352db4 : NET-515 FTPClient sample in class javadoc "bug" ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ad3da80f : NET-519 Apache Commons Net 3.3 has a performance issue ===
[DEBUG] 
[DEBUG] === Inspecting commit: f2e08e84 : NET-517 FTPClient#reinitialize is package protected ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.reinitialize() : org.apache.commons.net.ftp.FTPClient.reinitialize() : (1168, 1196) --> (1168, 1196)
[DEBUG] 
[DEBUG] === Inspecting commit: 7879fd65 : NET-512 Downloading files or members from the AS400 QSYS file system is not supported ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/parser/OS400FTPEntryParser.java ---
[DEBUG] Update: FIELD: org.apache.commons.net.ftp.parser.OS400FTPEntryParser.REGEX : String : org.apache.commons.net.ftp.parser.OS400FTPEntryParser.REGEX : String : (36, 41) --> (160, 160)
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.parser.OS400FTPEntryParser.parseFTPEntry(String) : org.apache.commons.net.ftp.parser.OS400FTPEntryParser.parseFTPEntry(String) : (77, 143) --> (282, 405)
[DEBUG] Insert: METHOD: org.apache.commons.net.ftp.parser.OS400FTPEntryParser.isNullOrEmpty(String) : org.apache.commons.net.ftp.parser.OS400FTPEntryParser : (407, 419)
[DEBUG] 
[DEBUG] === Inspecting commit: 476395d7 : NET-518 FTPClient#initFeatureMap should not initialize empty map if reply code is 530 ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/ftp/FTPClient.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.ftp.FTPClient.initFeatureMap() : org.apache.commons.net.ftp.FTPClient.initFeatureMap() : (2322, 2353) --> (2322, 2357)
[DEBUG] 
[DEBUG] === Inspecting commit: a02169b3 : Use for each loop. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 588fb691 : Formatting. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9d090d40 : [NET-511] Exception for new SubnetUtils("0.0.0.0/0"). ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.calculate(String) : org.apache.commons.net.util.SubnetUtils.calculate(String) : (222, 242) --> (222, 245)
[DEBUG] 
[DEBUG] === Inspecting commit: ceb54335 : Sort members in AB order. ===
[DEBUG] 
[DEBUG] === Inspecting commit: b23d7bf4 : ASF Branding ===
[DEBUG] 
[DEBUG] === Inspecting commit: 86450a6f : Use IMAP URL to simplify command line Add selector support ===
[DEBUG] --- Modify File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] Update: METHOD: examples.mail.IMAPImportMbox.main(String[]) : examples.mail.IMAPImportMbox.main(String[]) : (40, 115) --> (49, 196)
[DEBUG] Update: METHOD: examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String) : examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String) : (117, 127) --> (198, 210)
[DEBUG] Insert: METHOD: examples.mail.IMAPImportMbox.wanted(int,String,BitSet,List<String>) : examples.mail.IMAPImportMbox : (212, 225)
[DEBUG] Insert: METHOD: examples.mail.IMAPImportMbox.listContains(List<String>,String) : examples.mail.IMAPImportMbox : (227, 240)
[DEBUG] 
[DEBUG] === Inspecting commit: 0a25cf01 : Typos ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SSLContextUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5e305c6a : NET-514 IMAP APPEND multiple issues in IMapClient. Deprecated unusable append methods. Added new append method, as well as example IMapImportMbox class to make use of it. ===
[DEBUG] --- New File: src/main/java/examples/mail/IMAPImportMbox.java ---
[DEBUG] Insert: CLASS: examples.mail.IMAPImportMbox : examples.mail.IMAPImportMbox : (28, 128)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] Insert: METHOD: org.apache.commons.net.imap.IMAPClient.append(String,String,String,String) : org.apache.commons.net.imap.IMAPClient : (238, 271)
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAPClient.DQUOTE_S : String : org.apache.commons.net.imap.IMAPClient : (30, 30)
[DEBUG] Insert: FIELD: org.apache.commons.net.imap.IMAPClient.DQUOTE : char : org.apache.commons.net.imap.IMAPClient : (29, 29)
[DEBUG] 
[DEBUG] === Inspecting commit: efc34a93 : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/imap/IMAPClient.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 22c63caf : Update to CP32 Fix incremental compiler bug (Net does not use annotations in package-info.java files) ===
[DEBUG] 
[DEBUG] === Inspecting commit: bcba9364 : It's tricky following the range check as one end is exclusive and the other is inclusive Make both ends inclusive and adjust the calling code accordingly ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/net/util/SubnetUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.matchAddress(Matcher) : org.apache.commons.net.util.SubnetUtils.matchAddress(Matcher) : (260, 267) --> (260, 267)
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.calculate(String) : org.apache.commons.net.util.SubnetUtils.calculate(String) : (222, 242) --> (222, 242)
[DEBUG] Update: METHOD: org.apache.commons.net.util.SubnetUtils.rangeCheck(int,int,int) : org.apache.commons.net.util.SubnetUtils.rangeCheck(int,int,int) : (299, 305) --> (299, 305)
[DEBUG] 
[DEBUG] === Inspecting commit: efc49076 : Typo ===
[DEBUG] 
[DEBUG] === Inspecting commit: e95984b4 : Oops, forgot to close tag ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8ea9034a : 3.3 released ===
[DEBUG] 
[DEBUG] === Inspecting commit: 529ae45a : Bump version ===
[DEBUG] 

[OUTPUT] Analysing Hunk Dependency ... 
[DEBUG] Done: Checkstyle
[DEBUG] Done: NET-527 Add SimpleNTPServer as example and for testing
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/parser/NTFTPEntryParserTest.java ...
[DEBUG] Done: NET-516 parser problem occurs if the filename contains one or more characters of which the second byte of Shift-JIS code is 0x85 Fix NT parser
[DEBUG] Done: Add dates and desc
[DEBUG] Done: NET-514 IMAP APPEND multiple issues in IMapClient. Deprecated unusable append methods. Added new append method, as well as example IMapImportMbox class to make use of it.
[DEBUG] Done: Add control encoding option
[DEBUG] Excluding src/test/java/org/apache/commons/net/SubnetUtilsTest.java ...
[DEBUG] Done: NET-520 SubnetUtils("0.0.0.0/0") does not behave as expected Fixed range checking so network and broadcast addresses are treated as unsigned ints
[DEBUG] Excluding src/test/java/org/apache/commons/net/SubnetUtilsTest.java ...
[DEBUG] Done: [NET-511] Exception for new SubnetUtils("0.0.0.0/0").
[DEBUG] Excluding src/test/java/org/apache/commons/net/ntp/TimeStampTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/net/time/TimeTestSimpleServer.java ...
[DEBUG] Done: NET-525 Added missing set methods on NTP class and interface
[DEBUG] Excluding src/test/java/org/apache/commons/net/SubnetUtilsTest.java ...
[DEBUG] Done: NET-521 SubnetUtils.SubnetInfo.getAddressCount() can overflow as it returns an int
[DEBUG] Done: It's tricky following the range check as one end is exclusive and the other is inclusive Make both ends inclusive and adjust the calling code accordingly
[DEBUG] Done: NET-526 Avoid greedy matches within a regex
[DEBUG] Done: NET-515 FTPClient sample in class javadoc "bug"
[DEBUG] Done: NET-519 Apache Commons Net 3.3 has a performance issue
[DEBUG] Done: NET-517 FTPClient#reinitialize is package protected
[DEBUG] Done: NET-512 Downloading files or members from the AS400 QSYS file system is not supported
[DEBUG] Done: NET-518 FTPClient#initFeatureMap should not initialize empty map if reply code is 530
[DEBUG] Done: Javadoc 8 fixes
[DEBUG] Done: Empty/unnecessary <p> tags
[DEBUG] Done: Java 8 Javadoc fixes
[DEBUG] Done: Java 8 Javadoc fixes
[DEBUG] Done: Javadoc 8 fixes
[DEBUG] Done: Javadoc
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/parser/MLSDComparison.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/parser/NTFTPEntryParserTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/net/nntp/TestThreader.java ...
[DEBUG] Done: Trailing spaces
[DEBUG] Done: Javadoc
[DEBUG] Done: Typo
[DEBUG] Done: Add regex flags to constructors
[DEBUG] Done: Simplify conditional by using switch Add missing value
[DEBUG] Done: Java 8 Javadoc fixes
[DEBUG] Done: Document LIST timestamp restrictions
[DEBUG] Done: Simplify examples/Main - use predefined properties file to define aliases
[DEBUG] Done: NET-547 There is a lack of documentation regarding setControlKeepAliveTimeout
[DEBUG] Done: Don't show reflection wrapper in stack trace if exception was thrown by called code
[DEBUG] Done: Javadoc fixes (Java 8)
[DEBUG] Done: Add example config item
[DEBUG] Done: Java 8 Javadoc fixes
[DEBUG] Done: Java 8 Javadoc fixes
[DEBUG] Done: Javadoc
[DEBUG] Done: Unnecessary
[DEBUG] Done: Format: Add blank line.
[DEBUG] Done: Test if Javadoc 8 fix works
[DEBUG] Done: NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses
[DEBUG] Done: NET-536 IMAP FETCH example : IMAPExportMbox
[DEBUG] Done: Don't use class fields when local variables are sufficient
[DEBUG] Done: NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses Add TRUE_CHUNK_LISTENER
[DEBUG] Done: Enable alias mechanism to work from the classpath Better output when class not found
[DEBUG] Done: NET-552 SocketTimeoutException connecting a FTP server via an HTTP Proxy
[DEBUG] Done: NET-549 - Telnet does not convert LF to CRLF in ASCII mode
[DEBUG] Done: Simplify by standardising on URI for server and login details; use common utility method
[DEBUG] Done: TRailing spaces
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParserTest.java ...
[DEBUG] Done: NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names
[DEBUG] Done: NET-534 Unnecesssary call to getReplyString() if no listeners configured
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/FTPClientTest.java ...
[DEBUG] Done: NET-528 FTPListParseEngine does not provide access to raw responses N.B. TelnetClientScript did not belong in this commit; removed in r1644803
[DEBUG] Done: NET-543 telnet: spy read EOL is reversed
[DEBUG] Done: Add details of what example does
[DEBUG] Done: TRailing spaces
[DEBUG] Done: Use IMAP URL to simplify command line Add selector support
[DEBUG] Done: Unescape >+From_ lines, not just >From_
[DEBUG] Done: Fix bug in matching numbers without commas Start message numbering at 1 Log message number with length
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParserTest.java ...
[DEBUG] Done: NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names Add option to parser to not skip leading spaces TODO make this the default but still allow reversion
[DEBUG] Done: NET-530 input parameter of org.apache.commons.net.ftp.FTP.__getReply(boolean) is not used
[DEBUG] Done: Add mdtm output
[DEBUG] Done: NET-565 Add FTPClient method to return an FTPFile from an MDTM command
[DEBUG] Done: NET-564 FTPFile.toFormattedString - allow specification of TimeZone for display
[DEBUG] Done: Add display timezone option for listing methods Allow multiple listing methods in a single connect session
[DEBUG] Done: Add control encoding option
[DEBUG] Done: Add server Timezone for parsing LIST responses
[DEBUG] Done: NET-540 Article#printThread should have option to use any PrintStream
[DEBUG] Done: No code change; split RE so separators are more clearly identified
[DEBUG] Done: Merge filename processing into single group Always process link type (no functional change)
[DEBUG] Excluding src/test/java/org/apache/commons/net/SubnetUtilsTest.java ...
[DEBUG] Done: NET-529 SubnetUtils throws exception on valid input
[DEBUG] Done: NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date Part 1: detect which parts are present TODO: set Calendar to indicate which parts are significant
[DEBUG] Done: NET-563 MLSxEntryParser needs test cases; parsing is too lax
[DEBUG] Done: NET-539 NPE if Threader.thread invoked with empty list or with null array
[DEBUG] Done: NET-561 FTPFile.toFormattedString prints user and group in wrong order
[DEBUG] Excluding src/test/java/org/apache/commons/net/ftp/FTPClientTest.java ...
[DEBUG] Done: NET-544 FTPClient.initiateListParsing does not correctly check if parserKey was cached
[DEBUG] Done: NET-554 Simplify TelnetOptionHandler class hierarchy
[DEBUG] Done: NET-558 - getModificationTime(<filename>) returns complete received line including response code
[DEBUG] Done: NET-556 Make SubnetInfo.isInRange(int) public
[DEBUG] Excluding src/test/java/org/apache/commons/net/util/UtilTest.java ...
[DEBUG] Done: NET-550 Default FTPClient bufferSize results in very slow retrieve transfers Fix code in Util#copyStream (also copyReader) that failed to use the proper default for buffer size 0
[DEBUG] Done: NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred Rename confusing fields
[DEBUG] Done: NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred
[DEBUG] Done: Added control character processing to TelnetClientExample
[DEBUG] Excluding src/test/java/org/apache/commons/net/ntp/TestNtpPacket.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/net/ntp/TestTimeInfo.java ...
[DEBUG] Done: NET-525 Added missing set methods on NTP class and interface Restore compatibility
[DEBUG] Done: Javadoc @since
[DEBUG] Excluding src/test/java/org/apache/commons/net/ntp/TestNtpPacket.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/net/ntp/TestTimeInfo.java ...
[DEBUG] Done: revert r1652867
[DEBUG] Hunk depends on: e27c3821 : Javadoc @since : added back.
[DEBUG] Hunk depends on: 724d534b : Javadoc 8 fixes : added back.
[DEBUG] Hunk depends on: 00104e73 : Javadoc : added back.
[DEBUG] Hunk depends on: 5469e099 : Empty/unnecessary <p> tags : added back.
[DEBUG] Hunk depends on: 966226bd : Javadoc : added back.
[DEBUG] Hunk depends on: 8fadf001 : Javadoc : added back.
[DEBUG] Hunk depends on: 50a124bf : NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names : added back.
[DEBUG] Hunk depends on: f9a8a384 : NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names Add option to parser to not skip leading spaces TODO make this the default but still allow reversion : added back.
[DEBUG] Hunk depends on: ff154772 : Merge filename processing into single group Always process link type (no functional change) : added back.
[DEBUG] Hunk depends on: b43ac62d : No code change; split RE so separators are more clearly identified : added back.
[DEBUG] Hunk depends on: 0a3c3449 : Simplify examples/Main - use predefined properties file to define aliases : added back.
[DEBUG] Hunk depends on: 9fb2ca62 : NET-552 SocketTimeoutException connecting a FTP server via an HTTP Proxy : added back.
[DEBUG] Hunk depends on: 7caaa91a : Enable alias mechanism to work from the classpath Better output when class not found : added back.
[DEBUG] Hunk depends on: c2be3466 : NET-528 FTPListParseEngine does not provide access to raw responses N.B. TelnetClientScript did not belong in this commit; removed in r1644803 : added back.
[DEBUG] Hunk depends on: 809652a3 : NET-565 Add FTPClient method to return an FTPFile from an MDTM command : added back.
[DEBUG] Hunk depends on: 61d2ab41 : Add display timezone option for listing methods Allow multiple listing methods in a single connect session : added back.
[DEBUG] Hunk depends on: d219afb0 : NET-564 FTPFile.toFormattedString - allow specification of TimeZone for display : added back.
[DEBUG] Hunk depends on: 3ac7c4c9 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date Part 1: detect which parts are present TODO: set Calendar to indicate which parts are significant : added back.
[DEBUG] Hunk depends on: 17ecff74 : NET-563 MLSxEntryParser needs test cases; parsing is too lax : added back.
[DEBUG] Hunk depends on: efa533b3 : Add mdtm output : added back.
[DEBUG] Hunk depends on: d7eb24cb : Add server Timezone for parsing LIST responses : added back.
[DEBUG] Hunk depends on: caa3ae14 : Document LIST timestamp restrictions : added back.
[DEBUG] Hunk depends on: 752a551c : NET-561 FTPFile.toFormattedString prints user and group in wrong order : added back.
[DEBUG] Hunk depends on: e68628bb : NET-544 FTPClient.initiateListParsing does not correctly check if parserKey was cached : added back.
[DEBUG] Hunk depends on: d4e49ab1 : Add example config item : added back.
[DEBUG] Hunk depends on: 2e6efa8f : NET-554 Simplify TelnetOptionHandler class hierarchy : added back.
[DEBUG] Hunk depends on: 316dfd40 : NET-558 - getModificationTime(<filename>) returns complete received line including response code : added back.
[DEBUG] Hunk depends on: 41bdc4e2 : Don't show reflection wrapper in stack trace if exception was thrown by called code : added back.
[DEBUG] Hunk depends on: a9d7cc5a : NET-556 Make SubnetInfo.isInRange(int) public : added back.
[DEBUG] Hunk depends on: c3d19247 : Simplify conditional by using switch Add missing value : added back.
[DEBUG] Hunk depends on: 5555226c : NET-550 Default FTPClient bufferSize results in very slow retrieve transfers Fix code in Util#copyStream (also copyReader) that failed to use the proper default for buffer size 0 : added back.
[DEBUG] Hunk depends on: 506d0271 : NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred Rename confusing fields : added back.
[DEBUG] Hunk depends on: aee94d0b : NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred : added back.
[DEBUG] Hunk depends on: d75f0c42 : Added control character processing to TelnetClientExample : added back.
[DEBUG] Hunk depends on: e58cf27d : NET-547 There is a lack of documentation regarding setControlKeepAliveTimeout : added back.
[DEBUG] Hunk depends on: 72ea0f2b : NET-549 - Telnet does not convert LF to CRLF in ASCII mode : added back.
[DEBUG] Hunk depends on: 6e790e42 : Trailing spaces : added back.
[DEBUG] Hunk depends on: 953b0d30 : Format: Add blank line. : added back.
[DEBUG] Hunk depends on: 131a120d : NET-543 telnet: spy read EOL is reversed : added back.
[DEBUG] Hunk depends on: 1a25a4cc : Unnecessary : added back.
[DEBUG] Hunk depends on: 56db2c59 : NET-540 Article#printThread should have option to use any PrintStream : added back.
[DEBUG] Hunk depends on: 422b0fe3 : Test if Javadoc 8 fix works : added back.
[DEBUG] Hunk depends on: b26a3b41 : NET-539 NPE if Threader.thread invoked with empty list or with null array : added back.
[DEBUG] Hunk depends on: 061d70dd : Java 8 Javadoc fixes : added back.
[DEBUG] Hunk depends on: 616cad1f : Java 8 Javadoc fixes : added back.
[DEBUG] Hunk depends on: 001d716d : Java 8 Javadoc fixes : added back.
[DEBUG] Hunk depends on: c83e0eed : Java 8 Javadoc fixes : added back.
[DEBUG] Hunk depends on: f1ebf757 : Java 8 Javadoc fixes : added back.
[DEBUG] Hunk depends on: 29c80bf4 : Javadoc fixes (Java 8) : added back.
[DEBUG] Hunk depends on: e96cf344 : NET-536 IMAP FETCH example : IMAPExportMbox : added back.
[DEBUG] Hunk depends on: 1e7d8d6f : Simplify by standardising on URI for server and login details; use common utility method : added back.
[DEBUG] Hunk depends on: 428bac52 : NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses Add TRUE_CHUNK_LISTENER : added back.
[DEBUG] Hunk depends on: c21fcb1e : Add details of what example does : added back.
[DEBUG] Hunk depends on: f8d82c9b : Unescape >+From_ lines, not just >From_ : added back.
[DEBUG] Hunk depends on: df9480cf : NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses : added back.
[DEBUG] Hunk depends on: 560e40ca : NET-534 Unnecesssary call to getReplyString() if no listeners configured : added back.
[DEBUG] Hunk depends on: a0973e36 : Don't use class fields when local variables are sufficient : added back.
[DEBUG] Hunk depends on: b8ecb3f9 : NET-530 input parameter of org.apache.commons.net.ftp.FTP.__getReply(boolean) is not used : added back.
[DEBUG] Hunk depends on: adfaf3ba : NET-529 SubnetUtils throws exception on valid input : added back.
[DEBUG] Hunk depends on: 41dd3db3 : NET-516 parser problem occurs if the filename contains one or more characters of which the second byte of Shift-JIS code is 0x85 Fix NT parser : added back.
[DEBUG] Hunk depends on: 75129393 : Add regex flags to constructors : added back.
[DEBUG] Hunk depends on: 5c38cf8f : Typo : added back.
[DEBUG] Hunk depends on: d645c73e : Add control encoding option : added back.
[DEBUG] Hunk depends on: 1d830a80 : Add control encoding option : added back.
[DEBUG] Hunk depends on: d6a95a75 : TRailing spaces : added back.
[DEBUG] Hunk depends on: 0b144842 : TRailing spaces : added back.
[DEBUG] Hunk depends on: fbee82eb : NET-526 Avoid greedy matches within a regex : added back.
[DEBUG] Hunk depends on: aa4da9ef : Fix bug in matching numbers without commas Start message numbering at 1 Log message number with length : added back.
[DEBUG] Hunk depends on: a690f593 : Add dates and desc : added back.
[DEBUG] Hunk depends on: 71706889 : NET-520 SubnetUtils("0.0.0.0/0") does not behave as expected Fixed range checking so network and broadcast addresses are treated as unsigned ints : added back.
[DEBUG] Hunk depends on: 1ab1a17f : NET-521 SubnetUtils.SubnetInfo.getAddressCount() can overflow as it returns an int : added back.
[DEBUG] Hunk depends on: 9c352db4 : NET-515 FTPClient sample in class javadoc "bug" : added back.
[DEBUG] Hunk depends on: ad3da80f : NET-519 Apache Commons Net 3.3 has a performance issue : added back.
[DEBUG] Hunk depends on: f2e08e84 : NET-517 FTPClient#reinitialize is package protected : added back.
[DEBUG] Hunk depends on: 7879fd65 : NET-512 Downloading files or members from the AS400 QSYS file system is not supported : added back.
[DEBUG] Hunk depends on: 476395d7 : NET-518 FTPClient#initFeatureMap should not initialize empty map if reply code is 530 : added back.
[DEBUG] Hunk depends on: 9d090d40 : [NET-511] Exception for new SubnetUtils("0.0.0.0/0"). : added back.
[DEBUG] Hunk depends on: 86450a6f : Use IMAP URL to simplify command line Add selector support : added back.
[DEBUG] Hunk depends on: 5e305c6a : NET-514 IMAP APPEND multiple issues in IMapClient. Deprecated unusable append methods. Added new append method, as well as example IMapImportMbox class to make use of it. : added back.
[DEBUG] Hunk depends on: bcba9364 : It's tricky following the range check as one end is exclusive and the other is inclusive Make both ends inclusive and adjust the calling code accordingly : added back.
[DEBUG] src/main/java/examples/mail/IMAPUtils.java : 1e7d8d6f659709d694587261774b03fd93340d0e
[DEBUG] src/main/java/org/apache/commons/net/ftp/parser/MLSxEntryParser.java : 809652a391eca056eebc494d106a4bb0ceefdd59
[DEBUG] src/main/java/org/apache/commons/net/nntp/Threader.java : a0973e365922027c7035adfad827d43485d29120
[DEBUG] src/main/java/examples/telnet/TelnetClientScript.java : c2be3466f161ce090ba100107ae4513d45fc60fe
[DEBUG] src/main/java/org/apache/commons/net/nntp/Article.java : 56db2c59b0c6ff261f22b8e45d4f26b6e5c51f5f
[DEBUG] src/main/java/examples/mail/IMAPImportMbox.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/imap/IMAP.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/ftp/FTPListParseEngine.java : c2be3466f161ce090ba100107ae4513d45fc60fe
[DEBUG] src/main/java/examples/Main.java : inconsistent!
[DEBUG] src/main/java/examples/ftp/FTPClientExample.java : efa533b3a01e42af04770f8c4ccd49fbc369f374
[DEBUG] src/main/java/org/apache/commons/net/util/SSLSocketUtils.java : 65302de24316b21a3955265203c60cf663067743
[DEBUG] src/main/java/org/apache/commons/net/util/SubnetUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/ftp/FTP.java : 9fb2ca62d1cd49e037d14fb35a00d75a6266a8ea
[DEBUG] src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/imap/IMAPSClient.java : 65302de24316b21a3955265203c60cf663067743
[DEBUG] src/main/java/org/apache/commons/net/SocketClient.java : 65302de24316b21a3955265203c60cf663067743
[DEBUG] src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java : f9a8a38405a6c0c269b21318d1e469a7c392be1f
[DEBUG] src/main/java/org/apache/commons/net/smtp/SMTPSClient.java : 65302de24316b21a3955265203c60cf663067743
[DEBUG] src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/ftp/FTPFile.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/pop3/POP3SClient.java : 65302de24316b21a3955265203c60cf663067743
[DEBUG] src/main/java/org/apache/commons/net/ftp/FTPSClient.java : 65302de24316b21a3955265203c60cf663067743
[DEBUG] src/main/java/org/apache/commons/net/imap/IMAPReply.java : df9480cff0a59da345a0389de6d34b077666a171
[DEBUG] src/main/java/examples/mail/IMAPExportMbox.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/net/smtp/SimpleSMTPHeader.java : e8d76ef9c72325b773b9141a8566ce1147c1ebc6
[DEBUG] src/main/java/org/apache/commons/net/ftp/parser/ConfigurableFTPFileEntryParserImpl.java : 75129393c169ef25314223d903426c8be0716a77
[DEBUG] src/main/java/org/apache/commons/net/imap/IMAPClient.java : 5e305c6a2c7d0e3d2dfc9c07a702167f55944373
[DEBUG] src/main/java/org/apache/commons/net/ftp/parser/OS400FTPEntryParser.java : 7879fd6518258118611af31d826bd0791adbb5c2
[DEBUG] src/main/java/org/apache/commons/net/ftp/FTPClient.java : inconsistent!

[DEBUG] Original |H| 269
[DEBUG] Tracker:
[
529ae45a9740ea80df10035ed192e5920c715b32 : []
8ea9034a0018462782f96242bad444bc2fb6d01f : []
e95984b49c80d39de10963b4cb80c016d4c6e734 : []
efc4907643f5dcd6313efcecc3722cf653dba803 : []
bcba9364c60b6b24dc916b1f30af6912c73949e6 : [[org.apache.commons.net.util.SubnetUtils.rangeCheck(int,int,int):UPD,DROP], [org.apache.commons.net.util.SubnetUtils.matchAddress(Matcher):UPD,DROP], [org.apache.commons.net.util.SubnetUtils.calculate(String):UPD,DROP]]
22c63cafa19859560bda1055440eb71008bdbf97 : []
efc34a93b510eb7d736d35523f0d2b9aa41a5469 : []
5e305c6a2c7d0e3d2dfc9c07a702167f55944373 : [[examples.mail.IMAPImportMbox:INS,DROP], [org.apache.commons.net.imap.IMAPClient.DQUOTE_S : String:INS,DROP], [org.apache.commons.net.imap.IMAPClient.append(String,String,String,String):INS,DROP], [org.apache.commons.net.imap.IMAPClient.DQUOTE : char:INS,DROP]]
0a25cf0181718402f85b3dae371e7c73e094caf9 : []
86450a6f5d7a79021c6d9d5aa9cc84ef5209fdbe : [[examples.mail.IMAPImportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPImportMbox.wanted(int,String,BitSet,List<String>):INS,DROP], [examples.mail.IMAPImportMbox.listContains(List<String>,String):INS,DROP], [examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String):UPD,DROP]]
b23d7bf4497c9d8d1d9488fdc562536ce586aa17 : []
ceb54335d722859644f74774554a5a02f100aae3 : []
9d090d40ef488c6c8e0784da877b93a05034e339 : [[org.apache.commons.net.util.SubnetUtils.calculate(String):UPD,DROP]]
588fb6912f20bb5ff72517d10d23be716ec8adee : []
a02169b37f0a9075d04dac69be2f50a0700b12d2 : []
476395d79f05ed4dee56d964d15aeba2928c6fe9 : [[org.apache.commons.net.ftp.FTPClient.initFeatureMap():UPD,DROP]]
7879fd6518258118611af31d826bd0791adbb5c2 : [[org.apache.commons.net.ftp.parser.OS400FTPEntryParser.REGEX : String:UPD,DROP], [org.apache.commons.net.ftp.parser.OS400FTPEntryParser.isNullOrEmpty(String):INS,DROP], [org.apache.commons.net.ftp.parser.OS400FTPEntryParser.parseFTPEntry(String):UPD,DROP]]
f2e08e8429dd35afbc522e72091f11e5c2731bac : [[org.apache.commons.net.ftp.FTPClient.reinitialize():UPD,DROP]]
ad3da80ff944adb1c611fb0c96bd7a1a34aa422e : []
9c352db423c3d0e823e998f4ba46e25e3d426099 : []
e333ff8e0a4b9bc4747fcc084fa02d3e3aea6a54 : []
1ab1a17fd37c377d96c8b41f41178ef1498c7fb5 : [[org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCount():UPD,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.UNSIGNED_INT_MASK : long:INS,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCountLong():INS,DROP]]
717068898a67d03b7c2435e9f16bb65aced68048 : [[org.apache.commons.net.util.SubnetUtils.SubnetInfo.getAddressCountLong():UPD,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.networkLong():INS,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.broadcastLong():INS,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.high():UPD,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.low():UPD,DROP], [org.apache.commons.net.util.SubnetUtils.SubnetInfo.isInRange(int):UPD,DROP]]
430884f69e30e8372f9df611e85e8d11238f7f92 : []
64475d4a2dce48c9eff68abb521ef630b6c91dce : []
a690f593eb2c680f68c62d880e8057fb12e39693 : []
156724c0bbe79aaf50321716c1fde151f89bc4a5 : [[examples.cidr.SubnetUtilsExample.main(String[]):UPD,DROP]]
a8ee23ca86892199ab1c4c4b3555a56602bb9568 : []
cb17db7ce76142641138ac7000821324550a69a4 : []
0a354864b87426e325f099c036c063607ac30be1 : []
b438011027bf76ff8937eded59be790fec4c0d24 : []
8290fefe9418ddf71a325c2ced2e6dea3833cf76 : []
aa4da9ef9ee2eaf452b35eb87b144e7b689f728a : [[examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String,int):INS,DROP], [examples.mail.IMAPImportMbox.process(StringBuilder,IMAPClient,String):DEL,DROP], [examples.mail.IMAPImportMbox.main(String[]):UPD,DROP]]
fbee82eb81b7b5d2fc2cdebc6fd6c29c1ed1d04f : [[org.apache.commons.net.ftp.parser.NetwareFTPEntryParser.REGEX : String:UPD,DROP], [org.apache.commons.net.ftp.parser.VMSFTPEntryParser.REGEX : String:UPD,DROP], [org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser.PRE_PARSE_REGEX : String:UPD,DROP]]
0b144842c98b029f0eadb59678840fa4f0ea2d88 : []
52b9bc03ca2f0ceb289568bee8c9d189d05f4968 : []
d6a95a75649ec86284a0b90524cd26ef16434a87 : []
b4fabe83da5d59144b32bd24001e769a30fd16ab : [[org.apache.commons.net.ntp.NtpV3Impl.setRootDispersion(int):INS,TEST], [org.apache.commons.net.ntp.NtpV3Impl.setDatagramPacket(DatagramPacket):UPD,TEST], [org.apache.commons.net.ntp.TimeInfo.getAddress():INS,DROP], [org.apache.commons.net.ntp.NtpV3Impl.setReferenceId(int):UPD,TEST], [org.apache.commons.net.ntp.NtpV3Impl.setRootDelay(int):INS,TEST], [org.apache.commons.net.ntp.TimeInfo.equals(Object):INS,DROP], [org.apache.commons.net.ntp.TimeInfo.hashCode():INS,DROP], [org.apache.commons.net.ntp.NtpV3Impl.setInt(int,int):INS,TEST], [org.apache.commons.net.ntp.NtpV3Impl.equals(Object):INS,DROP], [org.apache.commons.net.ntp.NtpV3Impl.hashCode():INS,DROP], [org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int):INS,TEST], [org.apache.commons.net.ntp.NtpV3Packet.setVersion(int):UPD,COMP], [org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int):INS,TEST], [org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int):INS,TEST]]
4379a6810227bf2eeba5860b62d42834d62e4413 : []
1d830a80858cc1c402ed8dbaa7eb350a776acadb : [[examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
d645c73eaffe8978f79ac646c7db236898749eb7 : []
5c38cf8ffc91c6df820d5b8114a7e341f51a1745 : []
edfbddb91e437d05b11e29a73aea01a5b58596b3 : [[org.apache.commons.net.ftp.FTPFile.formatType():UPD,DROP]]
bba8edb1af85e47b94882d486b28311e67803642 : []
7ac3c66369d7214ee6ad5d722cd430deb14a662a : []
934ce8f6ab94ff6935a96eeeac32e7f91442ff12 : []
30acc18a7524addab2cbd5fdc44d032b4df56e63 : [[org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.setRegex(String):UPD,DROP], [org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.RegexFTPFileEntryParserImpl(String):UPD,DROP], [org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.setRegex(String,int):INS,DROP], [org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.compileRegex(String,int):INS,DROP]]
75129393c169ef25314223d903426c8be0716a77 : [[org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl.ConfigurableFTPFileEntryParserImpl(String,int):INS,DROP], [org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl.RegexFTPFileEntryParserImpl(String,int):INS,DROP]]
41dd3db34ae2c03f5b5148bcca84653055c0e3eb : [[org.apache.commons.net.ftp.parser.NTFTPEntryParser.NTFTPEntryParser(FTPClientConfig):UPD,DROP]]
d5bceac7a0b8c1a31d46b05a275663c5e45e3028 : [[examples.ntp.SimpleNTPServer:INS,TEST]]
adfaf3ba4254d38ef80aeb5bc6fd0df6fe98380a : [[org.apache.commons.net.util.SubnetUtils.calculate(String):UPD,DROP]]
bfcbea4129bcdf617c0d8b6958b88b34210e907a : []
c499348a671dc6239dfc7634e82f947602bb76dd : []
f8f24b82211049ee11bd5fdc8a9eb8ede58e944f : []
949be1b574052a8a6aca3097b2d533361641f150 : []
b8ecb3f9fab3350ac9fbf2c0585932a804483c36 : [[org.apache.commons.net.ftp.FTP.__getReply(boolean):UPD,DROP]]
a0973e365922027c7035adfad827d43485d29120 : [[org.apache.commons.net.nntp.Threader.idTable : HashMap<String, ThreadContainer>:DEL,DROP], [org.apache.commons.net.nntp.Threader.gatherSubjects():DEL,DROP], [org.apache.commons.net.nntp.Threader.bogusIdCount : int:DEL,DROP], [org.apache.commons.net.nntp.Threader.buildContainer(Threadable,HashMap<String, ThreadContainer>):INS,DROP], [org.apache.commons.net.nntp.Threader.gatherSubjects(ThreadContainer):INS,DROP], [org.apache.commons.net.nntp.Threader.thread(Iterable<? extends Threadable>):UPD,DROP], [org.apache.commons.net.nntp.Threader.buildContainer(Threadable):DEL,DROP], [org.apache.commons.net.nntp.Threader.findRootSet():DEL,DROP], [org.apache.commons.net.nntp.Threader.root : ThreadContainer:DEL,DROP], [org.apache.commons.net.nntp.Threader.findRootSet(HashMap<String, ThreadContainer>):INS,DROP]]
955d69ed6548ad3667aae380b445ca637a352a4f : []
e3b71afb6a456b75c78a8eeb0b16dc359ee6a3b9 : []
560e40cac9cc175986a660802602208f088094b5 : [[org.apache.commons.net.imap.IMAP.fireReplyReceived(int,String):INS,DROP]]
df9480cff0a59da345a0389de6d34b077666a171 : [[org.apache.commons.net.imap.IMAP.__chunkListener : IMAPChunkListener:INS,DROP], [org.apache.commons.net.imap.IMAP.IMAPChunkListener:INS,DROP], [org.apache.commons.net.imap.IMAP.setChunkListener(IMAPChunkListener):INS,DROP], [org.apache.commons.net.imap.IMAP.__getReply(boolean):UPD,DROP], [org.apache.commons.net.imap.IMAPReply.PARTIAL : int:INS,DROP]]
f8d82c9b91cf3da898b5aacac9dc432752377597 : [[examples.mail.IMAPImportMbox.PATFROM : Pattern:INS,DROP], [examples.mail.IMAPImportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPImportMbox.startsWith(String,Pattern):INS,DROP]]
c21fcb1e0152a2c650c6e46fd73b7326ecf37772 : [[examples.mail.IMAPMail.main(String[]):UPD,DROP]]
428bac52f7fc05fc1938b4909fd97821fd8a2e70 : [[org.apache.commons.net.imap.IMAP.TRUE_CHUNK_LISTENER : IMAPChunkListener:INS,DROP]]
5d8fa90d1798b787cb10aa023f1e3ce1e0d0279e : [[org.apache.commons.net.ftp.FTPClient._storeFile(String,String,InputStream):UPD,DROP], [org.apache.commons.net.ftp.FTPClient._retrieveFileStream(String,String):UPD,DROP], [org.apache.commons.net.ftp.FTPClient._storeFileStream(String,String):UPD,DROP], [org.apache.commons.net.ftp.FTPClient._retrieveFile(String,String,OutputStream):UPD,DROP]]
1e7d8d6f659709d694587261774b03fd93340d0e : [[examples.Main.main(String[]):UPD,DROP], [examples.mail.IMAPUtils:INS,DROP], [examples.mail.IMAPMail.main(String[]):UPD,DROP], [examples.mail.IMAPImportMbox.main(String[]):UPD,DROP]]
e96cf344ddaaf7efe4a7e1f3fc79bd2656bdb63a : [[examples.mail.IMAPExportMbox:INS,DROP]]
29c80bf4ece7d06cfd547f9aff8cd7a5b8c23280 : []
7b71e2aef1b0e33f772ccc9467931a212914947b : []
f1ebf757d2789e9950153fb6e8b757f4ef280a1f : []
c83e0eed208453327c8d5ed02d5f264a39374b72 : []
f6ffd04c99e8721b00dedb271fa4601c586d2368 : []
ad8f8f034e3adf903fb2429d2560014805971da0 : []
55ebc7bc2c7ef36f27f3433f581fb300c4093178 : []
2e7f91217d0e468a5aaea946af7cccabaf5d1ca5 : []
001d716da7cee606a74d4671ad252dcb5b2cc72f : []
4db794070fa2f8a20fa761e1849ae4a2ebcdd838 : []
cb0d3f61a6890dd7073baf3df99d9a7695e4bb10 : []
616cad1f99efc4d4bbb2220225e7169355197b3f : [[org.apache.commons.net.nntp.NNTPClient.retrieveArticle(int,ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.retrieveArticle(int):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.retrieveHeader(String,int,int):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo(int,int):UPD,DROP]]
0fb67b407be9b3a0eb36dacb8790eb94029f6a76 : []
cb10f50d16626e5fe0c3f6b177efe234a04cbff5 : [[org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient(String,String):UPD,DROP], [org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient(String):UPD,DROP], [org.apache.commons.net.smtp.AuthenticatingSMTPClient.AuthenticatingSMTPClient():UPD,DROP]]
38141bae57841f3520c27588ee19cd2126c55429 : []
727f55cccfe0310487271a148f185e41f3775c8e : [[org.apache.commons.net.smtp.SMTPSClient.execTLS():UPD,DROP]]
061d70dd783a9150601fc884cc93831d39efd751 : [[org.apache.commons.net.nntp.NNTPClient.retrieveArticleBody(String,ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.selectNextArticle(ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.selectArticle(String,ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.retrieveArticleHeader(String,ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.selectArticle(ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.selectPreviousArticle(ArticlePointer):UPD,DROP], [org.apache.commons.net.nntp.NNTPClient.retrieveArticle(String,ArticlePointer):UPD,DROP]]
b26a3b41b047cdcc37aa65625075fa621d13f66e : [[org.apache.commons.net.nntp.Threader.thread(Threadable[]):UPD,DROP], [org.apache.commons.net.nntp.Threader.thread(Iterable<? extends Threadable>):UPD,DROP]]
422b0fe3d0875bcd86d22cb6bde557247d36a423 : []
56db2c59b0c6ff261f22b8e45d4f26b6e5c51f5f : [[org.apache.commons.net.nntp.Article.printThread(Article):INS,DROP], [org.apache.commons.net.nntp.Article.printThread(Article,PrintStream):INS,DROP], [org.apache.commons.net.nntp.Article.printThread(Article,int,PrintStream):INS,DROP], [org.apache.commons.net.nntp.Article.printThread(Article,int):UPD,DROP]]
e9d6422ba60d537ac0af36f3ae12dd96789c420f : []
de559667c7f469bdc9b44661d8d7ff552efee45d : [[examples.cidr.SubnetUtilsExample.main(String[]):UPD,DROP]]
6077beaaba3f99a30c4100ed0d85017dc0922ce2 : []
1a25a4cca2e39b505cdf772b121bd6e14e1226e2 : []
2fec372148a0d8a77e5aaede4af677a644b1f2e1 : [[examples.nntp.ArticleReader.main(String[]):UPD,DROP]]
4115f80821f408d6bf57651dc9ac6f8a296f8790 : [[examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP):UPD,DROP]]
8fe92b712ea7e5041bbbcbfccb32d6b68d6422f6 : []
1d8d34dbb79a7ef96c5dbc126503cd55b22091ab : []
131a120d7e3fc8cedf6552f9e5fdb4ff933a7386 : [[org.apache.commons.net.telnet.Telnet._spyRead(int):UPD,DROP]]
66d6cbb8e173ddbb968afb714383a6ee6af918a3 : []
953b0d30575adea6f807ab97d7bba155420defef : []
e7e48da660e17bbe5c0f8959c2cb9f6d60555cab : []
b77ce8229b93b02e7acb48b88f904312348005f9 : []
6e790e42d80700474fd942c466dd9013c1056263 : []
9eeb9c1507dd319eddb3ba9e21667d3101f1371b : [[examples.telnet.TelnetClientExample.main(String[]):UPD,DROP]]
72ea0f2be8d01e1559aff14889967c8ccbf1822f : [[org.apache.commons.net.telnet.TelnetOutputStream.write(int):UPD,DROP]]
b62a8b122b41450d34b0caee5285fe0e7930a08b : []
e58cf27d6358a73afeb511a4b57fad7adba3295e : []
d75f0c4266157c351d9df54d877c79eaa0fc3516 : [[examples.telnet.TelnetClientExample.main(String[]):UPD,DROP]]
c5192345305636887229eb7ae0829d621effc2b4 : [[examples.telnet.TelnetClientExample.main(String[]):UPD,DROP]]
aee94d0b51becdc83ea4a74e86b242d0ca3d6f0a : [[org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener):UPD,DROP]]
506d027199a615962ad5df482f077792841a01c1 : [[org.apache.commons.net.io.Util.copyStream(InputStream,OutputStream,int,long,CopyStreamListener,boolean):UPD,DROP], [org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener):UPD,DROP]]
5555226cf8d009ee9fdb9164a919e96d768c529e : [[org.apache.commons.net.io.Util.copyReader(Reader,Writer,int,long,CopyStreamListener):UPD,DROP], [org.apache.commons.net.io.Util.copyStream(InputStream,OutputStream,int,long,CopyStreamListener,boolean):UPD,DROP]]
0f6bc4c0d57f6c0757557a3777ac16e926d5ba27 : []
ebf09d320172073e83a57fa7cfbd2c53f660e1c1 : []
766da3f0491d6442b6fb57049005cb9564dd6b6e : []
c3d192479bc0727ea892f75b3d98f08eaf58ec70 : [[examples.telnet.TelnetClientExample.receivedNegotiation(int,int):UPD,DROP]]
a9d7cc5a03cddeae813b36e1949d373602749e59 : [[org.apache.commons.net.util.SubnetUtils.SubnetInfo.isInRange(int):UPD,DROP]]
f9193d5fb3723eb019635a0be77c01b47fdabf26 : []
22cd80def1f140c95e4ed723d28c00061299ab4f : []
41bdc4e2626a9009b0a0be4d25e182d7929770a8 : [[examples.Main.main(String[]):UPD,DROP]]
dfadc09fb25e22ef01021bb5a062b721f80e26fc : [[examples.mail.IMAPExportMbox.MboxListener.printHash : boolean:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.eol : String:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(File):DEL,DROP], [examples.mail.IMAPExportMbox.READ_TIMEOUT : int:INS,DROP], [examples.mail.IMAPExportMbox.LF : String:INS,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean):INS,DROP], [examples.mail.IMAPExportMbox.EOL_DEFAULT : String:INS,DROP], [examples.mail.IMAPExportMbox.CONNECT_TIMEOUT : int:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.mbox : File:DEL,DROP], [examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP):UPD,DROP]]
a272cd9746694b2261e6a313d6b0cc3e1e6b3dc7 : []
316dfd409563f1396521798aefab04ce7999f84f : [[org.apache.commons.net.ftp.FTPClient.getModificationTime(String):UPD,DROP]]
2e6efa8f0eff04d95fc55fe0c3bd0f78a72bbc1b : [[org.apache.commons.net.telnet.WindowSizeOptionHandler.answerSubnegotiation(int[],int):DEL,DROP], [org.apache.commons.net.telnet.SuppressGAOptionHandler.startSubnegotiationLocal():DEL,DROP], [org.apache.commons.net.telnet.SimpleOptionHandler.answerSubnegotiation(int[],int):DEL,DROP], [org.apache.commons.net.telnet.EchoOptionHandler.startSubnegotiationRemote():DEL,DROP], [org.apache.commons.net.telnet.TerminalTypeOptionHandler.startSubnegotiationRemote():DEL,DROP], [org.apache.commons.net.telnet.TelnetOptionHandler.startSubnegotiationRemote():UPD,DROP], [org.apache.commons.net.telnet.SimpleOptionHandler.startSubnegotiationRemote():DEL,DROP], [org.apache.commons.net.telnet.SuppressGAOptionHandler.startSubnegotiationRemote():DEL,DROP], [org.apache.commons.net.telnet.EchoOptionHandler.answerSubnegotiation(int[],int):DEL,DROP], [org.apache.commons.net.telnet.TerminalTypeOptionHandler.startSubnegotiationLocal():DEL,DROP], [org.apache.commons.net.telnet.SimpleOptionHandler.startSubnegotiationLocal():DEL,DROP], [org.apache.commons.net.telnet.EchoOptionHandler.startSubnegotiationLocal():DEL,DROP], [org.apache.commons.net.telnet.WindowSizeOptionHandler.startSubnegotiationRemote():DEL,DROP], [org.apache.commons.net.telnet.TelnetOptionHandler.answerSubnegotiation(int[],int):UPD,DROP], [org.apache.commons.net.telnet.SuppressGAOptionHandler.answerSubnegotiation(int[],int):DEL,DROP], [org.apache.commons.net.telnet.TelnetOptionHandler.startSubnegotiationLocal():UPD,DROP]]
d4e49ab13c6682ab8811d69546682c4098a4761d : []
e68628bb255ff74b33ae19a37e17058806d9592a : [[org.apache.commons.net.ftp.FTPClient.getEntryParser():INS,DROP], [org.apache.commons.net.ftp.FTPClient.__createParser(String):INS,DROP], [org.apache.commons.net.ftp.FTPClient.initiateListParsing(String,String):UPD,DROP]]
752a551c95abe091bd69a4c68c8f9d900e5e3b67 : [[org.apache.commons.net.ftp.FTPFile.toFormattedString():UPD,DROP]]
1a30a36b68eb05ce7e33070d17dfd746d463bc53 : []
b8f3226deacb7b4f969875c88670af85884dc531 : []
4c63aa0a52823e2fd3e4c18d72a27e82f9c8bcf6 : [[org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.defaultDateFormat : SimpleDateFormat:UPD,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.recentDateFormat : SimpleDateFormat:UPD,DROP]]
1eeecab0f038a35b93faf57e0a9b85b733285a16 : [[org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar):UPD,DROP], [org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser.parseFTPEntry(String):UPD,DROP]]
caa3ae14b9bf2a745e495d7cfbee8fe857993572 : []
487861257d138ed7b0eedeed48bca28c7d0c4134 : []
182a19bcc535c334df6832d91169ca60cb826f18 : []
9a06c433d25aa93fc8e192e1f3310b77cf61acb0 : []
d7eb24cbc1fbdfd09ac61daf4b78022c8641aec3 : [[examples.ftp.FTPClientExample.USAGE : String:UPD,DROP], [examples.ftp.FTPClientExample.main(String[]):UPD,DROP]]
efa533b3a01e42af04770f8c4ccd49fbc369f374 : [[examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [examples.ftp.FTPClientExample.parseGMTdate(String):INS,DROP], [examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
fdf3d2c2a275f384fa6361f705f73bfdd0a29b88 : []
17ecff749acf32ddeb8c8e9883491503b8d953a0 : [[org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String):UPD,DROP]]
3ac7c4c9da9c15f3b2762ec6786fdf7f46a76f75 : [[org.apache.commons.net.ftp.FTPFile.toFormattedString():UPD,DROP]]
fd10c3d7db77ae3274c89c8fa926c0b5ecda520d : [[examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
d219afb072c0786e1195479d9bf1731ad8c6da1f : [[org.apache.commons.net.ftp.FTPFile.toFormattedString(String):INS,DROP], [org.apache.commons.net.ftp.FTPFile.toFormattedString():UPD,DROP]]
61d2ab41b1d40984be06fbff282c89997f2952e5 : [[examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
809652a391eca056eebc494d106a4bb0ceefdd59 : [[org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String):UPD,DROP], [org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String):INS,DROP], [org.apache.commons.net.ftp.FTPClient.mdtmFile(String):INS,DROP]]
e2c979909b4486962e5fab150e615f66bd46164c : [[examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [examples.ftp.FTPClientExample.parseGMTdate(String):DEL,DROP]]
bfac1aec2436cfb14e2ce6dfdca5b71ea7149182 : []
a4a8f826376808e955a226fc7415a30dfa04ff34 : [[org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String):UPD,DROP]]
c422412d32e14e8afa259124b75f864b4c8833be : [[org.apache.commons.net.ftp.parser.MLSxEntryParser.parseFTPEntry(String):UPD,DROP], [org.apache.commons.net.ftp.parser.MLSxEntryParser.parseGMTdateTime(String):UPD,DROP]]
76fa83ce78b09a69418a028402eb3011fee5298c : []
fb85a39f461baa097aad5fbe026673b190574a10 : [[org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser.parseFTPEntry(String):UPD,DROP]]
a9a7910409756eeb5aeeb729ee612bad014a7edd : []
be045051b6193d80af768f0dbc3caf35f78838bd : []
19783e58f789c44a5595b8f50e14842121e0dbfa : [[org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(SimpleDateFormat,Calendar):INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar):UPD,DROP]]
b262d06a27c3d1e7f0b970ef86b16a6270f9119d : [[org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.indexOf(int):INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.getEntry(SimpleDateFormat):INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(int,Calendar):INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.recentDateSmallestUnitIndex : int:INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setRecentDateFormat(String,DateFormatSymbols):INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.configure(FTPClientConfig):UPD,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.parseTimestamp(String,Calendar):UPD,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(SimpleDateFormat,Calendar):DEL,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.FTPTimestampParserImpl():UPD,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setDefaultDateFormat(String):DEL,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.CALENDAR_UNITS : int[]:INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.defaultDateSmallestUnitIndex : int:INS,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setRecentDateFormat(String):DEL,DROP], [org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setDefaultDateFormat(String,DateFormatSymbols):INS,DROP]]
59f559ad79c588b648e14950af68e4436e37705d : [[org.apache.commons.net.ftp.parser.FTPTimestampParserImpl.setPrecision(int,Calendar):UPD,DROP]]
cb5b5c3d7c87b141078fafe1e19571be8318add8 : []
4b325fe9ccc7dc239fc338dbb97baeb5cbfee3c8 : []
0c0d1df4c310e989855557ec1f22a59f0bc51266 : []
50fe5b9dc521e0833e62df1f2a1b917c9c26105b : []
306f43c22f3c087e7f541f0083b60068cb8663cf : []
bc21e8bde6b30b563f4e6c7d321adf128855de9f : []
32f3b815c9340c9d72e4c65de37488b6a8cdebbf : []
c2be3466f161ce090ba100107ae4513d45fc60fe : [[org.apache.commons.net.ftp.FTPListParseEngine.saveUnparseableEntries : boolean:INS,DROP], [org.apache.commons.net.ftp.FTPClient.initiateMListParsing(String):UPD,DROP], [examples.ftp.FTPClientExample.USAGE : String:UPD,DROP], [org.apache.commons.net.ftp.FTPListParseEngine.FTPListParseEngine(FTPFileEntryParser,FTPClientConfig):INS,DROP], [org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPFileEntryParser,String):UPD,DROP], [org.apache.commons.net.ftp.FTPFile.isValid():INS,DROP], [org.apache.commons.net.ftp.FTPFile.toFormattedString(String):UPD,DROP], [org.apache.commons.net.ftp.FTPListParseEngine.FTPListParseEngine(FTPFileEntryParser):UPD,DROP], [org.apache.commons.net.ftp.FTPFile.FTPFile():UPD,DROP], [examples.telnet.TelnetClientScript:INS,DROP], [examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [org.apache.commons.net.ftp.FTPClientConfig.getUnparseableEntries():INS,DROP], [org.apache.commons.net.ftp.FTPListParseEngine.getPrevious(int):UPD,DROP], [org.apache.commons.net.ftp.FTPListParseEngine.getNext(int):UPD,DROP], [org.apache.commons.net.ftp.FTPFile.FTPFile(String):INS,DROP], [org.apache.commons.net.ftp.FTPClientConfig.saveUnparseableEntries : boolean:INS,DROP], [org.apache.commons.net.ftp.FTPClientConfig.setUnparseableEntries(boolean):INS,DROP], [org.apache.commons.net.ftp.FTPListParseEngine.getFiles(FTPFileFilter):UPD,DROP]]
c0f6da1ece33fea185edb4d08636aecf05a9104c : [[examples.telnet.TelnetClientScript:DEL,DROP]]
375a63b1b624af86e5a678a419cf7b1f29c82221 : []
330a6717c673a69996160846513d74f6bb096e3c : [[org.apache.commons.net.ftp.FTPFile.hasPermission(int,int):UPD,DROP], [examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [org.apache.commons.net.ftp.FTPFile.toFormattedString(String):UPD,DROP]]
b01fe9bf2a54859d6e2d908d04aa760cf37b4674 : [[examples.mail.IMAPExportMbox.MboxListener.lastFetched : String:INS,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPExportMbox.MboxListener.printMarker : boolean:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP):UPD,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean):DEL,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean,boolean):INS,DROP]]
231850ff0bfbf6883b74b9a2cedb02d30fd6b931 : [[examples.mail.IMAPExportMbox.MboxListener.MboxListener(File,String,boolean,boolean):DEL,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPExportMbox.MboxListener.bw : BufferedWriter:UPD,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(BufferedWriter,String,boolean,boolean):INS,DROP]]
90124986fa98f10b88d0676bfaa612db9d152a2b : [[examples.mail.IMAPExportMbox.main(String[]):UPD,DROP]]
e8605ab77b66d87578f89e761fe475a6e2b0ae62 : []
d225362cb1753ac98af81477ad4d318e783500e8 : [[examples.mail.IMAPExportMbox.main(String[]):UPD,DROP]]
20a4cc7811893962b8e21fdf2f52edcff611e803 : [[examples.mail.IMAPExportMbox.MboxListener.checkSequence : boolean:INS,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPExportMbox.PATSEQ : Pattern:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP):UPD,DROP], [examples.mail.IMAPExportMbox.PATSEQ_SEQUENCE_GROUP : int:INS,DROP], [examples.mail.IMAPExportMbox.PATID_DATE_GROUP : int:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(BufferedWriter,String,boolean,boolean,boolean):INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.lastSeq : long:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.MboxListener(BufferedWriter,String,boolean,boolean):DEL,DROP]]
5337e4e7a559293c8c18adaae3d89f0bd150f821 : [[examples.mail.IMAPExportMbox.MboxListener.missingIds : List<String>:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP):UPD,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP]]
0e2f4d6f33eb3b74142e1bc2f53dc0d292191b83 : [[examples.mail.IMAPExportMbox.main(String[]):UPD,DROP]]
e0aba3e6ccb8166991907ec82e38a58378af9b12 : [[examples.mail.IMAPExportMbox.PATEXISTS : Pattern:INS,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPExportMbox.MboxListener.chunkReceived(IMAP):UPD,DROP], [examples.mail.IMAPExportMbox.matches(String,Pattern,int):INS,DROP], [examples.mail.IMAPExportMbox.PATTEMPFAIL : Pattern:INS,DROP], [examples.mail.IMAPExportMbox.MboxListener.lastSeq : long:UPD,DROP]]
7caaa91a86e1cf827a6fde2e5a04aed2859ac980 : [[examples.Main.scanForClasses(int,File,Map<String, String>,boolean):INS,DROP], [examples.Main.processFileName(String,Map<String, String>,boolean):INS,DROP], [examples.Main.main(String[]):UPD,DROP]]
1bde5cd5bfd78ce4f0b39e66439966688380a0b9 : [[examples.ftp.FTPClientExample.main(String[]):UPD,DROP], [examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
896ccef9c7c6710ad84d41cd7ab4b4e696b56cb3 : []
5e34e05fd8e4ce1204e19eaf34e55aa95df4c5c0 : []
021922ee87667f568d17a94513169e17f3302742 : []
9fb2ca62d1cd49e037d14fb35a00d75a6266a8ea : [[org.apache.commons.net.ftp.FTPClient._connectAction_(Reader):INS,DROP], [org.apache.commons.net.ftp.FTP._connectAction_():UPD,DROP], [org.apache.commons.net.ftp.FTPHTTPClient.connect(String,int):UPD,DROP], [org.apache.commons.net.ftp.FTP._connectAction_(Reader):INS,DROP], [org.apache.commons.net.ftp.FTPHTTPClient.tunnelHandshake(String,int,InputStream,OutputStream):UPD,DROP], [org.apache.commons.net.ftp.FTPClient._connectAction_():UPD,DROP]]
513522319bf5488ac4475b9e31f2e515ad1b1112 : []
dd5967521fcf984c7261220e6b2dbba126be9211 : []
b158a367e92fcdcfe517377039b4fd8765a1df5d : []
bfc2d81a8b058c164fdec35a4e031060960ef98f : []
4632dbae87757ebc9da310ed929220944d09c8dd : []
03f251f0fd62a84a56d4c5b26f60b6a746870299 : []
0a3c3449fe484d17b04516d562226337c1b10255 : [[examples.Main.fromJar():INS,DROP], [examples.Main.processFileName(String,Map<String, String>,boolean):DEL,DROP], [examples.Main.scanForClasses(int,File,Map<String, String>,boolean):DEL,DROP], [examples.Main.main(String[]):UPD,DROP]]
d822758c2d452f6cc75014bb773f9badc3d8fb07 : []
759f29fde801d8eddd93ff1de7537e7f6e8aca6c : []
33df0280d9cbe0f2ad2ec3bceea0bebdf1eaa43c : [[examples.Main.main(String[]):UPD,DROP]]
d6dda0c126be87aa2e1be85404d9fbc87856c467 : []
28232bf93f41ddc8dfa5bac219a1891ac1dadda3 : []
b43ac62dccc9b4ce2033709aab0a78e1171f3072 : [[org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String:UPD,DROP]]
85b6e11636bc561ac4a866ece232ddea65b2f39a : []
ff1547720ec4b433091745b33d1393a19b46538f : [[org.apache.commons.net.ftp.parser.UnixFTPEntryParser.parseFTPEntry(String):UPD,DROP], [org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String:UPD,DROP]]
f9a8a38405a6c0c269b21318d1e469a7c392be1f : [[org.apache.commons.net.ftp.parser.UnixFTPEntryParser.parseFTPEntry(String):UPD,DROP], [org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig,boolean):INS,DROP], [org.apache.commons.net.ftp.parser.UnixFTPEntryParser.REGEX : String:UPD,DROP], [org.apache.commons.net.ftp.parser.UnixFTPEntryParser.trimLeadingSpaces : boolean:INS,DROP], [org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig):UPD,DROP]]
3426c6e089b41243648033f9cd9ed6dcbb0968bb : []
1762d632b7c343fc524e1e6495babeaf2b9b8550 : []
50a124bf76c36d47d797306ccadcb3d97c43caca : [[org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createOS400FTPEntryParser(FTPClientConfig):UPD,DROP], [org.apache.commons.net.ftp.FTPClientConfig.SYST_UNIX_TRIM_LEADING : String:INS,DROP], [org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createNTFTPEntryParser(FTPClientConfig):UPD,DROP], [org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory.createFileEntryParser(String,FTPClientConfig):UPD,DROP], [org.apache.commons.net.ftp.parser.UnixFTPEntryParser.UnixFTPEntryParser(FTPClientConfig):UPD,DROP]]
8fadf0018dfdee609636ac74d520609bba8ce165 : []
966226bd2af09ecfdd470d049a9ea1075dc4289a : [[org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo(int):UPD,DROP], [org.apache.commons.net.ftp.FTPClientConfig.SYST_UNIX_TRIM_LEADING : String:UPD,DROP]]
5469e099004732b43b0634ccf633bf8cc1b2356e : []
00104e73df37ae873fd6a6b2b9e0b69bd940ec25 : []
724d534bd43360af1858d981710b614f01179a7d : []
cd2d049fac6301077e0e5f441edb55bd71930448 : [[org.apache.commons.net.ntp.TimeStamp.decodeNtpHexString(String):UPD,DROP], [org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int):UPD,TEST], [org.apache.commons.net.ntp.TimeStamp.TimeStamp(String):UPD,TEST]]
e49f18518185181905d9690bbe59cf8369b9d8f4 : []
e27c3821ee4bcf66c47ee12ebb094ff58ec1e1fb : []
7a4e64b07cc69beb5fb1320ab2d66d0e7b9fa9ce : []
06341a39a96249f2b1f37aaa61303d36321d9bc0 : []
c0277c63ac45e691270e5c7b41844ccaec02bc47 : [[org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int):DEL,DROP], [org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int):DEL,DROP], [examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long):UPD,TEST], [org.apache.commons.net.ntp.NtpV3Packetbis:INS,TEST], [org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int):DEL,DROP]]
92e5980b81abbc34a81fe4b07596253653002c48 : [[org.apache.commons.net.ntp.NtpV3Packet.setRootDelay(int):INS,COMP], [org.apache.commons.net.ntp.NtpV3Packetbis:DEL,DROP], [org.apache.commons.net.ntp.NtpV3Packet.setPrecision(int):INS,COMP], [examples.ntp.SimpleNTPServer.handlePacket(DatagramPacket,long):UPD,TEST], [org.apache.commons.net.ntp.NtpV3Packet.setRootDispersion(int):INS,COMP]]
4df00cefbe250d252184997a352bf29b3f9f939b : []
0d157e15345c98158968825e1ea938c1c7be5929 : []
e36f8917c52a814ad36a14ca95fca8b67042d4fc : []
8112b37937ba77d2a60268e6713d8c3e91a48d03 : []
ad6853f56fac69b0479b164c4920e8d7b1b9ac7a : []
16c748d8dcdedfa1f6bab29fb50e4013e37bd82f : []
7de681849b0cb509f3e21c70714148250706e475 : []
6eda86daf5dc2668edf4e352b6eed7cbe0dff5e5 : []
483a6a52e0cda2fb9127bcb4e97b02b041b0d5ae : []
a31fe81abad3509c3421f3084326a5d3f3606012 : [[examples.ntp.SimpleNTPServer.SimpleNTPServer(int):UPD,TEST], [examples.ntp.SimpleNTPServer.connect():UPD,TEST]]
45113dcfed17aa8cfb9777bbce366a1fe9af65df : []
768dd780073d8f8723f93acbd772eca9ae92d64e : []
43235dbbb644cd3c0c286d8dba953f460e90944f : []
0b32962c573198d3e90542f22f686a37b93d3710 : []
d12b5c371453a495da726b05913b89945712047e : []
3c52e5343a37893408272d4aa6d5f488a2247d4f : []
e17d89b3b79c71599c5ffee0b1b01bb6b550e2bb : []
aa36b3b50d0e229468c496d7de2e983632332323 : []
5df3f18bc8abf3a03bdd06443ead128eba2350e8 : []
f6d1a4d9d0fa98e275bef1a65cd40374bfe751be : [[org.apache.commons.net.ftp.FTPHTTPClient._openDataConnection_(String,String):UPD,DROP], [org.apache.commons.net.ftp.FTPHTTPClient.connect(String,int):UPD,DROP]]
fa0e3dd534bc53e5923327dfc8dc1d39fe369586 : []
ff519f3d36dc3b4751a06e47def7f7551cc121fe : [[examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
12f145e46190bea7d100aae6ab45ea0e486be12c : []
53468c6803842a1c699f16b3cd7e4c935e60de2d : [[examples.ftp.FTPClientExample.USAGE : String:UPD,DROP]]
55758ab02604154cab4d44f637358625f2fd897d : [[examples.ftp.FTPClientExample.USAGE : String:UPD,DROP], [examples.ftp.FTPClientExample.main(String[]):UPD,DROP]]
4450add7927f8fc8b6ef630af09ab5bc2aa44b0e : [[org.apache.commons.net.ftp.FTPClient.__createParser(String):UPD,DROP], [org.apache.commons.net.ftp.FTPClientConfig.FTPClientConfig(String,FTPClientConfig):INS,DROP], [org.apache.commons.net.ftp.FTPClientConfig.FTPClientConfig(String,String,String,String,String,String,boolean,boolean):INS,DROP]]
f5304f2e0f67363505052b93fb6e979e6eeabda2 : []
31044ba56dc378d68c04334b66344a718116821a : [[org.apache.commons.net.ftp.FTPClient.getModificationTime(String):UPD,DROP]]
c9a1c7d0ea6846f4a19b596b4aa1fceec66a8b3f : []
452081a36e6e649ec8958f74a780ddab52e74644 : []
6512d665aab8b9c5760043b64cced13134c5ef10 : []
9524915162881d999befa134a42969bb7a02cda0 : []
f1bb5ed022dfd002221d6e41b1864381d5bf68d4 : []
06adc0bd7e8774da1f02d621b58d01acef940fd2 : []
4ca6aa3f287b1765cc1532f5fadc01b145911a61 : []
65302de24316b21a3955265203c60cf663067743 : [[org.apache.commons.net.SocketClient.connect(InetAddress,int,InetAddress,int):UPD,DROP], [org.apache.commons.net.pop3.POP3SClient.setHostnameVerifier(HostnameVerifier):INS,DROP], [org.apache.commons.net.SocketClient.disconnect():UPD,DROP], [org.apache.commons.net.ftp.FTPSClient.getHostnameVerifier():INS,DROP], [org.apache.commons.net.SocketClient.connect(InetAddress):UPD,DROP], [org.apache.commons.net.smtp.SMTPSClient.setHostnameVerifier(HostnameVerifier):INS,DROP], [org.apache.commons.net.SocketClient.connect(InetAddress,int):UPD,DROP], [org.apache.commons.net.SocketClient._hostname_ : String:INS,DROP], [org.apache.commons.net.ftp.FTPSClient.setEndpointCheckingEnabled(boolean):INS,DROP], [org.apache.commons.net.imap.IMAPSClient.tlsEndpointChecking : boolean:INS,DROP], [org.apache.commons.net.smtp.SMTPSClient.tlsEndpointChecking : boolean:INS,DROP], [org.apache.commons.net.ftp.FTPSClient.isEndpointCheckingEnabled():INS,DROP], [org.apache.commons.net.imap.IMAPSClient.performSSLNegotiation():UPD,DROP], [org.apache.commons.net.imap.IMAPSClient.setHostnameVerifier(HostnameVerifier):INS,DROP], [org.apache.commons.net.smtp.SMTPSClient.setEndpointCheckingEnabled(boolean):INS,DROP], [org.apache.commons.net.pop3.POP3SClient.isEndpointCheckingEnabled():INS,DROP], [org.apache.commons.net.SocketClient.connect(String):UPD,DROP], [org.apache.commons.net.SocketClient.connect(String,int):UPD,DROP], [org.apache.commons.net.imap.IMAPSClient.getHostnameVerifier():INS,DROP], [org.apache.commons.net.pop3.POP3SClient.hostnameVerifier : HostnameVerifier:INS,DROP], [org.apache.commons.net.imap.IMAPSClient.isEndpointCheckingEnabled():INS,DROP], [org.apache.commons.net.pop3.POP3SClient.tlsEndpointChecking : boolean:INS,DROP], [org.apache.commons.net.smtp.SMTPSClient.hostnameVerifier : HostnameVerifier:INS,DROP], [org.apache.commons.net.ftp.FTPSClient.tlsEndpointChecking : boolean:INS,DROP], [org.apache.commons.net.smtp.SMTPSClient.isEndpointCheckingEnabled():INS,DROP], [org.apache.commons.net.smtp.SMTPSClient.performSSLNegotiation():UPD,DROP], [org.apache.commons.net.imap.IMAPSClient.setEndpointCheckingEnabled(boolean):INS,DROP], [org.apache.commons.net.pop3.POP3SClient.performSSLNegotiation():UPD,DROP], [org.apache.commons.net.util.SSLSocketUtils:INS,DROP], [org.apache.commons.net.imap.IMAPSClient.hostnameVerifier : HostnameVerifier:INS,DROP], [org.apache.commons.net.SocketClient.connect(String,int,InetAddress,int):UPD,DROP], [org.apache.commons.net.pop3.POP3SClient.setEndpointCheckingEnabled(boolean):INS,DROP], [org.apache.commons.net.smtp.SMTPSClient.getHostnameVerifier():INS,DROP], [org.apache.commons.net.SocketClient.SocketClient():UPD,DROP], [org.apache.commons.net.ftp.FTPSClient.hostnameVerifier : HostnameVerifier:INS,DROP], [org.apache.commons.net.pop3.POP3SClient.getHostnameVerifier():INS,DROP], [org.apache.commons.net.ftp.FTPSClient.sslNegotiation():UPD,DROP], [org.apache.commons.net.ftp.FTPSClient.setHostnameVerifier(HostnameVerifier):INS,DROP]]
d4267c5a70f24b96bb96a2e1d3695cfaeaca91ac : []
414018941927a4b55b1d730fd9091e14eb1feb42 : []
bb74e81c29138ee7d6770001d454478e0861a16f : []
16b656fc57d73550ec04e8d253238a10d2255a70 : []
ecf65484f995bdc4a3ce7dfd70909998f0e3c34d : []
cf4d206908fa811231fe1b581b6337a17108548b : []
5e3fd2b36e87e86dabb0649f867d464b68dbe61b : []
05111daef93db06cdccffbdeb475715413a01d67 : []
0177f90032a1a68496ae1e566697c1608fc8cb95 : []
642158f72b2534e29b0db024e761118c67eae3eb : []
83b950724307dc1551a7325961be1da89acbabf0 : [[org.apache.commons.net.smtp.SimpleSMTPHeader.toString():UPD,DROP], [org.apache.commons.net.smtp.SimpleSMTPHeader.SimpleSMTPHeader(String,String,String):UPD,DROP]]
a19fae7262f9212ada7acde170ded85a12720705 : []
77a30c218d8b1505a9ed450e62625321bdf000fb : []
e8d76ef9c72325b773b9141a8566ce1147c1ebc6 : [[org.apache.commons.net.smtp.SimpleSMTPHeader.hasHeaderDate : boolean:INS,DROP], [org.apache.commons.net.smtp.SimpleSMTPHeader.addHeaderField(String,String):UPD,DROP], [org.apache.commons.net.smtp.SimpleSMTPHeader.toString():UPD,DROP]]
ab2fd4f98af4d34de1a5ed28c6424c0686f05ed4 : [[examples.Main.main(String[]):UPD,DROP], [examples.mail.IMAPImportMbox.main(String[]):UPD,DROP], [examples.mail.IMAPExportMbox.main(String[]):UPD,DROP]]
9bb6841f0f2a265450a4057bc23f75f84c11d0de : []
8447d34d37a36fb9b0e360ccac9a6eb1c86224df : []
15d7caf240a54109db26e1d7cbd5c441980ba4a5 : []
99281093d6d949001f1324d5113438aff003225b : []
7b8b5e5af8a117aae3e04b81d42ac4995c236527 : []
6f9783395bf72fab0b69031791f73c25fe0af4b5 : []
d0d31602813372b7d477004dae58ee6244fcb68a : []
abd67115a4d48846c43601b3aa26d96727607165 : []
]
[OUTPUT] Results:
DROP: abd67115 : Fix dates and versions
DROP: d0d31602 : Drop unnecessary README
DROP: 6f978339 : RATs - forgot AL header
DROP: 7b8b5e5a : Fix up site URL
DROP: 99281093 : Recent changes
DROP: 15d7caf2 : Latest versions
DROP: 8447d34d : Doc
DROP: 9bb6841f : Checkstyle: Line length
DROP: ab2fd4f9 : Checkstyle: Line length
DROP: e8d76ef9 : NET-581 SimpleSMTPHeader fails to supply the required Date: header
DROP: 77a30c21 : SImplify
DROP: a19fae72 : NET-582 SimpleSMTPHeader does not allow for missing To: field
DROP: 83b95072 : NET-582 SimpleSMTPHeader does not allow for missing To: field
DROP: 642158f7 : Javadoc
DROP: 0177f900 : NET-580 SMTPClient.sendSimpleMessage() silently ignores failed recipients Update Javadoc
DROP: 05111dae : RedundantThrows no longer supported
DROP: 5e3fd2b3 : Empty Catch Blocks
DROP: cf4d2069 : Latest checkstyle tool
DROP: ecf65484 : Moved @author entries to pom
DROP: 16b656fc : Missing @return
DROP: bb74e81c : These are now fixed, so make them errors
DROP: 41401894 : Redundant spaces
DROP: d4267c5a : Redundant spaces
DROP: 65302de2 : NET-579 SSL/TLS SocketClients do not verify the hostname against the certificate
DROP: 4ca6aa3f : Checkstyle fixes
DROP: 06adc0bd : Always use blocks
DROP: f1bb5ed0 : Qualifier order
DROP: 95249151 : Qualifier order
DROP: 6512d665 : Qualifier order
DROP: 452081a3 : Qualifier order
DROP: c9a1c7d0 : Move assembly to standard location
DROP: 31044ba5 : NET-558 - getModificationTime(<filename>) returns complete received line including response code and EOL
DROP: f5304f2e : CP37 => CP38
DROP: 4450add7 : NET-576 Allow FTPClient to use SYST response if system type is not specified in configuration
DROP: 55758ab0 : NET-575 FTPClientExample should support setting the date format
DROP: 53468c68 : Order
DROP: 12f145e4 : Add test for NET-573
DROP: ff519f3d : Add hint
DROP: fa0e3dd5 : No need for fields to be mutable or package-visible
DROP: f6d1a4d9 : NET-538 - FTPHTTPClient should use socket factory to create sockets
DROP: 5df3f18b : NET-570 - empty description tag causes RDF parser fail
DROP: aa36b3b5 : Each Version must be in its own release section
DROP: e17d89b3 : CGI must be svn:executable *
DROP: 3c52e534 : Javadoc
DROP: d12b5c37 : No longer needed, as excluded in parent pom
DROP: 0b32962c : Update to CP37
DROP: 43235dbb : Synch release notes
DROP: 768dd780 : Happy New Year
DROP: 45113dcf : Tab police
TEST: a31fe81a : Checkstyle
DROP: 483a6a52 : Use simpler way of parsing the compiler target
DROP: 6eda86da : Use constant for port number Use different ports for tests that might run consecutively
DROP: 7de68184 : Looks like there was a corrupt rat in my local repo; deleted it and it all works again now
DROP: 16c748d8 : Fix NPE in RAT Only display current version in jira report
DROP: ad6853f5 : Remove unnecessary overrides
DROP: 8112b379 : Next version is 3.4
DROP: e36f8917 : Should not have been committed
DROP: 0d157e15 : AL header
DROP: 4df00cef : Document why Clirr errors are OK
TEST: 92e5980b : revert r1652867
TEST: c0277c63 : NET-525 Added missing set methods on NTP class and interface Restore compatibility
DROP: 06341a39 : Javadoc
DROP: 7a4e64b0 : Drop examples from CLI invocation of clirr:clirr
HUNK: e27c3821 : Javadoc @since
DROP: e49f1851 : Should be OK with Javadoc 8 now (phew!)
TEST: cd2d049f : Javadoc 8 fixes
HUNK: 724d534b : Javadoc 8 fixes
HUNK: 00104e73 : Javadoc
HUNK: 5469e099 : Empty/unnecessary <p> tags
HUNK: 966226bd : Javadoc
HUNK: 8fadf001 : Javadoc
HUNK: 50a124bf : NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names
DROP: 1762d632 : Test forced trimming
DROP: 3426c6e0 : expected value comes before actual value
HUNK: f9a8a384 : NET-566 UnixFTPEntryParser Drops Leading Spaces from File Names Add option to parser to not skip leading spaces TODO make this the default but still allow reversion
HUNK: ff154772 : Merge filename processing into single group Always process link type (no functional change)
DROP: 85b6e116 : docs
HUNK: b43ac62d : No code change; split RE so separators are more clearly identified
DROP: 28232bf9 : Clarify what setControlEncoding does
DROP: d6dda0c1 : Allow for broken Animal Sniffer 1.13
DROP: 33df0280 : Allow for missing properties file
DROP: 759f29fd : Move properties to correct place
DROP: d822758c : Replace Java 6+ method call
HUNK: 0a3c3449 : Simplify examples/Main - use predefined properties file to define aliases
DROP: 03f251f0 : Fix up Maven warning - cannot have two copies of build helper in main build
DROP: 4632dbae : Automatically generate the correct Animal Sniffer signature name
DROP: bfc2d81a : Trial implementation of animal-sniffer
DROP: b158a367 : Update to latest versions of plugins and dependencies
DROP: dd596752 : Revert unintentional commit
DROP: 51352231 : Document
HUNK: 9fb2ca62 : NET-552 SocketTimeoutException connecting a FTP server via an HTTP Proxy
DROP: 021922ee : Document what looks like code duplication
DROP: 5e34e05f : Fails on Continuum
DROP: 896ccef9 : Allow use of exec:java to launch examples from classpath
DROP: 1bde5cd5 : Improved error reporting
HUNK: 7caaa91a : Enable alias mechanism to work from the classpath Better output when class not found
DROP: e0aba3e6 : Implement retry for temporary failures
DROP: 0e2f4d6f : Docs
DROP: 5337e4e7 : Print the missing ids at the end
DROP: 20a4cc78 : Check sequence of responses to detect missed messages
DROP: d225362c : Better handling of multiple item names
DROP: e8605ab7 : Javadoc
DROP: 90124986 : Better handling of protocol commands
DROP: 231850ff : Allow overwrite of mbox file
DROP: b01fe9bf : Add a bit more debug when requests fail
DROP: 330a6717 : Better handling of invalid entries; Javadoc
DROP: 375a63b1 : Javadoc
DROP: c0f6da1e : Mistakenly committed
HUNK: c2be3466 : NET-528 FTPListParseEngine does not provide access to raw responses N.B. TelnetClientScript did not belong in this commit; removed in r1644803
DROP: 32f3b815 : Layout
DROP: bc21e8bd : Test precision unit tests
DROP: 306f43c2 : Unnecessary linewrap
DROP: 50fe5b9d : Simplify by using common test method
DROP: 0c0d1df4 : Need to check all significant units are set ...
DROP: 4b325fe9 : Oops - also need to check previous entry
DROP: cb5b5c3d : Shared method for checking precision
DROP: 59f559ad : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date Only clear one field as doing re-enables the 'set' status for all others
DROP: b262d06a : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date More efficient implementation - only parse format string when it is set up Ensure formats always set via private setter method Clear all insignificant fields below the least significant parsed field
DROP: 19783e58 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date +set Calendar to indicate which parts are significant remaining parsers TODO: improve tests - ensure all more significant fields are set
DROP: be045051 : Check for parse error
DROP: a9a79104 : Check for parse error
DROP: fb85a39f : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date +set Calendar to indicate which parts are significant in Enterprise Parser
DROP: 76fa83ce : More tests
DROP: c422412d : More parsing tests and fixes
DROP: a4a8f826 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date +set Calendar to indicate which parts are significant in MLSxEntryParser
DROP: bfac1aec : Javadoc
DROP: e2c97990 : Update to use mdtmFile
HUNK: 809652a3 : NET-565 Add FTPClient method to return an FTPFile from an MDTM command
HUNK: 61d2ab41 : Add display timezone option for listing methods Allow multiple listing methods in a single connect session
HUNK: d219afb0 : NET-564 FTPFile.toFormattedString - allow specification of TimeZone for display
DROP: fd10c3d7 : Typo
HUNK: 3ac7c4c9 : NET-562 FTPFile.toFormattedString should print only signficant parts of the parsed date Part 1: detect which parts are present TODO: set Calendar to indicate which parts are significant
HUNK: 17ecff74 : NET-563 MLSxEntryParser needs test cases; parsing is too lax
DROP: fdf3d2c2 : Show boundary
HUNK: efa533b3 : Add mdtm output
HUNK: d7eb24cb : Add server Timezone for parsing LIST responses
DROP: 9a06c433 : Spaces
DROP: 182a19bc : Javadoc
DROP: 48786125 : Docn
HUNK: caa3ae14 : Document LIST timestamp restrictions
DROP: 1eeecab0 : Standardise on Calendar.DAY_OF_MONTH rather than the synonym Calendar.DATE - which is less obvious
DROP: 4c63aa0a : Javadoc
DROP: b8f3226d : Fix indentation and unnecessary line wraps
DROP: 1a30a36b : Document what happens when invalid parameters supplied
HUNK: 752a551c : NET-561 FTPFile.toFormattedString prints user and group in wrong order
HUNK: e68628bb : NET-544 FTPClient.initiateListParsing does not correctly check if parserKey was cached
HUNK: d4e49ab1 : Add example config item
HUNK: 2e6efa8f : NET-554 Simplify TelnetOptionHandler class hierarchy
HUNK: 316dfd40 : NET-558 - getModificationTime(<filename>) returns complete received line including response code
DROP: a272cd97 : Trailing spaces
DROP: dfadc09f : General tidyup and enhancements
HUNK: 41bdc4e2 : Don't show reflection wrapper in stack trace if exception was thrown by called code
DROP: 22cd80de : Javadoc
DROP: f9193d5f : findbugs-maven-plugin 2.5.3 -> 2.5.5.
HUNK: a9d7cc5a : NET-556 Make SubnetInfo.isInRange(int) public
HUNK: c3d19247 : Simplify conditional by using switch Add missing value
DROP: 766da3f0 : Javadoc
DROP: ebf09d32 : Trailing spaces
DROP: 0f6bc4c0 : Unused import
HUNK: 5555226c : NET-550 Default FTPClient bufferSize results in very slow retrieve transfers Fix code in Util#copyStream (also copyReader) that failed to use the proper default for buffer size 0
HUNK: 506d0271 : NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred Rename confusing fields
HUNK: aee94d0b : NET-551 Util copyReader calls CopyStreamListener.bytesTransferred with the incorrect value for bytesTransferred
DROP: c5192345 : Only create String once
HUNK: d75f0c42 : Added control character processing to TelnetClientExample
HUNK: e58cf27d : NET-547 There is a lack of documentation regarding setControlKeepAliveTimeout
DROP: b62a8b12 : Add tag for 3.3
HUNK: 72ea0f2b : NET-549 - Telnet does not convert LF to CRLF in ASCII mode
DROP: 9eeb9c15 : TYPO
HUNK: 6e790e42 : Trailing spaces
DROP: b77ce822 : Tab police
DROP: e7e48da6 : Camel case test method name.
HUNK: 953b0d30 : Format: Add blank line.
DROP: 66d6cbb8 : Update commons-parent to 34 from 33.
HUNK: 131a120d : NET-543 telnet: spy read EOL is reversed
DROP: 1d8d34db : Javadoc
DROP: 8fe92b71 : Don't "borrow" external hosts for testing
DROP: 4115f808 : Javadoc Count messages found
DROP: 2fec3721 : Use separate BufferedReader variables to avoid resource not closed warning
HUNK: 1a25a4cc : Unnecessary
DROP: 6077beaa : Unused import
DROP: de559667 : Close the resource
DROP: e9d6422b : Add examples
HUNK: 56db2c59 : NET-540 Article#printThread should have option to use any PrintStream
HUNK: 422b0fe3 : Test if Javadoc 8 fix works
HUNK: b26a3b41 : NET-539 NPE if Threader.thread invoked with empty list or with null array
HUNK: 061d70dd : Java 8 Javadoc fixes
DROP: 727f55cc : Remove unthrown exceptions. These are not part of the method signature so don't affect binary compatibility
DROP: 38141bae : Java 8 Javadoc fixes
DROP: cb10f50d : Remove unthrown exceptions. These are not part of the method signature so don't affect binary compatibility
DROP: 0fb67b40 : Remove unecessary test Javadoc - may cause IDE Javadoc warnings - more to maintain
HUNK: 616cad1f : Java 8 Javadoc fixes
DROP: cb0d3f61 : Java 8 Javadoc fixes
DROP: 4db79407 : Remove unecessary test Javadoc - may cause IDE Javadoc warnings - more to maintain
HUNK: 001d716d : Java 8 Javadoc fixes
DROP: 2e7f9121 : Remove useless Javadoc (causes IDE Javadoc warnings)
DROP: 55ebc7bc : Remove useless Javadoc (causes IDE Javadoc warnings)
DROP: ad8f8f03 : Remove useless Javadoc (causes IDE Javadoc warnings)
DROP: f6ffd04c : Remove useless Javadoc (causes IDE Javadoc warnings)
HUNK: c83e0eed : Java 8 Javadoc fixes
HUNK: f1ebf757 : Java 8 Javadoc fixes
DROP: 7b71e2ae : Java 8 Javadoc fixes
HUNK: 29c80bf4 : Javadoc fixes (Java 8)
HUNK: e96cf344 : NET-536 IMAP FETCH example : IMAPExportMbox
HUNK: 1e7d8d6f : Simplify by standardising on URI for server and login details; use common utility method
DROP: 5d8fa90d : Rewrite to avoid some resource closure warnings caused by reusing the stream variables
HUNK: 428bac52 : NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses Add TRUE_CHUNK_LISTENER
HUNK: c21fcb1e : Add details of what example does
HUNK: f8d82c9b : Unescape >+From_ lines, not just >From_
HUNK: df9480cf : NET-535 IMAP FETCH can overflow reply buffer; provide for partial responses
HUNK: 560e40ca : NET-534 Unnecesssary call to getReplyString() if no listeners configured
DROP: e3b71afb : Javadoc examples
DROP: 955d69ed : Add example
HUNK: a0973e36 : Don't use class fields when local variables are sufficient
HUNK: b8ecb3f9 : NET-530 input parameter of org.apache.commons.net.ftp.FTP.__getReply(boolean) is not used
DROP: 949be1b5 : Update versions; ensure compiler version is specified (we override parent)
DROP: f8f24b82 : Regen release notes
DROP: c499348a : Fix up incorrect XML
DROP: bfcbea41 : Default the current release Java minimum to the current compiler target
HUNK: adfaf3ba : NET-529 SubnetUtils throws exception on valid input
TEST: d5bceac7 : NET-527 Add SimpleNTPServer as example and for testing
HUNK: 41dd3db3 : NET-516 parser problem occurs if the filename contains one or more characters of which the second byte of Shift-JIS code is 0x85 Fix NT parser
HUNK: 75129393 : Add regex flags to constructors
DROP: 30acc18a : Constructors should not call overrideable methods. Add setRegex(regex, flags) method
DROP: 934ce8f6 : Fix Javadoc to agree with code
DROP: 7ac3c663 : TODO was fixed a while ago
DROP: bba8edb1 : Typo
DROP: edfbddb9 : Ensure case statement has a default case
HUNK: 5c38cf8f : Typo
HUNK: d645c73e : Add control encoding option
HUNK: 1d830a80 : Add control encoding option
DROP: 4379a681 : Cut-n-paste bug
TEST: b4fabe83 : NET-525 Added missing set methods on NTP class and interface
HUNK: d6a95a75 : TRailing spaces
DROP: 52b9bc03 : TRailing spaces
HUNK: 0b144842 : TRailing spaces
HUNK: fbee82eb : NET-526 Avoid greedy matches within a regex
HUNK: aa4da9ef : Fix bug in matching numbers without commas Start message numbering at 1 Log message number with length
DROP: 8290fefe : Don't rely on getLocalHost() being directly accessible
DROP: b4380110 : Remove debug
DROP: 0a354864 : Let's try explicit local host address
DROP: cb17db7c : A bit more debug
DROP: a8ee23ca : Add some temporary debug for investigating Continuum test failures
DROP: 156724c0 : Replace call to deprecated API
HUNK: a690f593 : Add dates and desc
DROP: 64475d4a : Missing spaces
DROP: 430884f6 : HNY
HUNK: 71706889 : NET-520 SubnetUtils("0.0.0.0/0") does not behave as expected Fixed range checking so network and broadcast addresses are treated as unsigned ints
HUNK: 1ab1a17f : NET-521 SubnetUtils.SubnetInfo.getAddressCount() can overflow as it returns an int
DROP: e333ff8e : Spurious closing tag
HUNK: 9c352db4 : NET-515 FTPClient sample in class javadoc "bug"
HUNK: ad3da80f : NET-519 Apache Commons Net 3.3 has a performance issue
HUNK: f2e08e84 : NET-517 FTPClient#reinitialize is package protected
HUNK: 7879fd65 : NET-512 Downloading files or members from the AS400 QSYS file system is not supported
HUNK: 476395d7 : NET-518 FTPClient#initFeatureMap should not initialize empty map if reply code is 530
DROP: a02169b3 : Use for each loop.
DROP: 588fb691 : Formatting.
HUNK: 9d090d40 : [NET-511] Exception for new SubnetUtils("0.0.0.0/0").
DROP: ceb54335 : Sort members in AB order.
DROP: b23d7bf4 : ASF Branding
HUNK: 86450a6f : Use IMAP URL to simplify command line Add selector support
DROP: 0a25cf01 : Typos
HUNK: 5e305c6a : NET-514 IMAP APPEND multiple issues in IMapClient. Deprecated unusable append methods. Added new append method, as well as example IMapImportMbox class to make use of it.
DROP: efc34a93 : Javadoc
DROP: 22c63caf : Update to CP32 Fix incremental compiler bug (Net does not use annotations in package-info.java files)
HUNK: bcba9364 : It's tricky following the range check as one end is exclusive and the other is inclusive Make both ends inclusive and adjust the calling code accordingly
DROP: efc49076 : Typo
DROP: e95984b4 : Oops, forgot to close tag
DROP: 8ea9034a : 3.3 released
DROP: 529ae45a : Bump version

[STATS] ************** Stats **************
[STATS] total.time : 21.812
[STATS] main.algo : 5.28
[STATS] insert.edge : 0.0
[STATS] hunk.deps.time : 13.652
[STATS] extract.time : 0.0
[STATS] call.graph.time : 0.471
[STATS] tests.time : 2.11
[STATS] comp.count : 0
[STATS] hunk.count : 80
[STATS] test.count : 6
[STATS] hunk.deps.set : 80
[STATS] drop.count : 183
[STATS] ast.line.count : 458
[STATS] test.deps : 78
[STATS] comp.deps : 119
[STATS] reduction.hunk : 68.02973977695167
[STATS] reduction.rate : 97.76951672862454
[STATS] ***********************************
