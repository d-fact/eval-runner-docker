===== Git History Slicing Toolkit =====
   ______ _____  __ _                  
  / ____// ___/ / /(_)_____ ___   _____
 / /     \__ \ / // // ___// _ \ / ___/
/ /___  ___/ // // // /__ /  __// /
\____/ /____//_//_/ \___/ \___//_/

=======================================
[DEBUG] Original |H|: 262
[OUTPUT] Computing FUNC & COMP set ... 
[OUTPUT] Running coverage analysis ...
[DEBUG] FULL
[DEBUG] 224 classes have been analyzed.
[DEBUG] Analyzing package: org/apache/commons/lang3/time ...
[DEBUG] 	File: FastDateParser.java ...
[DEBUG] 	File: DateFormatUtils.java ...
[DEBUG] 	File: DateUtils.java ...
[DEBUG] 	File: StopWatch.java ...
[DEBUG] 	File: DurationFormatUtils.java ...
[DEBUG] 	File: FastDatePrinter.java ...
[DEBUG] 	File: FormatCache.java ...
[DEBUG] 	File: FastDateFormat.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/reflect ...
[DEBUG] 	File: TypeLiteral.java ...
[DEBUG] 	File: ConstructorUtils.java ...
[DEBUG] 	File: FieldUtils.java ...
[DEBUG] 	File: TypeUtils.java ...
[DEBUG] 	File: InheritanceUtils.java ...
[DEBUG] 	File: MemberUtils.java ...
[DEBUG] 	File: MethodUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/math ...
[DEBUG] 	File: Fraction.java ...
[DEBUG] 	File: NumberUtils.java ...
[DEBUG] 	File: IEEE754rUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/exception ...
[DEBUG] 	File: ContextedRuntimeException.java ...
[DEBUG] 	File: ContextedException.java ...
[DEBUG] 	File: ExceptionUtils.java ...
[DEBUG] 	File: CloneFailedException.java ...
[DEBUG] 	File: DefaultExceptionContext.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/event ...
[DEBUG] 	File: EventUtils.java ...
[DEBUG] 	File: EventListenerSupport.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/tuple ...
[DEBUG] 	File: MutablePair.java ...
[DEBUG] 	File: MutableTriple.java ...
[DEBUG] 	File: ImmutablePair.java ...
[DEBUG] 	File: Triple.java ...
[DEBUG] 	File: Pair.java ...
[DEBUG] 	File: ImmutableTriple.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/builder ...
[DEBUG] 	File: EqualsBuilder.java ...
[DEBUG] 	File: Diff.java ...
[DEBUG] 	File: ReflectionToStringBuilder.java ...
[DEBUG] 	File: RecursiveToStringStyle.java ...
[DEBUG] 	File: HashCodeBuilder.java ...
[DEBUG] 	File: StandardToStringStyle.java ...
[DEBUG] 	File: ToStringBuilder.java ...
[DEBUG] 	File: ToStringStyle.java ...
[DEBUG] 	File: CompareToBuilder.java ...
[DEBUG] 	File: DiffBuilder.java ...
[DEBUG] 	File: MultilineRecursiveToStringStyle.java ...
[DEBUG] 	File: DiffResult.java ...
[DEBUG] 	File: IDKey.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/concurrent ...
[DEBUG] 	File: CallableBackgroundInitializer.java ...
[DEBUG] 	File: TimedSemaphore.java ...
[DEBUG] 	File: MultiBackgroundInitializer.java ...
[DEBUG] 	File: ConstantInitializer.java ...
[DEBUG] 	File: AtomicInitializer.java ...
[DEBUG] 	File: BackgroundInitializer.java ...
[DEBUG] 	File: ConcurrentException.java ...
[DEBUG] 	File: ConcurrentRuntimeException.java ...
[DEBUG] 	File: ConcurrentUtils.java ...
[DEBUG] 	File: LazyInitializer.java ...
[DEBUG] 	File: BasicThreadFactory.java ...
[DEBUG] 	File: AtomicSafeInitializer.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3 ...
[DEBUG] 	File: JavaVersion.java ...
[DEBUG] 	File: Validate.java ...
[DEBUG] 	File: BitField.java ...
[DEBUG] 	File: RandomUtils.java ...
[DEBUG] 	File: ObjectUtils.java ...
[DEBUG] 	File: Range.java ...
[DEBUG] 	File: RandomStringUtils.java ...
[DEBUG] 	File: LocaleUtils.java ...
[DEBUG] 	File: ClassUtils.java ...
[DEBUG] 	File: StringUtils.java ...
[DEBUG] 	File: BooleanUtils.java ...
[DEBUG] 	File: CharSetUtils.java ...
[DEBUG] 	File: AnnotationUtils.java ...
[DEBUG] 	File: StringEscapeUtils.java ...
[DEBUG] 	File: CharUtils.java ...
[DEBUG] 	File: CharSet.java ...
[DEBUG] 	File: ArrayUtils.java ...
[DEBUG] 	File: NotImplementedException.java ...
[DEBUG] 	File: SerializationException.java ...
[DEBUG] 	File: SerializationUtils.java ...
[DEBUG] 	File: ClassPathUtils.java ...
[DEBUG] 	File: CharSequenceUtils.java ...
[DEBUG] 	File: CharEncoding.java ...
[DEBUG] 	File: CharRange.java ...
[DEBUG] 	File: EnumUtils.java ...
[DEBUG] 	File: Conversion.java ...
[DEBUG] 	File: SystemUtils.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/text ...
[DEBUG] 	File: StrSubstitutor.java ...
[DEBUG] 	File: ExtendedMessageFormat.java ...
[DEBUG] 	File: StrLookup.java ...
[DEBUG] 	File: FormattableUtils.java ...
[DEBUG] 	File: CompositeFormat.java ...
[DEBUG] 	File: StrTokenizer.java ...
[DEBUG] 	File: StrMatcher.java ...
[DEBUG] 	File: WordUtils.java ...
[DEBUG] 	File: StrBuilder.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/text/translate ...
[DEBUG] 	File: EntityArrays.java ...
[DEBUG] 	File: NumericEntityEscaper.java ...
[DEBUG] 	File: AggregateTranslator.java ...
[DEBUG] 	File: UnicodeUnescaper.java ...
[DEBUG] 	File: UnicodeUnpairedSurrogateRemover.java ...
[DEBUG] 	File: CodePointTranslator.java ...
[DEBUG] 	File: NumericEntityUnescaper.java ...
[DEBUG] 	File: LookupTranslator.java ...
[DEBUG] 	File: OctalUnescaper.java ...
[DEBUG] 	File: CharSequenceTranslator.java ...
[DEBUG] 	File: UnicodeEscaper.java ...
[DEBUG] 	File: JavaUnicodeEscaper.java ...
[DEBUG] Analyzing package: org/apache/commons/lang3/mutable ...
[DEBUG] 	File: MutableObject.java ...
[DEBUG] 	File: MutableByte.java ...
[DEBUG] 	File: MutableLong.java ...
[DEBUG] 	File: MutableBoolean.java ...
[DEBUG] 	File: MutableInt.java ...
[DEBUG] 	File: MutableFloat.java ...
[DEBUG] 	File: MutableShort.java ...
[DEBUG] 	File: MutableDouble.java ...
[DEBUG] Drawing static call graph ...
[OUTPUT] Scanning class files ...
[DEBUG] 0 Reading class file: StrMatcher$StringMatcher.class
[DEBUG] 1 Reading class file: StrMatcher$TrimMatcher.class
[DEBUG] 2 Reading class file: FormatFactory.class
[DEBUG] 3 Reading class file: ExtendedMessageFormat.class
[DEBUG] 4 Reading class file: StrBuilder$StrBuilderReader.class
[DEBUG] 5 Reading class file: StrTokenizer.class
[DEBUG] 6 Reading class file: WordUtils.class
[DEBUG] 7 Reading class file: StrMatcher$NoMatcher.class
[DEBUG] 8 Reading class file: StrSubstitutor.class
[DEBUG] 9 Reading class file: LookupTranslator.class
[DEBUG] 10 Reading class file: AggregateTranslator.class
[DEBUG] 11 Reading class file: UnicodeUnpairedSurrogateRemover.class
[DEBUG] 12 Reading class file: NumericEntityUnescaper$OPTION.class
[DEBUG] 13 Reading class file: CharSequenceTranslator.class
[DEBUG] 14 Reading class file: UnicodeEscaper.class
[DEBUG] 15 Reading class file: NumericEntityUnescaper.class
[DEBUG] 16 Reading class file: EntityArrays.class
[DEBUG] 17 Reading class file: CodePointTranslator.class
[DEBUG] 18 Reading class file: OctalUnescaper.class
[DEBUG] 19 Reading class file: NumericEntityEscaper.class
[DEBUG] 20 Reading class file: JavaUnicodeEscaper.class
[DEBUG] 21 Reading class file: UnicodeUnescaper.class
[DEBUG] 22 Reading class file: StrLookup.class
[DEBUG] 23 Reading class file: FormattableUtils.class
[DEBUG] 24 Reading class file: StrLookup$MapStrLookup.class
[DEBUG] 25 Reading class file: StrMatcher.class
[DEBUG] 26 Reading class file: StrBuilder.class
[DEBUG] 27 Reading class file: CompositeFormat.class
[DEBUG] 28 Reading class file: StrBuilder$StrBuilderTokenizer.class
[DEBUG] 29 Reading class file: StrMatcher$CharMatcher.class
[DEBUG] 30 Reading class file: StrBuilder$StrBuilderWriter.class
[DEBUG] 31 Reading class file: StrMatcher$CharSetMatcher.class
[DEBUG] 32 Reading class file: CharRange.class
[DEBUG] 33 Reading class file: ExceptionUtils.class
[DEBUG] 34 Reading class file: ContextedRuntimeException.class
[DEBUG] 35 Reading class file: CloneFailedException.class
[DEBUG] 36 Reading class file: ContextedException.class
[DEBUG] 37 Reading class file: DefaultExceptionContext.class
[DEBUG] 38 Reading class file: ExceptionContext.class
[DEBUG] 39 Reading class file: BitField.class
[DEBUG] 40 Reading class file: Validate.class
[DEBUG] 41 Reading class file: SerializationException.class
[DEBUG] 42 Reading class file: CharUtils.class
[DEBUG] 43 Reading class file: EventUtils.class
[DEBUG] 44 Reading class file: EventListenerSupport.class
[DEBUG] 45 Reading class file: EventUtils$EventBindingInvocationHandler.class
[DEBUG] 46 Reading class file: EventListenerSupport$ProxyInvocationHandler.class
[DEBUG] 47 Reading class file: ArrayUtils.class
[DEBUG] 48 Reading class file: CharRange$1.class
[DEBUG] 49 Reading class file: FastDatePrinter$TwoDigitYearField.class
[DEBUG] 50 Reading class file: FastDateFormat$1.class
[DEBUG] 51 Reading class file: FastDatePrinter$TwentyFourHourField.class
[DEBUG] 52 Reading class file: FastDateParser$2.class
[DEBUG] 53 Reading class file: FastDateParser$1.class
[DEBUG] 54 Reading class file: FastDateParser$ISO8601TimeZoneStrategy.class
[DEBUG] 55 Reading class file: FastDatePrinter$TwoDigitMonthField.class
[DEBUG] 56 Reading class file: DatePrinter.class
[DEBUG] 57 Reading class file: FastDatePrinter$TimeZoneNumberRule.class
[DEBUG] 58 Reading class file: FastDateFormat.class
[DEBUG] 59 Reading class file: FastDatePrinter.class
[DEBUG] 60 Reading class file: StopWatch$State.class
[DEBUG] 61 Reading class file: StopWatch$State$2.class
[DEBUG] 62 Reading class file: FastDatePrinter$NumberRule.class
[DEBUG] 63 Reading class file: FastDatePrinter$TwelveHourField.class
[DEBUG] 64 Reading class file: FastDatePrinter$PaddedNumberField.class
[DEBUG] 65 Reading class file: FastDateParser$CopyQuotedStrategy.class
[DEBUG] 66 Reading class file: DateParser.class
[DEBUG] 67 Reading class file: FastDatePrinter$TextField.class
[DEBUG] 68 Reading class file: FastDatePrinter$UnpaddedMonthField.class
[DEBUG] 69 Reading class file: FastDatePrinter$Rule.class
[DEBUG] 70 Reading class file: FastDateParser$TimeZoneStrategy.class
[DEBUG] 71 Reading class file: FormatCache.class
[DEBUG] 72 Reading class file: StopWatch$1.class
[DEBUG] 73 Reading class file: FastDatePrinter$TimeZoneNameRule.class
[DEBUG] 74 Reading class file: FastDateParser$Strategy.class
[DEBUG] 75 Reading class file: FastDateParser$3.class
[DEBUG] 76 Reading class file: FastDateParser$NumberStrategy.class
[DEBUG] 77 Reading class file: FastDatePrinter$TwoDigitNumberField.class
[DEBUG] 78 Reading class file: FastDatePrinter$CharacterLiteral.class
[DEBUG] 79 Reading class file: FastDatePrinter$StringLiteral.class
[DEBUG] 80 Reading class file: StopWatch$State$1.class
[DEBUG] 81 Reading class file: DateUtils$ModifyType.class
[DEBUG] 82 Reading class file: FastDateParser.class
[DEBUG] 83 Reading class file: FormatCache$MultipartKey.class
[DEBUG] 84 Reading class file: StopWatch.class
[DEBUG] 85 Reading class file: FastDateParser$CaseInsensitiveTextStrategy.class
[DEBUG] 86 Reading class file: DateUtils.class
[DEBUG] 87 Reading class file: FastDatePrinter$Iso8601_Rule.class
[DEBUG] 88 Reading class file: StopWatch$State$4.class
[DEBUG] 89 Reading class file: FastDateParser$4.class
[DEBUG] 90 Reading class file: DateUtils$DateIterator.class
[DEBUG] 91 Reading class file: DurationFormatUtils$Token.class
[DEBUG] 92 Reading class file: DurationFormatUtils.class
[DEBUG] 93 Reading class file: FastDatePrinter$UnpaddedNumberField.class
[DEBUG] 94 Reading class file: FastDatePrinter$TimeZoneDisplayKey.class
[DEBUG] 95 Reading class file: DateFormatUtils.class
[DEBUG] 96 Reading class file: StopWatch$State$3.class
[DEBUG] 97 Reading class file: StopWatch$SplitState.class
[DEBUG] 98 Reading class file: InheritanceUtils.class
[DEBUG] 99 Reading class file: TypeUtils$WildcardTypeImpl.class
[DEBUG] 100 Reading class file: TypeUtils.class
[DEBUG] 101 Reading class file: TypeUtils$WildcardTypeBuilder.class
[DEBUG] 102 Reading class file: Typed.class
[DEBUG] 103 Reading class file: TypeUtils$ParameterizedTypeImpl.class
[DEBUG] 104 Reading class file: ConstructorUtils.class
[DEBUG] 105 Reading class file: TypeUtils$GenericArrayTypeImpl.class
[DEBUG] 106 Reading class file: MethodUtils.class
[DEBUG] 107 Reading class file: TypeUtils$1.class
[DEBUG] 108 Reading class file: MemberUtils.class
[DEBUG] 109 Reading class file: TypeLiteral.class
[DEBUG] 110 Reading class file: FieldUtils.class
[DEBUG] 111 Reading class file: DiffBuilder$12.class
[DEBUG] 112 Reading class file: DiffBuilder$7.class
[DEBUG] 113 Reading class file: ToStringStyle$MultiLineToStringStyle.class
[DEBUG] 114 Reading class file: DiffBuilder$1.class
[DEBUG] 115 Reading class file: DiffBuilder$3.class
[DEBUG] 116 Reading class file: DiffBuilder$14.class
[DEBUG] 117 Reading class file: HashCodeBuilder.class
[DEBUG] 118 Reading class file: ToStringStyle$ShortPrefixToStringStyle.class
[DEBUG] 119 Reading class file: RecursiveToStringStyle.class
[DEBUG] 120 Reading class file: DiffBuilder$9.class
[DEBUG] 121 Reading class file: ToStringStyle$NoClassNameToStringStyle.class
[DEBUG] 122 Reading class file: ReflectionToStringBuilder.class
[DEBUG] 123 Reading class file: ToStringStyle$SimpleToStringStyle.class
[DEBUG] 124 Reading class file: Builder.class
[DEBUG] 125 Reading class file: DiffBuilder$8.class
[DEBUG] 126 Reading class file: DiffBuilder$16.class
[DEBUG] 127 Reading class file: ToStringStyle$NoFieldNameToStringStyle.class
[DEBUG] 128 Reading class file: ToStringStyle$DefaultToStringStyle.class
[DEBUG] 129 Reading class file: StandardToStringStyle.class
[DEBUG] 130 Reading class file: IDKey.class
[DEBUG] 131 Reading class file: DiffBuilder$17.class
[DEBUG] 132 Reading class file: Diffable.class
[DEBUG] 133 Reading class file: ToStringBuilder.class
[DEBUG] 134 Reading class file: DiffResult.class
[DEBUG] 135 Reading class file: CompareToBuilder.class
[DEBUG] 136 Reading class file: DiffBuilder$2.class
[DEBUG] 137 Reading class file: DiffBuilder$11.class
[DEBUG] 138 Reading class file: DiffBuilder.class
[DEBUG] 139 Reading class file: Diff.class
[DEBUG] 140 Reading class file: ToStringStyle.class
[DEBUG] 141 Reading class file: EqualsBuilder.class
[DEBUG] 142 Reading class file: MultilineRecursiveToStringStyle.class
[DEBUG] 143 Reading class file: DiffBuilder$6.class
[DEBUG] 144 Reading class file: DiffBuilder$13.class
[DEBUG] 145 Reading class file: DiffBuilder$4.class
[DEBUG] 146 Reading class file: DiffBuilder$10.class
[DEBUG] 147 Reading class file: ToStringStyle$JsonToStringStyle.class
[DEBUG] 148 Reading class file: DiffBuilder$18.class
[DEBUG] 149 Reading class file: DiffBuilder$5.class
[DEBUG] 150 Reading class file: DiffBuilder$15.class
[DEBUG] 151 Reading class file: StringEscapeUtils.class
[DEBUG] 152 Reading class file: StringEscapeUtils$CsvEscaper.class
[DEBUG] 153 Reading class file: StringUtils.class
[DEBUG] 154 Reading class file: ImmutableTriple.class
[DEBUG] 155 Reading class file: MutableTriple.class
[DEBUG] 156 Reading class file: MutablePair.class
[DEBUG] 157 Reading class file: Pair.class
[DEBUG] 158 Reading class file: Triple.class
[DEBUG] 159 Reading class file: ImmutablePair.class
[DEBUG] 160 Reading class file: SystemUtils.class
[DEBUG] 161 Reading class file: MutableLong.class
[DEBUG] 162 Reading class file: MutableBoolean.class
[DEBUG] 163 Reading class file: MutableFloat.class
[DEBUG] 164 Reading class file: MutableShort.class
[DEBUG] 165 Reading class file: MutableObject.class
[DEBUG] 166 Reading class file: MutableInt.class
[DEBUG] 167 Reading class file: MutableDouble.class
[DEBUG] 168 Reading class file: Mutable.class
[DEBUG] 169 Reading class file: MutableByte.class
[DEBUG] 170 Reading class file: ObjectUtils.class
[DEBUG] 171 Reading class file: CharEncoding.class
[DEBUG] 172 Reading class file: LocaleUtils$SyncAvoid.class
[DEBUG] 173 Reading class file: JavaVersion.class
[DEBUG] 174 Reading class file: CharSequenceUtils.class
[DEBUG] 175 Reading class file: SerializationUtils$ClassLoaderAwareObjectInputStream.class
[DEBUG] 176 Reading class file: Fraction.class
[DEBUG] 177 Reading class file: NumberUtils.class
[DEBUG] 178 Reading class file: IEEE754rUtils.class
[DEBUG] 179 Reading class file: SerializationUtils.class
[DEBUG] 180 Reading class file: StringEscapeUtils$CsvUnescaper.class
[DEBUG] 181 Reading class file: LocaleUtils.class
[DEBUG] 182 Reading class file: RandomStringUtils.class
[DEBUG] 183 Reading class file: ObjectUtils$Null.class
[DEBUG] 184 Reading class file: BooleanUtils.class
[DEBUG] 185 Reading class file: ClassUtils$1.class
[DEBUG] 186 Reading class file: ClassUtils$2$1.class
[DEBUG] 187 Reading class file: ClassUtils$Interfaces.class
[DEBUG] 188 Reading class file: ClassPathUtils.class
[DEBUG] 189 Reading class file: AnnotationUtils$1.class
[DEBUG] 190 Reading class file: RandomUtils.class
[DEBUG] 191 Reading class file: ClassUtils$2.class
[DEBUG] 192 Reading class file: ArrayUtils$1.class
[DEBUG] 193 Reading class file: EnumUtils.class
[DEBUG] 194 Reading class file: CharSet.class
[DEBUG] 195 Reading class file: CharRange$CharacterIterator.class
[DEBUG] 196 Reading class file: Conversion.class
[DEBUG] 197 Reading class file: Range$ComparableComparator.class
[DEBUG] 198 Reading class file: AtomicSafeInitializer.class
[DEBUG] 199 Reading class file: CallableBackgroundInitializer.class
[DEBUG] 200 Reading class file: BackgroundInitializer$InitializationTask.class
[DEBUG] 201 Reading class file: BasicThreadFactory$1.class
[DEBUG] 202 Reading class file: TimedSemaphore$1.class
[DEBUG] 203 Reading class file: MultiBackgroundInitializer.class
[DEBUG] 204 Reading class file: AtomicInitializer.class
[DEBUG] 205 Reading class file: TimedSemaphore.class
[DEBUG] 206 Reading class file: BasicThreadFactory$Builder.class
[DEBUG] 207 Reading class file: LazyInitializer.class
[DEBUG] 208 Reading class file: MultiBackgroundInitializer$1.class
[DEBUG] 209 Reading class file: ConcurrentException.class
[DEBUG] 210 Reading class file: ConcurrentUtils.class
[DEBUG] 211 Reading class file: ConcurrentRuntimeException.class
[DEBUG] 212 Reading class file: BasicThreadFactory.class
[DEBUG] 213 Reading class file: ConcurrentUtils$ConstantFuture.class
[DEBUG] 214 Reading class file: BackgroundInitializer.class
[DEBUG] 215 Reading class file: ConstantInitializer.class
[DEBUG] 216 Reading class file: ConcurrentInitializer.class
[DEBUG] 217 Reading class file: MultiBackgroundInitializer$MultiBackgroundInitializerResults.class
[DEBUG] 218 Reading class file: ClassUtils$1$1.class
[DEBUG] 219 Reading class file: Range.class
[DEBUG] 220 Reading class file: NotImplementedException.class
[DEBUG] 221 Reading class file: CharSetUtils.class
[DEBUG] 222 Reading class file: AnnotationUtils.class
[DEBUG] 223 Reading class file: ClassUtils.class
[DEBUG] 1: Done: org.apache.commons.lang3.ArrayUtils
[DEBUG] 2: Done: org.apache.commons.lang3.CharSequenceUtils
[DEBUG] 3: Done: org.apache.commons.lang3.StringUtils
[DEBUG] 4: Done: org.apache.commons.lang3.builder.EqualsBuilder
[DEBUG] 5: Done: org.apache.commons.lang3.BooleanUtils
[DEBUG] 6: Done: org.apache.commons.lang3.mutable.MutableInt
[DEBUG] 7: Done: org.apache.commons.lang3.builder.HashCodeBuilder
[DEBUG] 8: Done: org.apache.commons.lang3.builder.ToStringBuilder
[DEBUG] 9: Done: org.apache.commons.lang3.math.NumberUtils
[DEBUG] 10: Done: org.apache.commons.lang3.builder.ToStringStyle
[DEBUG] 11: Done: org.apache.commons.lang3.CharUtils
[DEBUG] 12: Done: org.apache.commons.lang3.ObjectUtils
[DEBUG] 13: Done: org.apache.commons.lang3.tuple.Pair
[DEBUG] 14: Done: org.apache.commons.lang3.builder.IDKey
[DEBUG] 15: Done: org.apache.commons.lang3.builder.ReflectionToStringBuilder
[DEBUG] 16: Done: org.apache.commons.lang3.builder.Builder
[DEBUG] 17: Done: org.apache.commons.lang3.mutable.Mutable
[DEBUG] 18: Done: org.apache.commons.lang3.Validate
[DEBUG] 19: Done: org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle
[DEBUG] 20: Done: org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle
[DEBUG] 21: Done: org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle
[DEBUG] 22: Done: org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle
[DEBUG] 23: Done: org.apache.commons.lang3.ClassUtils
[DEBUG] 24: Done: org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle
[DEBUG] 25: Done: org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle
[DEBUG] 26: Done: org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle
[DEBUG] 27: Done: org.apache.commons.lang3.exception.CloneFailedException
[DEBUG] 28: Done: org.apache.commons.lang3.ObjectUtils.Null
[DEBUG] 29: Done: org.apache.commons.lang3.text.StrBuilder
[DEBUG] 30: Done: org.apache.commons.lang3.tuple.ImmutablePair
[DEBUG] 31: Done: org.apache.commons.lang3.builder.CompareToBuilder
[DEBUG] 32: Done: org.apache.commons.lang3.ClassUtils.Interfaces
[DEBUG] 33: Done: org.apache.commons.lang3.JavaVersion
[DEBUG] 34: Done: org.apache.commons.lang3.SystemUtils
[DEBUG] 35: Done: org.apache.commons.lang3.text.StrMatcher
[DEBUG] 36: Done: org.apache.commons.lang3.text.StrBuilder.StrBuilderReader
[DEBUG] 37: Done: org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer
[DEBUG] 38: Done: org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter
[DEBUG] 39: Done: org.apache.commons.lang3.text.StrMatcher.TrimMatcher
[DEBUG] 40: Done: org.apache.commons.lang3.text.StrMatcher.CharSetMatcher
[DEBUG] 41: Done: org.apache.commons.lang3.text.StrMatcher.CharMatcher
[DEBUG] 42: Done: org.apache.commons.lang3.text.StrMatcher.StringMatcher
[DEBUG] 43: Done: org.apache.commons.lang3.text.StrMatcher.NoMatcher
[DEBUG] 44: Done: org.apache.commons.lang3.text.StrTokenizer
[DEBUG] Adding to touch set ...
[DEBUG] Test: org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY : double[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY : Float[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY : float[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY : long[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY : Byte[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY : Class<?>[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY : Integer[]
Test: org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY : Boolean[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY : boolean[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY : Character[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY : Long[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY : Double[]
Test: org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...)
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY : short[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY : int[]
Test: org.apache.commons.lang3.CharSequenceUtils
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY : Short[]
Test: org.apache.commons.lang3.ArrayUtils.getLength(Object)
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY : char[]
Test: org.apache.commons.lang3.StringUtils.contains(CharSequence,CharSequence)
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY : byte[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY : String[]
Test: org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY : Object[]
Test: org.apache.commons.lang3.ArrayUtils
Test: org.apache.commons.lang3.StringUtils
Test: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)
Test: org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)
Comp: org.apache.commons.lang3.tuple.Pair
Comp: org.apache.commons.lang3.exception.CloneFailedException
Comp: org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle
Comp: org.apache.commons.lang3.tuple.ImmutablePair
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY : String[]
Comp: org.apache.commons.lang3.text.StrMatcher.TrimMatcher
Comp: org.apache.commons.lang3.ClassUtils.Interfaces
Comp: long[]
Comp: org.apache.commons.lang3.mutable.Mutable
Comp: org.apache.commons.lang3.StringUtils.contains(CharSequence,int)
Comp: org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle
Comp: org.apache.commons.lang3.ArrayUtils.getLength(Object)
Comp: org.apache.commons.lang3.ClassUtils.Interfaces[]
Comp: org.apache.commons.lang3.ObjectUtils
Comp: org.apache.commons.lang3.CharSequenceUtils
Comp: double[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY : Float[]
Comp: org.apache.commons.lang3.builder.CompareToBuilder
Comp: org.apache.commons.lang3.JavaVersion[]
Comp: org.apache.commons.lang3.builder.IDKey
Comp: org.apache.commons.lang3.BooleanUtils
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY : float[]
Comp: org.apache.commons.lang3.builder.HashCodeBuilder
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY : char[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY : Byte[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY : double[]
Comp: org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle
Comp: org.apache.commons.lang3.math.NumberUtils
Comp: org.apache.commons.lang3.ArrayUtils
Comp: org.apache.commons.lang3.text.StrMatcher.CharSetMatcher
Comp: org.apache.commons.lang3.builder.ToStringStyle
Comp: org.apache.commons.lang3.CharUtils
Comp: float[]
Comp: org.apache.commons.lang3.text.StrTokenizer
Comp: org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle
Comp: char[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY : int[]
Comp: int[]
Comp: org.apache.commons.lang3.text.StrMatcher
Comp: org.apache.commons.lang3.text.StrMatcher.CharMatcher
Comp: org.apache.commons.lang3.builder.Builder
Comp: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)
Comp: org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])
Comp: org.apache.commons.lang3.builder.ToStringBuilder
Comp: org.apache.commons.lang3.text.StrMatcher.StringMatcher
Comp: org.apache.commons.lang3.JavaVersion
Comp: org.apache.commons.lang3.ArrayUtils.isEmpty(char[])
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY : long[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY : Boolean[]
Comp: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)
Comp: org.apache.commons.lang3.text.StrBuilder.StrBuilderReader
Comp: org.apache.commons.lang3.SystemUtils
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY : Double[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY : Character[]
Comp: org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer
Comp: org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle
Comp: org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY : byte[]
Comp: boolean[]
Comp: org.apache.commons.lang3.text.StrMatcher.NoMatcher
Comp: org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY : short[]
Comp: org.apache.commons.lang3.builder.EqualsBuilder
Comp: short[]
Comp: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Comp: org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence[])
Comp: org.apache.commons.lang3.mutable.MutableInt
Comp: org.apache.commons.lang3.Validate
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY : Integer[]
Comp: org.apache.commons.lang3.StringUtils.contains(CharSequence,CharSequence)
Comp: org.apache.commons.lang3.ObjectUtils.Null
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY : Long[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY : Class[]
Comp: org.apache.commons.lang3.ClassUtils
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY : Short[]
Comp: org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle
Comp: org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter
Comp: org.apache.commons.lang3.text.StrBuilder
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY : Object[]
Comp: org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY : boolean[]
Comp: org.apache.commons.lang3.StringUtils
Comp: byte[]


[OUTPUT] Initial |S| = 262
[OUTPUT] Analysing Commits ... 
[DEBUG] === Inspecting commit: 76cc69c3 : LANG-1109 - Number percentage formatting with fractional digits ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String) : (819, 838) --> (811, 830)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : (773, 808) --> (777, 800)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : (810, 817) --> (802, 809)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.VALID_TZ : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (752, 752)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.GMT_OPTION : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (749, 749)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (748, 748)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TZ_DATABASE : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (751, 751)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.validTimeZoneChars : String : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy : (749, 749)
[DEBUG] 
[DEBUG] === Inspecting commit: d4c7f630 : Use annotation based checking for expected exceptions ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8ea1aa1e : Remove another necessary assignment ===
[DEBUG] 
[DEBUG] === Inspecting commit: 59985b43 : Remove unnecessary assignment ===
[DEBUG] 
[DEBUG] === Inspecting commit: 34558845 : Format source code ===
[DEBUG] 
[DEBUG] === Inspecting commit: a498b87d : Build requires at least Java 6 - check for Java version can be removed ===
[DEBUG] 
[DEBUG] === Inspecting commit: 83775c43 : Test fields can be private ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3f0f42f7 : Drop unnecessary empty lines ===
[DEBUG] 
[DEBUG] === Inspecting commit: 98817e88 : Use BeforeClass hook to set up test date ===
[DEBUG] 
[DEBUG] === Inspecting commit: 35f1cc00 : PMD: Useless parentheses ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2bc2ffde : PMD: Useless parentheses ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 11491d35 : Use not bool instead of bool == false ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[]) : (789, 818) --> (789, 818)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[]) : (634, 663) --> (634, 663)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(double,double) : org.apache.commons.lang3.builder.EqualsBuilder.append(double,double) : (579, 597) --> (579, 597)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[]) : (727, 756) --> (727, 756)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(long,long) : org.apache.commons.lang3.builder.EqualsBuilder.append(long,long) : (500, 517) --> (500, 517)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[]) : (665, 694) --> (665, 694)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean) : org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean) : (619, 632) --> (619, 632)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(int,int) : org.apache.commons.lang3.builder.EqualsBuilder.append(int,int) : (519, 532) --> (519, 532)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[]) : (851, 880) --> (851, 880)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[]) : (882, 911) --> (882, 911)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(float,float) : org.apache.commons.lang3.builder.EqualsBuilder.append(float,float) : (599, 617) --> (599, 617)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[]) : (758, 787) --> (758, 787)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(short,short) : org.apache.commons.lang3.builder.EqualsBuilder.append(short,short) : (534, 547) --> (534, 547)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte) : org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte) : (564, 577) --> (564, 577)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object) : org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object) : (448, 498) --> (448, 498)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(char,char) : org.apache.commons.lang3.builder.EqualsBuilder.append(char,char) : (549, 562) --> (549, 562)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[]) : (696, 725) --> (696, 725)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[]) : org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[]) : (820, 849) --> (820, 849)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean) : org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean) : (431, 444) --> (431, 444)
[DEBUG] 
[DEBUG] === Inspecting commit: 9072a761 : PMD: Useless parentheses ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f525bc3c : Use not String.contains instead of indexOf == -1 ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[]) : org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[]) : (302, 338) --> (302, 338)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class<?>,EqualsBuilder,boolean,String[]) : org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class<?>,EqualsBuilder,boolean,String[]) : (382, 427) --> (382, 427)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[]) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[]) : (166, 209) --> (166, 209)
[DEBUG] 
[DEBUG] === Inspecting commit: 2fefdc7d : Scope of local variabel shift can be narrower ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : (1445, 1476) --> (1420, 1450)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int) : org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int) : (1252, 1290) --> (1232, 1269)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int) : org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int) : (631, 665) --> (629, 662)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : (910, 944) --> (900, 933)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int) : org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int) : (667, 701) --> (664, 697)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int) : org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int) : (1332, 1370) --> (1310, 1347)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : (946, 980) --> (935, 968)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int) : org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int) : (1087, 1118) --> (1072, 1102)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int) : org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int) : (809, 840) --> (802, 832)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int) : org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int) : (1054, 1085) --> (1040, 1070)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int) : org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int) : (1219, 1250) --> (1200, 1230)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : (982, 1016) --> (970, 1003)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : (1512, 1543) --> (1485, 1515)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int) : org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int) : (595, 629) --> (594, 627)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int) : org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int) : (1186, 1217) --> (1168, 1198)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int) : org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int) : (703, 737) --> (699, 732)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : (1478, 1510) --> (1452, 1483)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : (1412, 1443) --> (1388, 1418)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int) : org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int) : (775, 807) --> (769, 800)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int) : org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int) : (842, 874) --> (834, 865)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : (1018, 1052) --> (1005, 1038)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int) : org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int) : (739, 773) --> (734, 767)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int) : org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int) : (1120, 1151) --> (1104, 1134)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int) : org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int) : (1292, 1330) --> (1271, 1308)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int) : org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int) : (1372, 1410) --> (1349, 1386)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int) : org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int) : (559, 593) --> (559, 592)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int) : org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int) : (876, 908) --> (867, 898)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int) : org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int) : (1153, 1184) --> (1136, 1166)
[DEBUG] 
[DEBUG] === Inspecting commit: d3252a5c : PMD: Useless parentheses ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c4c03a33 : PMD: Useless parentheses ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 9106f4ed : Define Findbugs exlucde for internally used map key class ===
[DEBUG] 
[DEBUG] === Inspecting commit: 173c162a : Simplify isNotEmpty by reusing isEmpty ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[]) : (3548, 3558) --> (3548, 3558)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]) : (3593, 3602) --> (3593, 3602)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]) : (3626, 3635) --> (3626, 3635)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]) : (3560, 3569) --> (3560, 3569)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]) : (3604, 3613) --> (3604, 3613)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]) : (3637, 3646) --> (3637, 3646)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]) : (3615, 3624) --> (3615, 3624)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]) : (3571, 3580) --> (3571, 3580)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]) : org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]) : (3582, 3591) --> (3582, 3591)
[DEBUG] 
[DEBUG] === Inspecting commit: ef51b068 : Simplify isEmpty be reusing getLength ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(double[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(double[]) : (3514, 3523) --> (3514, 3523)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[]) : (3536, 3545) --> (3536, 3545)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(char[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(char[]) : (3492, 3501) --> (3492, 3501)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(short[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(short[]) : (3481, 3490) --> (3481, 3490)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(Object[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(Object[]) : (3448, 3457) --> (3448, 3457)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(int[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(int[]) : (3470, 3479) --> (3470, 3479)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]) : (3503, 3512) --> (3503, 3512)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(long[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(long[]) : (3459, 3468) --> (3459, 3468)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isEmpty(float[]) : org.apache.commons.lang3.ArrayUtils.isEmpty(float[]) : (3525, 3534) --> (3525, 3534)
[DEBUG] 
[DEBUG] === Inspecting commit: 319588b4 : Simplify isSameLenght implementations by reusing getLength. This also fixes a lot of the useless paranthesis warnings generated by PMD. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[]) : (1274, 1290) --> (1259, 1270)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[]) : (1256, 1272) --> (1246, 1257)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[]) : (1310, 1326) --> (1285, 1296)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[]) : (1238, 1254) --> (1233, 1244)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[]) : (1328, 1344) --> (1298, 1309)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[]) : (1218, 1236) --> (1218, 1231)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[]) : (1364, 1380) --> (1324, 1335)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[]) : (1292, 1308) --> (1272, 1283)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[]) : org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[]) : (1346, 1362) --> (1311, 1322)
[DEBUG] 
[DEBUG] === Inspecting commit: 921ee586 : Document required java version for every release ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3f418c22 : Use date schema from changes.xml on release history page ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1c532efd : Add next release to changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: cdbf4758 : Post release clean up: bump version number, document release date, add release to doap file ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0d5d6669 : Add entry for the upcoming 3.4 release to the release history page ===
[DEBUG] 
[DEBUG] === Inspecting commit: e83123d1 : Fix copy past error ===
[DEBUG] 
[DEBUG] === Inspecting commit: 09c42e7d : LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_JAGUAR : boolean : org.apache.commons.lang3.SystemUtils : (1070, 1080)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LION : boolean : org.apache.commons.lang3.SystemUtils : (1130, 1140)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MOUNTAIN_LION : boolean : org.apache.commons.lang3.SystemUtils : (1142, 1152)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LEOPARD : boolean : org.apache.commons.lang3.SystemUtils : (1106, 1116)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MAVERICKS : boolean : org.apache.commons.lang3.SystemUtils : (1154, 1164)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PANTHER : boolean : org.apache.commons.lang3.SystemUtils : (1082, 1092)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_CHEETAH : boolean : org.apache.commons.lang3.SystemUtils : (1046, 1056)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_YOSEMITE : boolean : org.apache.commons.lang3.SystemUtils : (1166, 1176)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_SNOW_LEOPARD : boolean : org.apache.commons.lang3.SystemUtils : (1118, 1128)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PUMA : boolean : org.apache.commons.lang3.SystemUtils : (1058, 1068)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_TIGER : boolean : org.apache.commons.lang3.SystemUtils : (1094, 1104)
[DEBUG] 
[DEBUG] === Inspecting commit: 9c7b0fb8 : LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98 : boolean : (1192, 1202) --> (1202, 1213)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP : boolean : (1231, 1241) --> (1233, 1243)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA : boolean : (1244, 1254) --> (1246, 1258)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2003 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2003 : boolean : (1155, 1165) --> (1156, 1168)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95 : boolean : (1179, 1189) --> (1190, 1202)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2008 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2008 : boolean : (1167, 1177) --> (1168, 1180)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME : boolean : (1205, 1215) --> (1213, 1223)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8 : boolean : (1268, 1278) --> (1270, 1282)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000 : boolean : (1143, 1153) --> (1143, 1155)
[DEBUG] Update: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7 : boolean : org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7 : boolean : (1256, 1266) --> (1258, 1270)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2012 : boolean : org.apache.commons.lang3.SystemUtils : (1179, 1189)
[DEBUG] 
[DEBUG] === Inspecting commit: 8c84cfda : The latest release is 3.3.2 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6039dd31 : Fix ant build ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9e575c4d : Document change of constant in DurationUtils as suggested by Oliver Heger. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 79aceed0 : Add LANG-1104 to release notes ===
[DEBUG] 
[DEBUG] === Inspecting commit: 06d72459 : LANG-1104 - FastDateParserTest.testParses fails in TimeZone America/Sao_Paulo ===
[DEBUG] 
[DEBUG] === Inspecting commit: 56462a1e : maven-checkstyle-plugin 2.14 -> 2.15. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3548f0ab : Update site for release 3.4 ===
[DEBUG] 
[DEBUG] === Inspecting commit: dfaa656f : PMD: Useless parentheses. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean) : org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean) : (190, 201) --> (192, 202)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableByte.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte) : org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte) : (263, 273) --> (265, 274)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble) : org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble) : (292, 302) --> (292, 301)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat) : org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat) : (293, 303) --> (293, 302)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableInt.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt) : org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt) : (253, 263) --> (255, 264)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableLong.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong) : org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong) : (253, 263) --> (255, 264)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/mutable/MutableShort.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort) : org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort) : (263, 273) --> (265, 274)
[DEBUG] 
[DEBUG] === Inspecting commit: bb01292e : PMD: Avoid unused private fields such as 'ESCAPED_QUOTE' ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java ---
[DEBUG] Delete: FIELD: org.apache.commons.lang3.text.ExtendedMessageFormat.ESCAPED_QUOTE : String : org.apache.commons.lang3.text.ExtendedMessageFormat : (74, 74)
[DEBUG] 
[DEBUG] === Inspecting commit: 3ab0bc35 : Fix typo ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ObjectUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f718ec16 : PMD: Overriding method merely calls super ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ObjectUtils.java ---
[DEBUG] Delete: METHOD: org.apache.commons.lang3.ObjectUtils.toString() : org.apache.commons.lang3.ObjectUtils : (210, 213)
[DEBUG] 
[DEBUG] === Inspecting commit: e29f33c3 : FindBugs: Load of known null value. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : (824, 904) --> (824, 904)
[DEBUG] 
[DEBUG] === Inspecting commit: 346aae3b : Make checkstyle happy: add missing JavaDoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 4fdc606c : Update RELEASE-NOTES for release 3.4 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 11279f7b : Update download page in preparation for 3.4 release ===
[DEBUG] 
[DEBUG] === Inspecting commit: fccd59e7 : Change test back to printing to std out, since continuum seems to be running on HAL-9000 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3225ba64 : LANG-1103: Add SystemUtils.IS_JAVA_1_9 ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.SystemUtils.IS_JAVA_1_9 : boolean : org.apache.commons.lang3.SystemUtils : (942, 952)
[DEBUG] 
[DEBUG] === Inspecting commit: 11c0df1d : LANG-1102: Make logic for comparing OS versions in SystemUtils smarter ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : (1435, 1452) --> (1435, 1452)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.SystemUtils.isOSVersionMatch(String,String) : org.apache.commons.lang3.SystemUtils : (1471, 1495)
[DEBUG] 
[DEBUG] === Inspecting commit: 1dc65ff9 : Reuse isOsNameMatch ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SystemUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String) : (1435, 1452) --> (1435, 1452)
[DEBUG] 
[DEBUG] === Inspecting commit: 2b7e1959 : This test should fail instead of writing to std out so that we can add missing OS ===
[DEBUG] 
[DEBUG] === Inspecting commit: 098395ea : Dummy commit to close github issue, which has been fixed in r1669520. This fixes #56 from github. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2f62425c : Further optimization of LANG-935: - Avoid toString of the replacement sequence by doing it once. - Avoid calculating the maximum when not needed. - Fixup comment for greedy algorithm ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : (37, 67) --> (37, 66)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : (69, 95) --> (68, 91)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, String> : org.apache.commons.lang3.text.translate.LookupTranslator : (32, 32)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, CharSequence> : org.apache.commons.lang3.text.translate.LookupTranslator : (32, 32)
[DEBUG] 
[DEBUG] === Inspecting commit: a211ef28 : Better JavaDoc for LANG-1093: Add ClassUtils.getAbbreviatedName. This fixes #57 from github. Thanks to Fabian Lange. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c8e96c0c : LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0b7ef7f5 : update changes.xml to set proper issue number for previously committed work ===
[DEBUG] 
[DEBUG] === Inspecting commit: a74ed8ca : Dummy commit to close github issue. This fixes #35 from github. ===
[DEBUG] 
[DEBUG] === Inspecting commit: aeaa333c : Add missing issues to changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 10e18ae9 : LANG-1100: Avoid memory allocation when using date formating to StringBuffer ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(StringBuffer,int) : (773, 786) --> (771, 783)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength() : org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength() : (854, 860) --> (851, 857)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : (870, 893) --> (867, 881)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : (927, 937) --> (915, 925)
[DEBUG] 
[DEBUG] === Inspecting commit: 8bc91a95 : replace tabs with spaces ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: bbfa8eb7 : LANG-1101 FastDateParser and FastDatePrinter support 'X' format ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : (478, 535) --> (482, 541)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDateParser.formatPattern : Pattern : org.apache.commons.lang3.time.FastDateParser.formatPattern : Pattern : (472, 476) --> (476, 481)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder) : (839, 846) --> (849, 856)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int) : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (874, 885)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy(String) : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (845, 847)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy() : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (835, 835)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_1_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (870, 870)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_3_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (872, 872)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_2_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (871, 871)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.pattern : String : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (843, 843)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.PATTERN : String : org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : (837, 837)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy : (890, 890) --> (892, 892)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(StringBuffer,int) : (805, 816) --> (819, 829)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int) : (857, 881) --> (870, 893)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : (1204, 1234) --> (1213, 1241)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(StringBuffer,int) : (997, 1004) --> (1007, 1013)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(StringBuffer,int) : (958, 965) --> (969, 975)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : (171, 300) --> (177, 309)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int) : (915, 926) --> (927, 937)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDatePrinter.appendDigits(StringBuffer,int) : org.apache.commons.lang3.time.FastDatePrinter : (593, 596)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule : org.apache.commons.lang3.time.FastDatePrinter : (1244, 1323)
[DEBUG] 
[DEBUG] === Inspecting commit: 7bb99bcb : LANG-935: Possible performance improvement on string escape functions. Thanks to Fabian Lange and Thomas Neidhart. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...) : (35, 63) --> (37, 67)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer) : (65, 84) --> (69, 95)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.text.translate.LookupTranslator.prefixSet : HashSet<Character> : org.apache.commons.lang3.text.translate.LookupTranslator : (33, 33)
[DEBUG] 
[DEBUG] === Inspecting commit: bf6ee5c5 : LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String) : org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String) : (138, 208) --> (138, 208)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition) : org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition) : (363, 395) --> (363, 395)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList<String>) : org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList<String>) : (397, 439) --> (397, 439)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder) : org.apache.commons.lang3.text.ExtendedMessageFormat : (467, 502)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition) : org.apache.commons.lang3.text.ExtendedMessageFormat : (504, 512)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition,boolean) : org.apache.commons.lang3.text.ExtendedMessageFormat : (507, 517)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder,boolean) : org.apache.commons.lang3.text.ExtendedMessageFormat : (467, 505)
[DEBUG] 
[DEBUG] === Inspecting commit: cbeb45b2 : Kudos to the people how care about Commons Lang ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3328387a : LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrBuilder.append(CharSequence) : org.apache.commons.lang3.text.StrBuilder.append(CharSequence) : (512, 526) --> (515, 541)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrBuilder.append(Object) : org.apache.commons.lang3.text.StrBuilder.append(Object) : (498, 510) --> (498, 513)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int) : org.apache.commons.lang3.text.StrBuilder : (648, 678)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.append(CharBuffer) : org.apache.commons.lang3.text.StrBuilder : (624, 646)
[DEBUG] 
[DEBUG] === Inspecting commit: 1181552e : Correct change types ===
[DEBUG] 
[DEBUG] === Inspecting commit: adebbdc7 : LANG-1098: Update maven-checkstyle-plugin to 2.14. This fixes #55 from github. Thanks to Michał Kordas. ===
[DEBUG] 
[DEBUG] === Inspecting commit: d6f59c37 : LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Michał Kordas. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 08a854a4 : LANG-1096: Update maven-pmd-plugin to 3.4. This fixes #53 from github. Thanks to Michał Kordas. ===
[DEBUG] 
[DEBUG] === Inspecting commit: bf3e77d8 : LANG-1095: Update maven-antrun-plugin to 1.8. This fixes #52 from github. Thanks to Michał Kordas ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4556cc57 : Add missing AL header ===
[DEBUG] 
[DEBUG] === Inspecting commit: 442e8c27 : Extract formatting tests of time zones into parameterized test ===
[DEBUG] 
[DEBUG] === Inspecting commit: 04c8de23 : No need to exclude the current time zone from testing ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8aa1b44a : LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(StringBuffer,Calendar) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(StringBuffer,Calendar) : (1159, 1171) --> (1159, 1170)
[DEBUG] 
[DEBUG] === Inspecting commit: 1f75a8f7 : LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharUtils.unicodeEscaped(char) : org.apache.commons.lang3.CharUtils.unicodeEscaped(char) : (339, 361) --> (341, 362)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.CharUtils.HEX_DIGITS : char[] : org.apache.commons.lang3.CharUtils : (34, 34)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer) : org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer) : (67, 98) --> (69, 109)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.text.translate.CharSequenceTranslator.HEX_DIGITS : char[] : org.apache.commons.lang3.text.translate.CharSequenceTranslator : (34, 34)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer) : org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer) : (99, 127) --> (99, 125)
[DEBUG] 
[DEBUG] === Inspecting commit: a234f033 : Fix JavaDoc link ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: f29eb8e7 : Use annotation based testing for expected exceptions ===
[DEBUG] 
[DEBUG] === Inspecting commit: d38919fc : LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int) : org.apache.commons.lang3.ClassUtils : (336, 396)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int) : org.apache.commons.lang3.ClassUtils : (319, 334)
[DEBUG] 
[DEBUG] === Inspecting commit: ce7f4ed0 : LANG-1090 FastDateParser does not set error indication in ParsePosition ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 8db46b1d : Javadoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: e1244869 : Simplify ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3ec99c1f : Add AL header (props joerg) ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7c8443f6 : LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : (466, 523) --> (466, 523)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.HOUR12_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (868, 873)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.HOUR24_OF_DAY_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (862, 867)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_OF_DAY_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (862, 867)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (868, 873)
[DEBUG] 
[DEBUG] === Inspecting commit: 6ec90c45 : Docs ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b321bde0 : Generics ===
[DEBUG] 
[DEBUG] === Inspecting commit: fb6a62ca : Missed property ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4d228ddf : Comment ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2367948a : LANG-1061 FastDateParser error - timezones not handled correctly ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : (755, 789) --> (755, 790)
[DEBUG] 
[DEBUG] === Inspecting commit: 45a64670 : LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.createNumber(String) : org.apache.commons.lang3.math.NumberUtils.createNumber(String) : (420, 624) --> (420, 624)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int) : org.apache.commons.lang3.math.NumberUtils : (638, 652)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.getMantissa(String) : org.apache.commons.lang3.math.NumberUtils : (626, 636)
[DEBUG] 
[DEBUG] === Inspecting commit: 61836183 : Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : (72, 108) --> (65, 83)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException> : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (66, 67)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (69, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: 4975b890 : CGI must be svn:executable * ===
[DEBUG] 
[DEBUG] === Inspecting commit: ed4d262e : Update to latest parent pom ===
[DEBUG] 
[DEBUG] === Inspecting commit: bdb5d972 : LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get() : (65, 83) --> (72, 108)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException> : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (66, 67)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch : org.apache.commons.lang3.concurrent.AtomicSafeInitializer : (69, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: ffdc4272 : Fix up Findbugs version so it works with Java 6 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 813e18ff : Checkstyle: Add missing JavaDoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrLookup.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 4792f854 : Checkstyle: Add missing JavaDoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 425d0577 : Make JavaDoc tool happy by adding missing @return tag ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 58320be2 : Add some JavaDocs ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/JavaVersion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 6b90fe3a : Add missing license header ===
[DEBUG] 
[DEBUG] === Inspecting commit: d8c65c41 : Add Jonathan Baker to the list of contributors ===
[DEBUG] 
[DEBUG] === Inspecting commit: ffc38b1f : LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object) : (824, 900) --> (824, 904)
[DEBUG] 
[DEBUG] === Inspecting commit: 3181b407 : Add an additional test for LANG-1055 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 63f1d6b8 : LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently. This fixes #43 from github. Thanks to Jonathan Baker. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrLookup.java ---
[DEBUG] Update: FIELD: org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP : StrLookup<String> : org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP : StrLookup<String> : (39, 42) --> (42, 46)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup() : org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup() : (71, 84) --> (73, 98)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrLookup.copyProperties(Properties) : org.apache.commons.lang3.text.StrLookup : (56, 71)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.text.StrLookup.SYSTEM_PROPERTIES_LOOKUP : StrLookup<String> : org.apache.commons.lang3.text.StrLookup : (43, 46)
[DEBUG] 
[DEBUG] === Inspecting commit: cc991fea : Add since tag to new constructor of DiffBuilder ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 38ed1a07 : LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle) : org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle) : (75, 112) --> (121, 151)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle,boolean) : org.apache.commons.lang3.builder.DiffBuilder : (75, 119)
[DEBUG] 
[DEBUG] === Inspecting commit: 6eac3468 : LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SerializationUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SerializationUtils.roundtrip(T) : org.apache.commons.lang3.SerializationUtils.roundtrip(T) : (113, 126) --> (113, 126)
[DEBUG] 
[DEBUG] === Inspecting commit: 89c85192 : Update copyright year ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9af6c5e0 : Use README.md and CONTRIBUTING.md generated by commons build plugin ===
[DEBUG] 
[DEBUG] === Inspecting commit: 51607308 : Add test for merging toString with super toString ===
[DEBUG] 
[DEBUG] === Inspecting commit: d903279e : Remove assertions in error cases. They won't be executed. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 42728e8e : Test against static value ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2515b3eb : Format source code ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8d9662e0 : JsonToStringStyle doesn't use line breaks. Change JavaDoc to reflect this. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c4ddbe64 : LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE : ToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (142, 163)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (2354, 2612)
[DEBUG] 
[DEBUG] === Inspecting commit: c87380f0 : LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java ---
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.ToStringStyle.NO_CLASS_NAME_STYLE : ToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (130, 140)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle : org.apache.commons.lang3.builder.ToStringStyle : (2296, 2327)
[DEBUG] 
[DEBUG] === Inspecting commit: e22e0669 : Revert to using cobertura. The Jacoco instrumentation will add fields to all classes. This in turn breaks the tests for FieldUtils.getAllFields(Class). ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2f97b435 : Don't redefine plugin default values ===
[DEBUG] 
[DEBUG] === Inspecting commit: 00f00cce : Need to set MaxPermSize as well or the site build will fail with OutOfMemoryError ===
[DEBUG] 
[DEBUG] === Inspecting commit: 867d318f : Update JavaNCSS plugin to latest version ===
[DEBUG] 
[DEBUG] === Inspecting commit: e4bcd50d : Add jacoco file to activate report via parent pom (forgot that in last commit) ===
[DEBUG] 
[DEBUG] === Inspecting commit: 517b4304 : Use jacoco via parent pom configuration file instead of cobertura (which takes forever to run) ===
[DEBUG] 
[DEBUG] === Inspecting commit: c5332828 : LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5cb1ae60 : Add examples for containsAny(CharSequence, CharSequence...) ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: a169e866 : Use enhanced for loop instead of indexed based iteration ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...) : (1673, 1696) --> (1673, 1696)
[DEBUG] 
[DEBUG] === Inspecting commit: 9e26c7b6 : LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils : (1673, 1696)
[DEBUG] 
[DEBUG] === Inspecting commit: 23d55b0b : Can't link to private inner classes, use public field instead ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5f61aa07 : Update to latest parent pom ===
[DEBUG] 
[DEBUG] === Inspecting commit: 39022255 : Add another assertion documention the current behavior of StringUtils.join ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4a2cc4f5 : LANG-1073 Read wrong component type of array in add in ArrayUtils ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.add(T[],T) : org.apache.commons.lang3.ArrayUtils.add(T[],T) : (3979, 4022) --> (3979, 4022)
[DEBUG] 
[DEBUG] === Inspecting commit: e5a3039f : LANG-1077 StringUtils.ordinalIndexOf("aaaaaa", "aa", 2) != 3 in StringUtils ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean) : org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean) : (1001, 1036) --> (1001, 1036)
[DEBUG] 
[DEBUG] === Inspecting commit: 05763470 : clarify behavior of #isNumber() with blanks ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d4cf0864 : Typo ===
[DEBUG] 
[DEBUG] === Inspecting commit: a25d6d80 : Update to latest junit release ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0162032a : LANG-1072 Duplicated "0x" check in createBigInteger in NumberUtils ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.createBigInteger(String) : org.apache.commons.lang3.math.NumberUtils.createBigInteger(String) : (716, 750) --> (716, 750)
[DEBUG] 
[DEBUG] === Inspecting commit: 21201210 : maven-pmd-plugin 3.2 -> 3.3. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2afdf4d0 : Javadoc fix for LANG-1064. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 635e41ea : LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne. ===
[DEBUG] --- New File: src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java ---
[DEBUG] Insert: CLASS: org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle : org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle : (23, 219)
[DEBUG] 
[DEBUG] === Inspecting commit: 85c18d0e : Update to latest commons parent pom ===
[DEBUG] 
[DEBUG] === Inspecting commit: 0661ab5c : No need to explicitly extend Object. ===
[DEBUG] 
[DEBUG] === Inspecting commit: ef26a667 : LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte...) : org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte...) : (5328, 5382) --> (5330, 5384)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(T[]) : org.apache.commons.lang3.ArrayUtils : (6093, 6109)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(char[]) : org.apache.commons.lang3.ArrayUtils : (6293, 6316)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(int[]) : org.apache.commons.lang3.ArrayUtils : (6143, 6166)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(double[]) : org.apache.commons.lang3.ArrayUtils : (6218, 6241)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(boolean[]) : org.apache.commons.lang3.ArrayUtils : (6318, 6342)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(byte[]) : org.apache.commons.lang3.ArrayUtils : (6268, 6291)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(long[]) : org.apache.commons.lang3.ArrayUtils : (6168, 6191)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(T[],Comparator<T>) : org.apache.commons.lang3.ArrayUtils : (6112, 6141)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(float[]) : org.apache.commons.lang3.ArrayUtils : (6243, 6266)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.ArrayUtils.isSorted(short[]) : org.apache.commons.lang3.ArrayUtils : (6193, 6216)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/BooleanUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean) : org.apache.commons.lang3.BooleanUtils : (1088, 1107)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.CharUtils.compare(char,char) : org.apache.commons.lang3.CharUtils : (539, 551)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(short,short) : org.apache.commons.lang3.math.NumberUtils : (1540, 1559)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(byte,byte) : org.apache.commons.lang3.math.NumberUtils : (1561, 1573)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(int,int) : org.apache.commons.lang3.math.NumberUtils : (1498, 1517)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.compare(long,long) : org.apache.commons.lang3.math.NumberUtils : (1519, 1538)
[DEBUG] 
[DEBUG] === Inspecting commit: 09cee6a4 : Use isEmpty() where possible. Thanks to James Sawle for pointing this out. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]) : (619, 637) --> (619, 637)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[]) : (499, 517) --> (499, 517)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[]) : (799, 817) --> (799, 817)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[]) : (819, 837) --> (819, 837)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]) : (539, 557) --> (539, 557)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]) : (559, 577) --> (559, 577)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[]) : (699, 717) --> (699, 717)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[]) : (779, 797) --> (779, 797)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[]) : (679, 697) --> (679, 697)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]) : (599, 617) --> (599, 617)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]) : (659, 677) --> (659, 677)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]) : (519, 537) --> (519, 537)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]) : (579, 597) --> (579, 597)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[]) : (459, 477) --> (459, 477)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[]) : (719, 737) --> (719, 737)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[]) : (739, 757) --> (739, 757)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]) : (639, 657) --> (639, 657)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[]) : (479, 497) --> (479, 497)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[]) : org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[]) : (759, 777) --> (759, 777)
[DEBUG] 
[DEBUG] === Inspecting commit: b199af8d : LANG-1043 - isAllUpperCase should only check Alpha characters Document and test additional cases ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 0d3d3197 : Javadocs. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: ab570625 : Update maven-checkstyle-plugin from 2.9.1 to 2.13. ===
[DEBUG] 
[DEBUG] === Inspecting commit: a1135110 : [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action> ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String) : org.apache.commons.lang3.reflect.MethodUtils : (73, 95)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String) : org.apache.commons.lang3.reflect.MethodUtils : (162, 184)
[DEBUG] 
[DEBUG] === Inspecting commit: 0648a309 : Javadoc examples looked better wrapped in {@code} tags. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringEscapeUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 4477ae69 : LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel. ===
[DEBUG] 
[DEBUG] === Inspecting commit: aa3f1749 : Remove tab characters ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7406d02e : Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 22b6781a : Added missing support for ISO 8601 parsing and printing using "ZZ" pattern (code now matches Javadoc). Addresses LANG-1000. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar) : (466, 519) --> (466, 523)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy : org.apache.commons.lang3.time.FastDateParser : (877, 877)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy : org.apache.commons.lang3.time.FastDateParser : (822, 846)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar) : (1198, 1223) --> (1204, 1234)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON : TimeZoneNumberRule : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON : TimeZoneNumberRule : (1177, 1177) --> (1181, 1182)
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_COLON : TimeZoneNumberRule : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_COLON : TimeZoneNumberRule : (1176, 1176) --> (1177, 1179)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean,boolean) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1185, 1194)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean) : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1181, 1188)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.mISO8601 : boolean : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1183, 1183)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_ISO_8601 : TimeZoneNumberRule : org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule : (1180, 1180)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : org.apache.commons.lang3.time.FastDatePrinter.parsePattern() : (170, 297) --> (170, 299)
[DEBUG] 
[DEBUG] === Inspecting commit: 2aae22de : Removed redundant static modifier (thanks, Matt). ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 52e854e3 : Replaced private integer constants with private static enum. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.ceiling(Date,int) : org.apache.commons.lang3.time.DateUtils.ceiling(Date,int) : (873, 897) --> (877, 901)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int) : org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int) : (899, 922) --> (903, 926)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.round(Date,int) : org.apache.commons.lang3.time.DateUtils.round(Date,int) : (680, 714) --> (684, 718)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.truncate(Date,int) : org.apache.commons.lang3.time.DateUtils.truncate(Date,int) : (794, 817) --> (798, 821)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int) : org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int) : (819, 841) --> (823, 845)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.round(Calendar,int) : org.apache.commons.lang3.time.DateUtils.round(Calendar,int) : (716, 750) --> (720, 754)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType) : org.apache.commons.lang3.time.DateUtils : (959, 1105)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,int) : org.apache.commons.lang3.time.DateUtils : (955, 1101)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND : int : org.apache.commons.lang3.time.DateUtils : (124, 128)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE : int : org.apache.commons.lang3.time.DateUtils : (119, 123)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING : int : org.apache.commons.lang3.time.DateUtils : (129, 133)
[DEBUG] 
[DEBUG] === Inspecting commit: bc91bedd : Made it clear that the fields of the object form the hash code (LANG-1039). Pulled magic values into constants. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String...) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String...) : (423, 457) --> (439, 475)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean) : (349, 383) --> (362, 398)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE : int : org.apache.commons.lang3.builder.HashCodeBuilder : (107, 110)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE : int : org.apache.commons.lang3.builder.HashCodeBuilder : (102, 105)
[DEBUG] 
[DEBUG] === Inspecting commit: bdb1a684 : Added Javadoc warnings related to LANG-796. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2154d5fb : Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 1e6c8c14 : Simplify statement by calling substring on str directly. StringUtils.startsWith makes sure that str is not  null at this point. Improvement suggested by sebb. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.isParsable(String) : org.apache.commons.lang3.math.NumberUtils.isParsable(String) : (1470, 1496) --> (1470, 1496)
[DEBUG] 
[DEBUG] === Inspecting commit: 161ef971 : Add fixme regarding a JDK 1.3 workaround ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 01a950e3 : Better JavaDoc formatting ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: fceafc5d : Fix typo ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: bc8e2380 : LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.normalizeSpace(String) : org.apache.commons.lang3.StringUtils.normalizeSpace(String) : (7438, 7484) --> (7428, 7498)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.StringUtils.WHITESPACE_PATTERN : Pattern : org.apache.commons.lang3.StringUtils : (175, 183)
[DEBUG] 
[DEBUG] === Inspecting commit: 092d6da5 : Add missing fail calls. Errors would be silently ignored if those calls are missing. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 84c43fee : Update plugins to current versions. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 1384457a : [LANG-1033] Add StringUtils.countMatches(CharSequence, char) ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char) : org.apache.commons.lang3.StringUtils : (5825, 5856)
[DEBUG] 
[DEBUG] === Inspecting commit: a67075b7 : Update to latest parent pom ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9b2357cf : Fix JavaDoc problem ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/JavaVersion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 5ae1b023 : Document the changes from LANG-1027 ===
[DEBUG] 
[DEBUG] === Inspecting commit: 3fa5334a : LANG-1027 don't fail if java version is unknown, lang is too much used to make apps and libs failling cause of an unknown java version. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/JavaVersion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: de67dec0 : LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.FieldUtils : (226, 240)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.FieldUtils : (242, 263)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.MethodUtils : (568, 590)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>) : org.apache.commons.lang3.reflect.MethodUtils : (552, 566)
[DEBUG] 
[DEBUG] === Inspecting commit: 03aa1e70 : Use the more modern, compact, and flexible Javadoc "{@code ...}" instead of the HTML "<tt>...</tt>". ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringEscapeUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 88dd10fa : Use the more modern, compact, and flexible Javadoc "{@code ...}" instead of the HTML "<tt>...</tt>". ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: b1caa21b : LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T) : org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T) : (6227, 6247) --> (6227, 6247)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence) : org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence) : (319, 338) --> (319, 338)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence...) : (7453, 7481) --> (7453, 7481)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence...) : org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence...) : (7295, 7324) --> (7295, 7324)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T) : org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T) : (6249, 6269) --> (6249, 6269)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence) : org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence) : (222, 239) --> (222, 239)
[DEBUG] 
[DEBUG] === Inspecting commit: 967fdd06 : LANG-1024: Fix JavaDoc errors in test code ===
[DEBUG] 
[DEBUG] === Inspecting commit: 6240a05c : LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.isParsable(String) : org.apache.commons.lang3.math.NumberUtils.isParsable(String) : (1470, 1492) --> (1470, 1496)
[DEBUG] 
[DEBUG] === Inspecting commit: 673dbc57 : Tiddy up JavaDoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 7022c194 : LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.isParsable(String) : org.apache.commons.lang3.math.NumberUtils : (1470, 1491)
[DEBUG] 
[DEBUG] === Inspecting commit: 4fcfad95 : Formating. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c8e024f8 : Formating. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SerializationUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 248fd216 : Restore previous behavior that allows function results (arrays of booleans) to be modified. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : (163, 219) --> (163, 219)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : (221, 277) --> (221, 277)
[DEBUG] 
[DEBUG] === Inspecting commit: 71966110 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/LocaleUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.LocaleUtils.toLocale(String) : org.apache.commons.lang3.LocaleUtils.toLocale(String) : (61, 156) --> (61, 155)
[DEBUG] 
[DEBUG] === Inspecting commit: dd74cf1d : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/InheritanceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>) : org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>) : (40, 67) --> (40, 66)
[DEBUG] 
[DEBUG] === Inspecting commit: 8a95db3d : Format to 120 line length. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/Fraction.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 60b79a90 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/Fraction.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.Fraction.invert() : org.apache.commons.lang3.math.Fraction.invert() : (480, 501) --> (478, 498)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.Fraction.getFraction(String) : org.apache.commons.lang3.math.Fraction.getFraction(String) : (301, 354) --> (301, 352)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.Fraction.pow(int) : org.apache.commons.lang3.math.Fraction.pow(int) : (534, 564) --> (531, 560)
[DEBUG] 
[DEBUG] === Inspecting commit: 0ff84935 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/event/EventUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[]) : org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[]) : (100, 119) --> (100, 118)
[DEBUG] 
[DEBUG] === Inspecting commit: 7b33ab10 : Format to 120 line length. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: cf832560 : Format to 120 line length. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 2e9a359f : Simplify using ternary expressions. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : (305, 370) --> (305, 346)
[DEBUG] 
[DEBUG] === Inspecting commit: c9e3793a : Refactor commons constants (no need to generate new arrays on every call). ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitToBinary(char) : (149, 207) --> (167, 225)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char) : (209, 267) --> (227, 285)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTFF : boolean[] : org.apache.commons.lang3.Conversion : (82, 82)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFTF : boolean[] : org.apache.commons.lang3.Conversion : (80, 80)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTFT : boolean[] : org.apache.commons.lang3.Conversion : (74, 74)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTFT : boolean[] : org.apache.commons.lang3.Conversion : (73, 73)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFTT : boolean[] : org.apache.commons.lang3.Conversion : (72, 72)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFTT : boolean[] : org.apache.commons.lang3.Conversion : (71, 71)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTTF : boolean[] : org.apache.commons.lang3.Conversion : (78, 78)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTTF : boolean[] : org.apache.commons.lang3.Conversion : (77, 77)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFFF : boolean[] : org.apache.commons.lang3.Conversion : (84, 84)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FFFT : boolean[] : org.apache.commons.lang3.Conversion : (76, 76)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTTT : boolean[] : org.apache.commons.lang3.Conversion : (69, 69)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.FTTT : boolean[] : org.apache.commons.lang3.Conversion : (70, 70)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFFF : boolean[] : org.apache.commons.lang3.Conversion : (83, 83)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFTF : boolean[] : org.apache.commons.lang3.Conversion : (79, 79)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TTFF : boolean[] : org.apache.commons.lang3.Conversion : (81, 81)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.Conversion.TFFT : boolean[] : org.apache.commons.lang3.Conversion : (75, 75)
[DEBUG] 
[DEBUG] === Inspecting commit: e769c189 : Simplify using ternary expressions instead of nested if-elses. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int) : org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int) : (440, 527) --> (440, 488)
[DEBUG] 
[DEBUG] === Inspecting commit: 082eb39c : Format to 120 line length. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c987d163 : Simplify using ternary expressions instead of nested if-elses. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int) : org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int) : (373, 461) --> (373, 422)
[DEBUG] 
[DEBUG] === Inspecting commit: f7e5f2c8 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/LocaleUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.LocaleUtils.toLocale(String) : org.apache.commons.lang3.LocaleUtils.toLocale(String) : (61, 157) --> (61, 156)
[DEBUG] 
[DEBUG] === Inspecting commit: 299ea79d : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/SerializationUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass) : org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass) : (311, 336) --> (311, 335)
[DEBUG] 
[DEBUG] === Inspecting commit: 93b1808e : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List<String>) : org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List<String>) : (738, 881) --> (738, 880)
[DEBUG] 
[DEBUG] === Inspecting commit: 8e757f11 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer) : (32, 65) --> (32, 64)
[DEBUG] 
[DEBUG] === Inspecting commit: b52a49ab : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : (28, 41) --> (28, 40)
[DEBUG] 
[DEBUG] === Inspecting commit: 38334883 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int) : (287, 367) --> (287, 352)
[DEBUG] 
[DEBUG] === Inspecting commit: 0ef74715 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : (1092, 1138) --> (1092, 1137)
[DEBUG] 
[DEBUG] === Inspecting commit: e3ee5323 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : org.apache.commons.lang3.ClassUtils.getCanonicalName(String) : (1092, 1139) --> (1092, 1138)
[DEBUG] 
[DEBUG] === Inspecting commit: 5a1101da : Remove unused imports. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 96c30e24 : Use final consistently.  ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ArrayUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int) : (1799, 1832) --> (1799, 1832)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int) : (1589, 1622) --> (1589, 1622)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int) : (1834, 1867) --> (1834, 1867)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int) : (1694, 1727) --> (1694, 1727)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int) : (1624, 1657) --> (1624, 1657)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int) : (1729, 1762) --> (1729, 1762)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int) : (1764, 1797) --> (1764, 1797)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int) : (1659, 1692) --> (1659, 1692)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int) : org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int) : (1554, 1587) --> (1554, 1587)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : (175, 215) --> (175, 215)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassPathUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String) : org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String) : (113, 137) --> (113, 137)
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String) : org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String) : (64, 88) --> (64, 88)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ClassUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces) : org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces) : (1153, 1239) --> (1153, 1239)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/EnumUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E>,long...) : org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E>,long...) : (254, 278) --> (254, 278)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/LocaleUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.LocaleUtils.toLocale(String) : org.apache.commons.lang3.LocaleUtils.toLocale(String) : (61, 157) --> (61, 157)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/ObjectUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object...) : org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object...) : (215, 247) --> (215, 247)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/RandomUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextFloat(float,float) : org.apache.commons.lang3.RandomUtils.nextFloat(float,float) : (149, 173) --> (149, 173)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextDouble(double,double) : org.apache.commons.lang3.RandomUtils.nextDouble(double,double) : (123, 147) --> (123, 147)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextInt(int,int) : org.apache.commons.lang3.RandomUtils.nextInt(int,int) : (70, 94) --> (70, 94)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextBytes(int) : org.apache.commons.lang3.RandomUtils.nextBytes(int) : (52, 68) --> (52, 68)
[DEBUG] Update: METHOD: org.apache.commons.lang3.RandomUtils.nextLong(long,long) : org.apache.commons.lang3.RandomUtils.nextLong(long,long) : (96, 120) --> (96, 120)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,String) : org.apache.commons.lang3.StringUtils.wrap(String,String) : (7751, 7787) --> (7752, 7788)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence) : org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence) : (7188, 7202) --> (7189, 7203)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.capitalize(String) : org.apache.commons.lang3.StringUtils.capitalize(String) : (5666, 5702) --> (5667, 5703)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset) : org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset) : (7704, 7719) --> (7705, 7720)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.join(Iterator<?>,char) : org.apache.commons.lang3.StringUtils.join(Iterator<?>,char) : (4018, 4063) --> (4018, 4064)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale) : org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale) : (7078, 7155) --> (7079, 7156)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence...) : org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence...) : (241, 268) --> (241, 268)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence...) : org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence...) : (340, 368) --> (340, 368)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence) : org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence) : (7204, 7216) --> (7205, 7217)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence...) : org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence...) : (370, 390) --> (370, 390)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence...) : org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence...) : (270, 289) --> (270, 289)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.uncapitalize(String) : org.apache.commons.lang3.StringUtils.uncapitalize(String) : (5704, 5740) --> (5705, 5741)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,char) : org.apache.commons.lang3.StringUtils.wrap(String,char) : (7721, 7749) --> (7722, 7750)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Validate.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long) : org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long) : (929, 948) --> (929, 948)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String) : org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String) : (1132, 1153) --> (1132, 1153)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String) : org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String) : (994, 1015) --> (994, 1015)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String) : org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String) : (950, 971) --> (950, 971)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long) : org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long) : (1067, 1086) --> (1067, 1086)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double) : org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double) : (973, 992) --> (973, 992)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String) : org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String) : (1088, 1109) --> (1088, 1109)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double) : org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double) : (1111, 1130) --> (1111, 1130)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/Diff.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.Diff.setValue(T) : org.apache.commons.lang3.builder.Diff.setValue(T) : (105, 117) --> (105, 117)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.Diff.Diff(String) : org.apache.commons.lang3.builder.Diff.Diff(String) : (51, 64) --> (51, 64)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/DiffResult.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle) : org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle) : (169, 195) --> (169, 195)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection<?>) : org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection<?>) : (81, 86) --> (81, 86)
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object) : org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object) : (70, 79) --> (70, 79)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean) : org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean) : (665, 702) --> (665, 702)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field) : org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field) : (652, 663) --> (652, 663)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>) : org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>) : (186, 199) --> (186, 199)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>) : org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>) : (201, 223) --> (201, 223)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces) : org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces) : (504, 547) --> (504, 547)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>...) : org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>...) : (404, 450) --> (404, 450)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeLiteral.equals(Object) : org.apache.commons.lang3.reflect.TypeLiteral.equals(Object) : (98, 108) --> (98, 108)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>) : org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>) : (1678, 1705) --> (1678, 1705)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type...) : org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type...) : (1829, 1846) --> (1829, 1846)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type) : (1604, 1614) --> (1604, 1614)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type) : (1562, 1585) --> (1562, 1585)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<?>) : org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<?>) : (1736, 1756) --> (1736, 1756)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[]) : org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[]) : (1632, 1649) --> (1632, 1649)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : (1801, 1817) --> (1801, 1817)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : (1616, 1630) --> (1616, 1630)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type) : (1587, 1602) --> (1587, 1602)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type) : org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type) : (1420, 1448) --> (1420, 1448)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.toString(Type) : org.apache.commons.lang3.reflect.TypeUtils.toString(Type) : (1651, 1676) --> (1651, 1676)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.ParameterizedTypeImpl(Class<?>,Type,Type[]) : org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.ParameterizedTypeImpl(Class<?>,Type,Type[]) : (151, 161) --> (151, 161)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.equals(Object) : org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.equals(Object) : (195, 201) --> (195, 201)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[]) : org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[]) : (1525, 1539) --> (1525, 1539)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType) : org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType) : (1819, 1827) --> (1819, 1827)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>) : org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>) : (1758, 1772) --> (1758, 1772)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.WildcardTypeImpl(Type[],Type[]) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.WildcardTypeImpl(Type[],Type[]) : (229, 237) --> (229, 237)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.equals(Object) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.equals(Object) : (263, 269) --> (263, 269)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withUpperBounds(Type...) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withUpperBounds(Type...) : (63, 71) --> (63, 71)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withLowerBounds(Type...) : org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withLowerBounds(Type...) : (73, 81) --> (73, 81)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType) : org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType) : (1774, 1799) --> (1774, 1799)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.GenericArrayTypeImpl(Type) : org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.GenericArrayTypeImpl(Type) : (99, 105) --> (99, 105)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.equals(Object) : org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.equals(Object) : (123, 129) --> (123, 129)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int) : org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int) : (659, 683) --> (659, 683)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder) : org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder) : (643, 657) --> (643, 657)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int) : org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int) : (520, 541) --> (520, 541)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence) : org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence) : (504, 518) --> (504, 518)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer) : org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer) : (35, 61) --> (35, 61)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char) : org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char) : (72, 79) --> (72, 79)
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char) : org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char) : (63, 70) --> (63, 70)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer) : (28, 41) --> (28, 41)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit) : org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit) : (1656, 1711) --> (1656, 1711)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : (412, 467) --> (412, 467)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : (576, 590) --> (576, 590)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : (600, 615) --> (600, 615)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.adjustYear(int) : org.apache.commons.lang3.time.FastDateParser.adjustYear(int) : (395, 403) --> (395, 403)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.init(Calendar) : org.apache.commons.lang3.time.FastDateParser.init(Calendar) : (142, 184) --> (142, 184)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale) : (748, 782) --> (748, 782)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FormatCache.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale) : org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale) : (146, 161) --> (146, 161)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale) : org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale) : (163, 178) --> (163, 178)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale) : org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale) : (128, 144) --> (128, 144)
[DEBUG] 
[DEBUG] === Inspecting commit: ba8c6f6d : Add some missing tests. ===
[DEBUG] 
[DEBUG] === Inspecting commit: d9658656 : LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 8f9a427d : Fix broken JavaDoc ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 68a6fd61 : TypeUtils wildcard fixes ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType) : (1801, 1817) --> (1801, 1817)
[DEBUG] Update: METHOD: org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type) : (1616, 1630) --> (1616, 1630)
[DEBUG] 
[DEBUG] === Inspecting commit: 6f688e40 : add some failing tests with wildcards ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9a16b763 : Using Validate where possible in time package. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : (116, 160) --> (117, 159)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : (256, 411) --> (255, 409)
[DEBUG] 
[DEBUG] === Inspecting commit: 5a28357b : Using Validate where possible in math package. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(double...) : org.apache.commons.lang3.math.IEEE754rUtils.max(double...) : (149, 173) --> (150, 173)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(double...) : org.apache.commons.lang3.math.IEEE754rUtils.min(double...) : (29, 53) --> (31, 55)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(float...) : org.apache.commons.lang3.math.IEEE754rUtils.min(float...) : (55, 79) --> (57, 80)
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(float...) : org.apache.commons.lang3.math.IEEE754rUtils.max(float...) : (175, 199) --> (175, 198)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.math.NumberUtils.validateArray(Object) : org.apache.commons.lang3.math.NumberUtils.validateArray(Object) : (1086, 1098) --> (1087, 1098)
[DEBUG] 
[DEBUG] === Inspecting commit: a2c356d7 : Using Validate where possible in concurrent package. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable) : org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable) : (134, 150) --> (136, 150)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int) : org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int) : (190, 224) --> (192, 224)
[DEBUG] 
[DEBUG] === Inspecting commit: 10641f9a : Using Validate where possible in builder package. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int) : org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int) : (521, 547) --> (522, 544)
[DEBUG] 
[DEBUG] === Inspecting commit: 37283444 : LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(double...) : org.apache.commons.lang3.math.IEEE754rUtils : (149, 173)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(double...) : org.apache.commons.lang3.math.IEEE754rUtils : (29, 53)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(float...) : org.apache.commons.lang3.math.IEEE754rUtils : (55, 79)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(float...) : org.apache.commons.lang3.math.IEEE754rUtils : (175, 199)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(double[]) : org.apache.commons.lang3.math.IEEE754rUtils : (147, 170)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(float[]) : org.apache.commons.lang3.math.IEEE754rUtils : (54, 77)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.max(float[]) : org.apache.commons.lang3.math.IEEE754rUtils : (172, 195)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.IEEE754rUtils.min(double[]) : org.apache.commons.lang3.math.IEEE754rUtils : (29, 52)
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(float...) : org.apache.commons.lang3.math.NumberUtils : (904, 930)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(double...) : org.apache.commons.lang3.math.NumberUtils : (1030, 1056)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(int...) : org.apache.commons.lang3.math.NumberUtils : (958, 980)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(long...) : org.apache.commons.lang3.math.NumberUtils : (780, 802)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(byte...) : org.apache.commons.lang3.math.NumberUtils : (1006, 1028)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(int...) : org.apache.commons.lang3.math.NumberUtils : (804, 826)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(byte...) : org.apache.commons.lang3.math.NumberUtils : (852, 874)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(float...) : org.apache.commons.lang3.math.NumberUtils : (1058, 1084)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(short...) : org.apache.commons.lang3.math.NumberUtils : (828, 850)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(short...) : org.apache.commons.lang3.math.NumberUtils : (982, 1004)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.min(double...) : org.apache.commons.lang3.math.NumberUtils : (876, 902)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.math.NumberUtils.max(long...) : org.apache.commons.lang3.math.NumberUtils : (934, 956)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(short[]) : org.apache.commons.lang3.math.NumberUtils : (974, 995)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(long[]) : org.apache.commons.lang3.math.NumberUtils : (928, 949)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(long[]) : org.apache.commons.lang3.math.NumberUtils : (780, 801)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(int[]) : org.apache.commons.lang3.math.NumberUtils : (803, 824)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(double[]) : org.apache.commons.lang3.math.NumberUtils : (1020, 1045)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(float[]) : org.apache.commons.lang3.math.NumberUtils : (1047, 1072)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(double[]) : org.apache.commons.lang3.math.NumberUtils : (872, 897)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(byte[]) : org.apache.commons.lang3.math.NumberUtils : (997, 1018)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(short[]) : org.apache.commons.lang3.math.NumberUtils : (826, 847)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(byte[]) : org.apache.commons.lang3.math.NumberUtils : (849, 870)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.max(int[]) : org.apache.commons.lang3.math.NumberUtils : (951, 972)
[DEBUG] Delete: METHOD: org.apache.commons.lang3.math.NumberUtils.min(float[]) : org.apache.commons.lang3.math.NumberUtils : (899, 924)
[DEBUG] 
[DEBUG] === Inspecting commit: 10f136bb : Use the term distance in documentation of getFuzzyDistance ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: a2f44d03 : Make checkstyle happy ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,String) : org.apache.commons.lang3.StringUtils.wrap(String,String) : (7747, 7782) --> (7748, 7784)
[DEBUG] Update: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,char) : org.apache.commons.lang3.StringUtils.wrap(String,char) : (7718, 7745) --> (7718, 7746)
[DEBUG] 
[DEBUG] === Inspecting commit: b78295b4 : LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale) : org.apache.commons.lang3.StringUtils : (7075, 7152)
[DEBUG] 
[DEBUG] === Inspecting commit: 287aba5b : Tab police ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d16c62ae : Clarify that 0.d is decimal, not octal ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 21cbe955 : Explained treatment of leading zeroes in isNumber() method Javadoc. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 39a5b774 : Corrected Javadoc example. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: daf4b4f9 : Further tidying of Javadoc. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 01fe9183 : Correct wrong documentation regarding extensibility of ImmutablePair and ImmutableTriple. This closes #13 from github. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: bd7a8d50 : Dummy commit which closes #22 from github ===
[DEBUG] 
[DEBUG] === Inspecting commit: 9376d1eb : Dummy commit which closes #21 from github ===
[DEBUG] 
[DEBUG] === Inspecting commit: da147fcb : Add Thiago Andrade to the list of contributors for his contributions via github. ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4b28af1e : Fix typo ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: c3d65461 : LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/StringUtils.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,String) : org.apache.commons.lang3.StringUtils : (7672, 7707)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.StringUtils.wrap(String,char) : org.apache.commons.lang3.StringUtils : (7639, 7670)
[DEBUG] 
[DEBUG] === Inspecting commit: 80f19882 : Point potential contributors to the TagList report ===
[DEBUG] 
[DEBUG] === Inspecting commit: cef1ca2f : Use finer grained TagList configuration proposed by Bernd Eckenfels for the csv components ===
[DEBUG] 
[DEBUG] === Inspecting commit: 7d6e0bec : LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: FIELD: org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN : String : org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN : String : (62, 69) --> (62, 70)
[DEBUG] 
[DEBUG] === Inspecting commit: d910918f : LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/math/NumberUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 75fbc009 : LANG-731: Better Javadoc for BitField class ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/BitField.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: d44f573f : Add Michael Osipov to the list of contributors for his contributions to DurationFormatUtils ===
[DEBUG] 
[DEBUG] === Inspecting commit: fd54d42f : LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long) : org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long) : (72, 84) --> (72, 83)
[DEBUG] 
[DEBUG] === Inspecting commit: 00dc479f : Remove tab characters ===
[DEBUG] 
[DEBUG] === Inspecting commit: 2f0beab7 : Remove more debug output (which is never actually written out) ===
[DEBUG] 
[DEBUG] === Inspecting commit: 98f76f4c : Remove debug output from test ===
[DEBUG] 
[DEBUG] === Inspecting commit: 4b74c385 : LANG-1003: DurationFormatUtils are not able to handle negative duration/periods. Document new behavior for negative inputs. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : (114, 157) --> (117, 161)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : (250, 404) --> (257, 412)
[DEBUG] 
[DEBUG] === Inspecting commit: 24863005 : Removed unnecessary multiplication by one. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/Conversion.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int) : (1567, 1599) --> (1567, 1599)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int) : (1025, 1060) --> (1025, 1060)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int) : (1135, 1169) --> (1135, 1169)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int) : (1062, 1096) --> (1062, 1096)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int) : (1098, 1133) --> (1098, 1133)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int) : (1636, 1667) --> (1636, 1667)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int) : (1601, 1634) --> (1601, 1634)
[DEBUG] Update: METHOD: org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int) : (1533, 1565) --> (1533, 1565)
[DEBUG] 
[DEBUG] === Inspecting commit: 64ef8a80 : LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean) : (114, 154) --> (114, 157)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone) : (247, 398) --> (250, 404)
[DEBUG] 
[DEBUG] === Inspecting commit: 358f139d : Organize imports, don't use wildcard imports ===
[DEBUG] 
[DEBUG] === Inspecting commit: 548e5c42 : Use org.junit.Assert.assertArrayEquals ===
[DEBUG] 
[DEBUG] === Inspecting commit: fe354beb : Remove commented out test code ===
[DEBUG] 
[DEBUG] === Inspecting commit: b4b51a8f : <action issue="LANG-1001" type="fix" dev="ggregory" due-to="Michael Osipov">ISO 8601 misspelled throughout the Javadocs</action> ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateFormat.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/StopWatch.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 61259510 : LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/StrBuilder.java ---
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable) : org.apache.commons.lang3.text.StrBuilder : (2657, 2681)
[DEBUG] Insert: METHOD: org.apache.commons.lang3.text.StrBuilder.readFrom(Readable) : org.apache.commons.lang3.text.StrBuilder : (427, 466)
[DEBUG] 
[DEBUG] === Inspecting commit: d13a4026 : Remove keyValues map  per sebb's suggestion ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale) : (601, 616) --> (600, 615)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String) : (631, 647) --> (630, 646)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder) : (618, 629) --> (617, 628)
[DEBUG] Delete: FIELD: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.keyValues : Map<String, Integer> : org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy : (598, 598)
[DEBUG] 
[DEBUG] === Inspecting commit: d9bd12dc : Rename TextStrategy to CaseInsensitiveTextStrategy per sebb's suggestion ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar) : org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar) : (535, 554) --> (535, 554)
[DEBUG] Insert: CLASS: org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy : org.apache.commons.lang3.time.FastDateParser : (592, 648)
[DEBUG] Delete: CLASS: org.apache.commons.lang3.time.FastDateParser.TextStrategy : org.apache.commons.lang3.time.FastDateParser : (592, 648)
[DEBUG] 
[DEBUG] === Inspecting commit: 454fd1ea : Add another missing ticket to changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: b4647110 : Add missing bug fix to changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 804e5f8c : Merge qualifiers ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : (618, 629) --> (618, 629)
[DEBUG] 
[DEBUG] === Inspecting commit: f4b7d62a : LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateFormat.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 649a089d : LANG-1088 - toLowerCase should use locale, additional unit tests for case-insensitive matching ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : (621, 637) --> (623, 639)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : (592, 606) --> (593, 608)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.locale : Locale : org.apache.commons.lang3.time.FastDateParser.TextStrategy : (589, 589)
[DEBUG] 
[DEBUG] === Inspecting commit: 3b2de24a : LANG-1088 - FastDateParser should be case insensitive ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/FastDateParser.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String) : (614, 630) --> (621, 637)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale) : (590, 599) --> (592, 606)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder) : (601, 612) --> (608, 619)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.time.FastDateParser.TextStrategy.lKeyValues : Map<String, Integer> : org.apache.commons.lang3.time.FastDateParser.TextStrategy : (590, 590)
[DEBUG] 
[DEBUG] === Inspecting commit: e288d39b : Use enhanced for loop ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean) : (401, 458) --> (401, 456)
[DEBUG] Update: METHOD: org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object) : (567, 582) --> (565, 579)
[DEBUG] 
[DEBUG] === Inspecting commit: 5d9141e2 : Added Javadoc to clear checkstyle error ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: fbb0f7f8 : LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/text/WordUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean) : org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean) : (100, 225) --> (100, 229)
[DEBUG] 
[DEBUG] === Inspecting commit: d99f5817 : Clean up Javadocs. You do not need to refer to classes in java.lang with a FQCN. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] 
[DEBUG] === Inspecting commit: 3efd6ccd : Refactor magic number into constant. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : (106, 132) --> (108, 134)
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : (60, 83) --> (62, 85)
[DEBUG] Insert: FIELD: org.apache.commons.lang3.CharSequenceUtils.NOT_FOUND : int : org.apache.commons.lang3.CharSequenceUtils : (29, 29)
[DEBUG] 
[DEBUG] === Inspecting commit: 4eb70a5f : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence) : org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence) : (155, 172) --> (155, 171)
[DEBUG] 
[DEBUG] === Inspecting commit: 70d9e8b2 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int) : (174, 215) --> (174, 214)
[DEBUG] 
[DEBUG] === Inspecting commit: 39168bb7 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int) : (106, 133) --> (106, 132)
[DEBUG] 
[DEBUG] === Inspecting commit: 3e333041 : Statement unnecessarily nested within else clause. ===
[DEBUG] --- Modify File: src/main/java/org/apache/commons/lang3/CharSequenceUtils.java ---
[DEBUG] Update: METHOD: org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int) : (60, 84) --> (60, 83)
[DEBUG] 
[DEBUG] === Inspecting commit: 6b438fe9 : Add next version to changes.xml ===
[DEBUG] 
[DEBUG] === Inspecting commit: 8a528639 : Document 3.3.2 in doap ===
[DEBUG] 
[DEBUG] === Inspecting commit: 5bcbf2e8 : Update README.md after release 3.3.2 ===
[DEBUG] 
[DEBUG] === Inspecting commit: d72d2b08 : Document 3.3.2 release date ===
[DEBUG] 
[DEBUG] === Inspecting commit: 01056403 : Bump version after release of 3.3.2 ===
[DEBUG] 

[OUTPUT] Analysing Hunk Dependency ... 
[DEBUG] Done: LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java ...
[DEBUG] Done: LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.
[DEBUG] Done: Add next version to changes.xml
[DEBUG] Done: LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover.
[DEBUG] Done: LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java ...
[DEBUG] Done: LANG-1077 StringUtils.ordinalIndexOf("aaaaaa", "aa", 2) != 3 in StringUtils
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ...
[DEBUG] Done: LANG-1072 Duplicated "0x" check in createBigInteger in NumberUtils
[DEBUG] Done: LANG-1073 Read wrong component type of array in add in ArrayUtils
[DEBUG] Done: Document 3.3.2 release date
[DEBUG] Done: Javadoc fix for LANG-1064.
[DEBUG] Done: LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/CharUtilsTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ...
[DEBUG] Done: LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java ...
[DEBUG] Done: LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.
[DEBUG] Done: Remove tab characters
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ...
[DEBUG] Done: LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/DateFormatUtilsTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java ...
[DEBUG] Done: Added missing support for ISO 8601 parsing and printing using "ZZ" pattern (code now matches Javadoc). Addresses LANG-1000.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java ...
[DEBUG] Done: LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.
[DEBUG] Done: Document the changes from LANG-1027
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java ...
[DEBUG] Done: [LANG-1033] Add StringUtils.countMatches(CharSequence, char)
[DEBUG] Done: LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github.
[DEBUG] Done: Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons
[DEBUG] Done: Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java ...
[DEBUG] Done: LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/StringUtilsTest.java ...
[DEBUG] Done: LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.
[DEBUG] Done: LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java ...
[DEBUG] Done: LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.
[DEBUG] Done: LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/StringUtilsTest.java ...
[DEBUG] Done: LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.
[DEBUG] Done: LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ...
[DEBUG] Done: LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.
[DEBUG] Done: LANG-731: Better Javadoc for BitField class
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ...
[DEBUG] Done: LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ...
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/StopWatchTest.java ...
[DEBUG] Done: LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java ...
[DEBUG] Done: <action issue="LANG-1001" type="fix" dev="ggregory" due-to="Michael Osipov">ISO 8601 misspelled throughout the Javadocs</action>
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java ...
[DEBUG] Done: LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.
[DEBUG] Done: LANG-1003: DurationFormatUtils are not able to handle negative duration/periods. Document new behavior for negative inputs.
[DEBUG] Done: Add another missing ticket to changes.xml
[DEBUG] Done: Add missing bug fix to changes.xml
[DEBUG] Excluding src/test/java/org/apache/commons/lang3/text/WordUtilsTest.java ...
[DEBUG] Done: LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya
[DEBUG] Done: Refactor magic number into constant.
[DEBUG] Done: Statement unnecessarily nested within else clause.
[DEBUG] Done: Statement unnecessarily nested within else clause.
[DEBUG] Done: Simplify isEmpty be reusing getLength
[DEBUG] Done: Use enhanced for loop instead of indexed based iteration
[DEBUG] Hunk depends on: c5332828 : LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover. : added back.
[DEBUG] Hunk depends on: 4a2cc4f5 : LANG-1073 Read wrong component type of array in add in ArrayUtils : added back.
[DEBUG] Hunk depends on: e5a3039f : LANG-1077 StringUtils.ordinalIndexOf("aaaaaa", "aa", 2) != 3 in StringUtils : added back.
[DEBUG] Hunk depends on: 0162032a : LANG-1072 Duplicated "0x" check in createBigInteger in NumberUtils : added back.
[DEBUG] Hunk depends on: 2afdf4d0 : Javadoc fix for LANG-1064. : added back.
[DEBUG] Hunk depends on: 635e41ea : LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne. : added back.
[DEBUG] Hunk depends on: ef26a667 : LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub. : added back.
[DEBUG] Hunk depends on: 4477ae69 : LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel. : added back.
[DEBUG] Hunk depends on: aa3f1749 : Remove tab characters : added back.
[DEBUG] Hunk depends on: 7406d02e : Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons : added back.
[DEBUG] Hunk depends on: 22b6781a : Added missing support for ISO 8601 parsing and printing using "ZZ" pattern (code now matches Javadoc). Addresses LANG-1000. : added back.
[DEBUG] Hunk depends on: 2154d5fb : Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear : added back.
[DEBUG] Hunk depends on: bc8e2380 : LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github. : added back.
[DEBUG] Hunk depends on: 1384457a : [LANG-1033] Add StringUtils.countMatches(CharSequence, char) : added back.
[DEBUG] Hunk depends on: 5ae1b023 : Document the changes from LANG-1027 : added back.
[DEBUG] Hunk depends on: de67dec0 : LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller. : added back.
[DEBUG] Hunk depends on: b1caa21b : LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha : added back.
[DEBUG] Hunk depends on: 6240a05c : LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers. : added back.
[DEBUG] Hunk depends on: 7022c194 : LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez. : added back.
[DEBUG] Hunk depends on: d9658656 : LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans. : added back.
[DEBUG] Hunk depends on: 37283444 : LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade. : added back.
[DEBUG] Hunk depends on: b78295b4 : LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens. : added back.
[DEBUG] Hunk depends on: c3d65461 : LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade. : added back.
[DEBUG] Hunk depends on: 7d6e0bec : LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov. : added back.
[DEBUG] Hunk depends on: d910918f : LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade. : added back.
[DEBUG] Hunk depends on: 75fbc009 : LANG-731: Better Javadoc for BitField class : added back.
[DEBUG] Hunk depends on: fd54d42f : LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov : added back.
[DEBUG] Hunk depends on: 4b74c385 : LANG-1003: DurationFormatUtils are not able to handle negative duration/periods. Document new behavior for negative inputs. : added back.
[DEBUG] Hunk depends on: 64ef8a80 : LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov. : added back.
[DEBUG] Hunk depends on: b4b51a8f : <action issue="LANG-1001" type="fix" dev="ggregory" due-to="Michael Osipov">ISO 8601 misspelled throughout the Javadocs</action> : added back.
[DEBUG] Hunk depends on: 61259510 : LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky. : added back.
[DEBUG] Hunk depends on: 454fd1ea : Add another missing ticket to changes.xml : added back.
[DEBUG] Hunk depends on: b4647110 : Add missing bug fix to changes.xml : added back.
[DEBUG] Hunk depends on: fbb0f7f8 : LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya : added back.
[DEBUG] Hunk depends on: 39168bb7 : Statement unnecessarily nested within else clause. : added back.
[DEBUG] Hunk depends on: 6b438fe9 : Add next version to changes.xml : added back.
[DEBUG] Hunk depends on: d72d2b08 : Document 3.3.2 release date : added back.
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.text.StrBuilder.append(CharSequence)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.CharUtils.unicodeEscaped(char)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.math.NumberUtils.createNumber(String)
org.apache.commons.lang3.math.NumberUtils.getMantissa(String)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.math.NumberUtils.createNumber(String)}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(byte[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(long[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt)
org.apache.commons.lang3.ArrayUtils.isSorted(int[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(char[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(short[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])}
[DEBUG] Side-effects: 
[DEBUG] {org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int)}
[DEBUG] src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java : bc91bedd45c5f51175f8686332ed4c72fbe98652
[DEBUG] src/main/java/org/apache/commons/lang3/SystemUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java : bf6ee5c56eb32bb572c240d765d542c048ec9565
[DEBUG] src/main/java/org/apache/commons/lang3/time/FastDateParser.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java : 635e41ea181c5fee8860a7044c84ae3557b51189
[DEBUG] src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java : 1f75a8f7cc28fef663eaca75e831c9da11ea2b0e
[DEBUG] src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java : 38ed1a07259862eceaad05c6581b7f34e85f6be7
[DEBUG] src/main/java/org/apache/commons/lang3/text/StrLookup.java : 63f1d6b83bc10a2880f5ec17a172fab284d2eff5
[DEBUG] src/main/java/org/apache/commons/lang3/Conversion.java : c9e3793ae7ed0cb7fe9ce3b217a50384526b8deb
[DEBUG] src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/text/StrBuilder.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java : bdb5d9723056941a0a29aabc2eaf81b2c96956b5
[DEBUG] src/main/java/org/apache/commons/lang3/BooleanUtils.java : ef26a667633275fa656b74b841f9e74a3a6879ab
[DEBUG] src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/time/DateUtils.java : 52e854e3bda9f1b92471884888f430345f73eca2
[DEBUG] src/main/java/org/apache/commons/lang3/CharUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/ClassUtils.java : d38919fcbda835f0ad82d65f25349bd7105b67cc
[DEBUG] src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java : de67dec0774115848a9f37feda05b522a716d1fb
[DEBUG] src/main/java/org/apache/commons/lang3/math/NumberUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java : 3728344459e91509c4b5b80d67a50c98063e08bd
[DEBUG] src/main/java/org/apache/commons/lang3/StringUtils.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java : inconsistent!
[DEBUG] src/main/java/org/apache/commons/lang3/ArrayUtils.java : ef26a667633275fa656b74b841f9e74a3a6879ab

[DEBUG] Original |H| 262
[DEBUG] Tracker:
[
010564038cec491d0ed1692115eb2003da328016 : []
d72d2b08dcc751a0e7c4d5cd4795fe9e94552080 : []
5bcbf2e8f0f31ec3cdb6bbb92813d17c5d64f9ac : []
8a528639542b401ed1e2759db716351dd058eab9 : []
6b438fe99b8c55d83f452b72503a2303b4b4c5d6 : []
3e3330412936fd5180bb99b5fe0c22575f82bb68 : [[org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int):UPD,TEST]]
39168bb734f42f2e74e4300644168f391fdc29c4 : [[org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int):UPD,DROP]]
70d9e8b23d924a15c1d79ec1d0ce42ee916a7cee : [[org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int):UPD,DROP]]
4eb70a5f436894008fae0325ae749efd110114d8 : [[org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence):UPD,DROP]]
3efd6ccdbf1131b8d0b2677cbbdb41d7a23929f0 : [[org.apache.commons.lang3.CharSequenceUtils.NOT_FOUND : int:INS,DROP], [org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int):UPD,TEST], [org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int):UPD,DROP]]
d99f581745097c9562f1d701a6da66cd81a550f2 : []
fbb0f7f88c84001e0a92dae6a71b7e43bda65a56 : [[org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean):UPD,DROP]]
5d9141e206043aae96a427f0fc1cb03eada282ed : []
e288d39ba32c66820e7e2d42a40f32295500962a : [[org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean):UPD,DROP]]
3b2de24af3b8a81d1946ea23ce05da11fc6398de : [[org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.lKeyValues : Map<String, Integer>:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale):UPD,DROP]]
649a089ddc4da251a3eefd1a792b34b782164191 : [[org.apache.commons.lang3.time.FastDateParser.TextStrategy.locale : Locale:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.TextStrategy(int,Calendar,Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP]]
f4b7d62ac57ec0c212287ed28721c8626b0f39ba : []
804e5f8c4fcb6253b2d512a123c28d437c131986 : [[org.apache.commons.lang3.time.FastDateParser.TextStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP]]
b46471100b98e6e800f93cc1882574264453a89d : []
454fd1ea0f279e2847685b603bfa912d7897edde : []
d9bd12dc92dde003c0130a2a8405702191d55261 : [[org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TextStrategy:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar):UPD,DROP]]
d13a40266f9b357d96b71b2ef6bc420443b61dd1 : [[org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.keyValues : Map<String, Integer>:DEL,DROP]]
612595106054d0ff2320cc15f88cfef8959e1531 : [[org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable):INS,DROP], [org.apache.commons.lang3.text.StrBuilder.readFrom(Readable):INS,DROP]]
b4b51a8fc9eed7274a045b2f3192d77782b0e4fa : []
fe354beb9353b71d83de55c84278ca13fa3b87c0 : []
548e5c42f53649b3f05692b7fc77c8a24642ee2f : []
358f139d1316df2b8efd7610afa3aa68d165334f : []
64ef8a80224443c81dfb198cbc567e1b2b9356a2 : [[org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean):UPD,DROP]]
248630054801b048e6629a37a62e9efd69a7a756 : [[org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int):UPD,DROP]]
4b74c385628ed1766209a79705a2d5986c23d02c : [[org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone):UPD,DROP]]
98f76f4c98a29aa4d6d03e326acc012480cefed0 : []
2f0beab7a86d0a5705b7fe0c24ed1e5b54f521ae : []
00dc479f6a1d204d557f4cb1d981ba236fe09565 : []
fd54d42f78ae17a96fc005d2fcd080807343aad7 : [[org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long):UPD,DROP]]
d44f573f7c11046543e2f3007a334394afd000f9 : []
75fbc009dd10b4436d59a7528f1854fd3364e18c : []
d910918faf359f8144d4195ead470fd0921554dc : []
7d6e0beccb1345078b3051504e623f399c012fd4 : [[org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN : String:UPD,DROP]]
cef1ca2f77873e60126617f354dec89cee752e79 : []
80f198826443bec65bf032e729d40c3b6cb2a665 : []
c3d65461a327b98ce5f582c45a48b6bb2b21d03d : [[org.apache.commons.lang3.StringUtils.wrap(String,String):INS,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,char):INS,DROP]]
4b28af1e8aa1921121c934ef49f84ba48f1fb6b7 : []
da147fcb797967dd5e422e88a09983d5fe2ab28b : []
9376d1eb4469b081f623ff80a72ac65f4f7a27b6 : []
bd7a8d5004cafd50f9ffa431b506178f148657cb : []
01fe91839a86c675e312293095956c07d87e935c : []
daf4b4f98c4b640388396f072d2c8adef7a91e5d : []
39a5b774ea5f3b09376132d8beb327c675fd596b : []
21cbe9553f0c1b96493eccc7d5e048358b56d7f3 : []
d16c62aed209aada9868c07e139d2dd48dc81536 : []
287aba5b2eff81c0f7c62cb37a6adfc5e331f99f : []
b78295b4faca2fd26024a26ef4638b0dce5d40a3 : [[org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale):INS,DROP]]
a2f44d03fed7270d3500ac8b9b0fc934c49c9a4a : [[org.apache.commons.lang3.StringUtils.wrap(String,String):UPD,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,char):UPD,DROP]]
10f136bb012c499a4cf3c676a5ec625559fef1c6 : []
3728344459e91509c4b5b80d67a50c98063e08bd : [[org.apache.commons.lang3.math.IEEE754rUtils.max(double...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(int[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(double[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(byte...):INS,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(double[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(byte...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(int[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(float[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(short...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(float...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(int...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(long...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(double...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(int...):INS,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(double...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(long...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(short...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.min(float[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(double[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(byte[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(long[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(float...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(byte[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(short[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.min(long[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(double...):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.max(double[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(float[]):DEL,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(float[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(short[]):DEL,DROP], [org.apache.commons.lang3.math.NumberUtils.max(float...):INS,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(float...):INS,DROP]]
10641f9ae7d1d2f30aec5bc146a8d5b49c22d0a0 : [[org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int):UPD,DROP]]
a2c356d7a639768bdbc67ababe751519233e4656 : [[org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable):UPD,DROP], [org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int):UPD,DROP]]
5a28357bb55457094123e45646af0e52996f7032 : [[org.apache.commons.lang3.math.IEEE754rUtils.min(float...):UPD,DROP], [org.apache.commons.lang3.math.NumberUtils.validateArray(Object):UPD,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.min(double...):UPD,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(float...):UPD,DROP], [org.apache.commons.lang3.math.IEEE754rUtils.max(double...):UPD,DROP]]
9a16b763d9c51b788415c5f83b6e9221a3cf5d0d : [[org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean):UPD,DROP]]
6f688e40bacd89ff3bbd9dedfcf593d1e43843d0 : []
68a6fd6125302169a5a0687e795d26b5cbd97303 : [[org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType):UPD,DROP]]
8f9a427dc67e99929021a21f064061a507ee2ee4 : []
d96586563cc2e943320393fcd84633083270363e : []
ba8c6f6d6fca51a4dd25d1bfaf53a48f12d1add3 : []
96c30e248d6d27a1df8e26be14aa10c633168cdb : [[org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale):UPD,DROP], [org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String):UPD,DROP], [org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object):UPD,DROP], [org.apache.commons.lang3.StringUtils.uncapitalize(String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.adjustYear(int):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder):UPD,DROP], [org.apache.commons.lang3.StringUtils.capitalize(String):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type):UPD,DROP], [org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale):UPD,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,String):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextLong(long,long):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<?>):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence...):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.equals(Object):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextBytes(int):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit):UPD,DROP], [org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type...):UPD,DROP], [org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence...):UPD,DROP], [org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object...):UPD,DROP], [org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>):UPD,DROP], [org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence):UPD,DROP], [org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale):UPD,DROP], [org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String):UPD,DROP], [org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.equals(Object):UPD,DROP], [org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.toString(Type):UPD,DROP], [org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType):UPD,DROP], [org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char):UPD,DROP], [org.apache.commons.lang3.StringUtils.wrap(String,char):UPD,DROP], [org.apache.commons.lang3.builder.Diff.Diff(String):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int):UPD,DROP], [org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String):UPD,DROP], [org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection<?>):UPD,DROP], [org.apache.commons.lang3.reflect.TypeLiteral.equals(Object):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextInt(int,int):UPD,DROP], [org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>...):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>):UPD,DROP], [org.apache.commons.lang3.LocaleUtils.toLocale(String):UPD,DROP], [org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String):UPD,DROP], [org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[]):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextFloat(float,float):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence...):UPD,DROP], [org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.builder.Diff.setValue(T):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withUpperBounds(Type...):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.ParameterizedTypeImpl(Class<?>,Type,Type[]):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.init(Calendar):UPD,DROP], [org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E>,long...):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>):UPD,DROP], [org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence...):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[]):UPD,DROP], [org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int):UPD,DROP], [org.apache.commons.lang3.StringUtils.join(Iterator<?>,char):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.GenericArrayTypeImpl(Type):UPD,DROP], [org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String):UPD,DROP], [org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer):UPD,DROP], [org.apache.commons.lang3.RandomUtils.nextDouble(double,double):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.withLowerBounds(Type...):UPD,DROP], [org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type):UPD,DROP], [org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type):UPD,DROP], [org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.equals(Object):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type):UPD,DROP], [org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.WildcardTypeImpl(Type[],Type[]):UPD,DROP]]
5a1101da75a0c778d76e660ec78f6db348453ff0 : []
e3ee532338219f823129634d79cb547dcd5588b4 : [[org.apache.commons.lang3.ClassUtils.getCanonicalName(String):UPD,DROP]]
0ef747156b90cdbf2e316c0a5190f2c423b78529 : [[org.apache.commons.lang3.ClassUtils.getCanonicalName(String):UPD,DROP]]
38334883a68b173a1eb5bb954b5323a7fce4320f : [[org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int):UPD,DROP]]
b52a49ab1c677dbe1079df710711a9b8a63ded5f : [[org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer):UPD,DROP]]
8e757f11381508741fe8d340307c91e5efb14f63 : [[org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer):UPD,DROP]]
93b1808e523c252098139c37ee5b23324e855b4a : [[org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List<String>):UPD,DROP]]
299ea79d667e32ac7a428bf955294bb62093f415 : [[org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass):UPD,DROP]]
f7e5f2c877a07c31010db8554125e77db6a605cc : [[org.apache.commons.lang3.LocaleUtils.toLocale(String):UPD,DROP]]
c987d1631f43b8c533d54aca085b9d1f4c10b98d : [[org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int):UPD,DROP]]
082eb39c9f97b13fdd178b69533920a174e8b68c : []
e769c18954c3fe075a51e9df6ad10b7b31eb372d : [[org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int):UPD,DROP]]
c9e3793ae7ed0cb7fe9ce3b217a50384526b8deb : [[org.apache.commons.lang3.Conversion.FTTF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTTF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FTFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char):UPD,DROP], [org.apache.commons.lang3.Conversion.FFTF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.hexDigitToBinary(char):UPD,DROP], [org.apache.commons.lang3.Conversion.FTTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TFTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FTFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFTT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TFFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.FFFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TTFT : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TFFF : boolean[]:INS,DROP], [org.apache.commons.lang3.Conversion.TFTF : boolean[]:INS,DROP]]
2e9a359fb59bfd4fc3734bb81d689da7d7d2c0e7 : [[org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int):UPD,DROP]]
cf832560dd13bb154d6c56df669ff6b691f8e5f9 : []
7b33ab10def0b53d8d04c6590f7f5f5be3025085 : []
0ff8493544253e310620f2cdfcbd157be07a0a51 : [[org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.invoke(Object,Method,Object[]):UPD,DROP]]
60b79a908257f082b49bdaed81057b190a150842 : [[org.apache.commons.lang3.math.Fraction.pow(int):UPD,DROP], [org.apache.commons.lang3.math.Fraction.invert():UPD,DROP], [org.apache.commons.lang3.math.Fraction.getFraction(String):UPD,DROP]]
8a95db3d42432490ef2d2e3d054d97f4cdc0f28e : []
dd74cf1da57ed432ce38631baebe6882419b01e6 : [[org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>):UPD,DROP]]
71966110f7918a6366f97ded3bab25c7b5864cb8 : [[org.apache.commons.lang3.LocaleUtils.toLocale(String):UPD,DROP]]
248fd21601c1156cbd58558a7ca23a09adfcef88 : [[org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char):UPD,DROP], [org.apache.commons.lang3.Conversion.hexDigitToBinary(char):UPD,DROP]]
c8e024f8cd00587df3e79632ef8613b150eeb392 : []
4fcfad957dd92580111a1c7a2e282d0a9cadd110 : []
7022c194e0a5a3f5e92908068d95ddf2216ca70b : [[org.apache.commons.lang3.math.NumberUtils.isParsable(String):INS,DROP]]
673dbc5794906825c48545eb7ef76fb544754999 : []
6240a05c12914083adbe8c7c53e7e40ef42931dd : [[org.apache.commons.lang3.math.NumberUtils.isParsable(String):UPD,DROP]]
967fdd064c6d67774204d1b2e93301435f4d6a64 : []
b1caa21bf5109328d7e3f880c3da6b7d658c3abf : [[org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence):UPD,DROP], [org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence):UPD,DROP], [org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence...):UPD,DROP], [org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T):UPD,DROP]]
88dd10fa4bfee43f30563760c4523e8a6c7821a3 : []
03aa1e7078ce6cc6df11c159846002836fd171ac : []
de67dec0774115848a9f37feda05b522a716d1fb : [[org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP], [org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP], [org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP], [org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class<?>,Class<? extends Annotation>):INS,DROP]]
3fa5334ac08fc7ce1a86d5b34fbcd8cfea85ed23 : []
5ae1b02383a6e1427e38280cbf8353e1feef6a91 : []
9b2357cfb1f2c09cca4c24789c4bb7a745201be8 : []
a67075b7830e77063056d0a7e89fb9d4e0744abb : []
1384457a3982588b458f4b9c3040b0458ee99749 : [[org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char):INS,DROP]]
84c43fee7bd24538f671a07a16f7edc079d00643 : []
092d6da56691fbd7212229c5a0a09bdac80d1510 : []
bc8e23808b9d8d0c9b67270ef35d04ebd9d89cc8 : [[org.apache.commons.lang3.StringUtils.WHITESPACE_PATTERN : Pattern:DEL,DROP], [org.apache.commons.lang3.StringUtils.normalizeSpace(String):UPD,DROP]]
fceafc5df8ef8399c8abbc691bf621b18da46c94 : []
01a950e320d0c63972befbf0cdd085cb3bc73b7c : []
161ef971c43ee529ca8ac7f2619cd40fdc7c4b27 : []
1e6c8c1495d0c70899cb3e4bce2975901c9c2b04 : [[org.apache.commons.lang3.math.NumberUtils.isParsable(String):UPD,DROP]]
2154d5fbf8cc02cc4d51b63d6a532af06cccd0fc : []
bdb1a684a7b3876d6812d4e281c852face5a5229 : []
bc91bedd45c5f51175f8686332ed4c72fbe98652 : [[org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE : int:INS,DROP], [org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean):UPD,DROP], [org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String...):UPD,DROP], [org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE : int:INS,DROP]]
52e854e3bda9f1b92471884888f430345f73eca2 : [[org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING : int:DEL,DROP], [org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE : int:DEL,DROP], [org.apache.commons.lang3.time.DateUtils.ceiling(Date,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.round(Date,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.truncate(Date,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType):INS,DROP], [org.apache.commons.lang3.time.DateUtils.round(Calendar,int):UPD,DROP], [org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND : int:DEL,DROP], [org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,int):DEL,DROP]]
2aae22de23bf47566700c0ca2671d25e30c4a857 : []
22b6781a0b96418198dc9146e5191e51d381102f : [[org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.mISO8601 : boolean:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean):DEL,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_ISO_8601 : TimeZoneNumberRule:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON : TimeZoneNumberRule:UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.parsePattern():UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.TimeZoneNumberRule(boolean,boolean):INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_COLON : TimeZoneNumberRule:UPD,DROP]]
7406d02eb0f0dd812332b933b28207ac92e01f0e : []
aa3f1749864af5fe4971e09b100720ffabb78bdb : []
4477ae695211449db1df589e9fdc6de84bf4c640 : []
0648a3096bd8381ffdeb1352229ca3ad7cee8453 : []
a11351107ed7ce1b3a903e52c422156b25fa2061 : [[org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String):INS,DROP], [org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String):INS,DROP]]
ab570625ff5116c5c4554f615d45e4e4f3ee6275 : []
0d3d31972bb7e501ecda4fef4560d1d5e372e271 : []
b199af8d8290097e7535fef6f35146e2c783e143 : []
09cee6a4ada4c7bb69fb32be33001290b744e0fa : [[org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[]):UPD,DROP]]
ef26a667633275fa656b74b841f9e74a3a6879ab : [[org.apache.commons.lang3.ArrayUtils.isSorted(boolean[]):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(byte,byte):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(float[]):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(long,long):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(int,int):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(long[]):INS,DROP], [org.apache.commons.lang3.CharUtils.compare(char,char):INS,DROP], [org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte...):UPD,DROP], [org.apache.commons.lang3.math.NumberUtils.compare(short,short):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(char[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(short[]):INS,DROP], [org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(byte[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(double[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(T[],Comparator<T>):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(T[]):INS,DROP], [org.apache.commons.lang3.ArrayUtils.isSorted(int[]):INS,DROP]]
0661ab5c773a4423f3b4bded356fc29f041baac0 : []
85c18d0ee864d07081cc2af43d760f752496a7d3 : []
635e41ea181c5fee8860a7044c84ae3557b51189 : [[org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle:INS,DROP]]
2afdf4d05e38f63b56b0414cf524916681ab58aa : []
21201210e254fc7d73fa646f28ce786d94fa2d28 : []
0162032aa4ea1084e4bccbce6fbfc48ae4b0cc48 : [[org.apache.commons.lang3.math.NumberUtils.createBigInteger(String):UPD,DROP]]
a25d6d800bc75f0c55517f80f98ddc2d08c02c0c : []
d4cf0864ffd0f473b17e8e0cb19bbf70f45b2a77 : []
05763470e5a067eb153533d47baa73174ad9bd46 : []
e5a3039f7a1e727fca40db7357a9191b6a7cf41d : [[org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean):UPD,DROP]]
4a2cc4f5da0fbf9552d2b35aa457de64c47626b9 : [[org.apache.commons.lang3.ArrayUtils.add(T[],T):UPD,DROP]]
39022255c53737085c94c937433eaeafb5e7a867 : []
5f61aa071814235682545a31f3eacb5bddf52b24 : []
23d55b0b9cef1063f892623a5a4664d5706eba21 : []
9e26c7b6e9278e412178adcf6e54a20b2f7c7c70 : [[org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...):INS,TEST]]
a169e866c14bd411da0f676bd3f0149fd160fec9 : [[org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence...):UPD,TEST]]
5cb1ae60249745bb9b9f019b58eea5132abf1032 : []
c5332828bde1cc98dfa7a00f65a05bec51ede088 : []
517b43041a21d3fb10b22c0bdb16843253196903 : []
e4bcd50db3e243477c94c510465a4054c52155d5 : []
867d318faf5ab41dc9361ea21fee68be926d94a1 : []
00f00cce4a5e46faccecba1a9fbd223c5e991dd8 : []
2f97b43563ac15db48d5f622e99d35e547357e75 : []
e22e0669cdd18a94c9c27fc73f1709c405420c09 : []
c87380f0d932d115d1e46d0ee76958186c1a5c87 : [[org.apache.commons.lang3.builder.ToStringStyle.NO_CLASS_NAME_STYLE : ToStringStyle:INS,DROP], [org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle:INS,COMP]]
c4ddbe6456c9631c301171098a8ac016eb4e582c : [[org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE : ToStringStyle:INS,DROP], [org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle:INS,COMP]]
8d9662e0a18b1da998bba0bc952bca321779bcb5 : []
2515b3eb3207cde84be9112f1fbbf99d6e98b948 : []
42728e8e53f291fdcc930311e77770c6a5a8ed9b : []
d903279e4439325c34b89f17149c8dfa9b736fe8 : []
51607308c7ca4bf736a749b18aa722684a3b6b61 : []
9af6c5e07c0513623a0ec8c2f5314c09761f36bc : []
89c8519238523873277e76ea87422aebaf17898c : []
6eac3468d4569e64f18757225aa8f7fd6f2a5241 : [[org.apache.commons.lang3.SerializationUtils.roundtrip(T):UPD,DROP]]
38ed1a07259862eceaad05c6581b7f34e85f6be7 : [[org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle):UPD,DROP], [org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle,boolean):INS,DROP]]
cc991feadbcee678635f7831ad8091ab8698d508 : []
63f1d6b83bc10a2880f5ec17a172fab284d2eff5 : [[org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup():UPD,DROP], [org.apache.commons.lang3.text.StrLookup.copyProperties(Properties):INS,DROP], [org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP : StrLookup<String>:UPD,DROP], [org.apache.commons.lang3.text.StrLookup.SYSTEM_PROPERTIES_LOOKUP : StrLookup<String>:DEL,DROP]]
3181b407668fa09b83ff80126b5abdfc4074ab9a : []
ffc38b1f3b35ddfadb942240b9d2f933ec83d1be : [[org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object):UPD,DROP]]
d8c65c419f70c3fdcf2f9f6e7008be79461e282a : []
6b90fe3a2c6dff71367c3745e927d9e2d09b045d : []
58320be2fc7b292637cf0105b03d8a7be72c5227 : []
425d0577398bd071917814d04275ddc423c0815f : []
4792f854b0194e7083fd00de97d0944011aa5464 : []
813e18ff40a9a788e8b222626456378d3f93fb14 : []
ffdc4272f4d67e2673910cc3a361144dd34ca22f : []
bdb5d9723056941a0a29aabc2eaf81b2c96956b5 : [[org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch:INS,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get():UPD,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException>:INS,DROP]]
ed4d262ee9f3fdfcc6df5e684a8fbdf219376e27 : []
4975b8903e359963eb48e2ad3d4095de0cfa8032 : []
61836183b1d84a18dbcc084d1f41bcecf752f9fd : [[org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get():UPD,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.referenceExc : AtomicReference<ConcurrentException>:DEL,DROP], [org.apache.commons.lang3.concurrent.AtomicSafeInitializer.latch : CountDownLatch:DEL,DROP]]
45a6467088a08e447d7f2983551021b91c70ab49 : [[org.apache.commons.lang3.math.NumberUtils.createNumber(String):UPD,DROP], [org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int):INS,DROP], [org.apache.commons.lang3.math.NumberUtils.getMantissa(String):INS,DROP]]
2367948a0f7bbcf42cb3ef9d97216319a526d3eb : [[org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale):UPD,DROP]]
4d228ddfeaeeb98aee093dd3c79778ecdf5ffc08 : []
fb6a62cab0abbe30464bd407a77ef0e6387fcba0 : []
b321bde08dd2bb324d4742635f9e6ad70d58f2f2 : []
6ec90c452fb1af67ede5720822d4503600522ff4 : []
7c8443f66c1a1852d31a4f3b9f096e5eecef5eb5 : [[org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_STRATEGY : Strategy:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.HOUR12_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.HOUR24_OF_DAY_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_OF_DAY_STRATEGY : Strategy:DEL,DROP]]
3ec99c1f0b1971dafa0792ffb193a40e7f298942 : []
e124486951948174be956d4ca65807c097d68444 : []
8db46b1d09c52ad32fd9360a1f0d627784523f8c : []
ce7f4ed073b5a7b326871bd2339e355dbe9468fa : []
d38919fcbda835f0ad82d65f25349bd7105b67cc : [[org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int):INS,DROP], [org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int):INS,DROP]]
f29eb8e7f80502e64e612cda09d41ac8d779bc7c : []
a234f033b67a9068702ea2aa5c87e18dbc4f854b : []
1f75a8f7cc28fef663eaca75e831c9da11ea2b0e : [[org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer):UPD,DROP], [org.apache.commons.lang3.CharUtils.unicodeEscaped(char):UPD,DROP], [org.apache.commons.lang3.text.translate.CharSequenceTranslator.HEX_DIGITS : char[]:INS,DROP], [org.apache.commons.lang3.CharUtils.HEX_DIGITS : char[]:INS,DROP], [org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer):UPD,DROP]]
8aa1b44ada759e7948f87f55bb29ab87b5eb5469 : [[org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(StringBuffer,Calendar):UPD,DROP]]
04c8de2334516375ca3b2c84cf80dacc6e328774 : []
442e8c27055475283623299bfad6ad7d0f01040b : []
4556cc57c8130ed488bd8c4916129f727e3ac953 : []
bf3e77d897fb63d9142d0b3316fc2c6770d64f5b : []
08a854a4f93befababeb479ba2722cd0477a59f8 : []
d6f59c373f91c01d54482bb30a63a8d588b9eaa2 : []
adebbdc750821a377549ff0bb867e09eeedf6172 : []
1181552e7d260e860b7f62def1c39f7b0fcae4a4 : []
3328387a53e6abc26e171b97d8d3dc1c2b5d4971 : [[org.apache.commons.lang3.text.StrBuilder.append(CharBuffer):INS,DROP], [org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int):INS,DROP], [org.apache.commons.lang3.text.StrBuilder.append(CharSequence):UPD,DROP], [org.apache.commons.lang3.text.StrBuilder.append(Object):UPD,DROP]]
cbeb45b243897dd974978ac339c40c2915b638d1 : []
bf6ee5c56eb32bb572c240d765d542c048ec9565 : [[org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList<String>):UPD,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder,boolean):DEL,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String):UPD,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition,boolean):DEL,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition):INS,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition):UPD,DROP], [org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder):INS,DROP]]
7bb99bcb6bf0942c55a092c3d9274e2b080d4e95 : [[org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.prefixSet : HashSet<Character>:INS,DROP]]
bbfa8eb7df16baf17239b412ff7efa11c7e0926b : [[org.apache.commons.lang3.time.FastDatePrinter.parsePattern():UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_1_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.pattern : String:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.appendDigits(StringBuffer,int):INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int):INS,DROP], [org.apache.commons.lang3.time.FastDateParser.formatPattern : Pattern:UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_2_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO_8601_STRATEGY : Strategy:UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO_8601_3_STRATEGY : Strategy:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.PATTERN : String:DEL,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy(String):INS,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.appendTo(StringBuffer,Calendar):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy():DEL,DROP]]
8bc91a95f9b058a0798e3c775c14b12e82c3f4f5 : []
10e18ae9b47dfe04573884739823d64825105694 : [[org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(StringBuffer,int):UPD,DROP], [org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.estimateLength():UPD,DROP]]
aeaa333caae4f7d224606bc6e3815f18d02c6a15 : []
a74ed8ca048775e70a46af3c21ab89a4a85cd19b : []
0b7ef7f53f2f6dec4272b8d73928b62889a273eb : []
c8e96c0c733ea06ac7481c85f04a8e10ae262ec1 : []
a211ef288c45fdeee5f05fa4708a3d9e23d1cdd4 : []
2f62425c31dca0435c756e51289a5fc9dbaa5a94 : [[org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, String>:INS,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence[]...):UPD,DROP], [org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap : HashMap<String, CharSequence>:DEL,DROP]]
098395eaee0e0743516cf403cafc004b110230cf : []
2b7e1959359443485c175b7183100d7eb362f910 : []
1dc65ff986126f5e460e5347638d735fdc8cf52a : [[org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String):UPD,DROP]]
11c0df1d9ec508e4ae502c1b951907640a5c4804 : [[org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String):UPD,DROP], [org.apache.commons.lang3.SystemUtils.isOSVersionMatch(String,String):INS,DROP]]
3225ba64ce9f196b828d7c2ea124c03bd0d62955 : [[org.apache.commons.lang3.SystemUtils.IS_JAVA_1_9 : boolean:INS,DROP]]
fccd59e788cbde19874b5772c2ece9faa51692c3 : []
11279f7b9d0ff31cdc8c4746a1f6bf231e4d000f : []
4fdc606c3585c712575b674c1078ca3e326ccbb2 : []
346aae3b3288be12938fe9ab72872f42aa1a38d2 : []
e29f33c36677fa77d2ab66f412988875ef6edfa5 : [[org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object):UPD,DROP]]
f718ec1696f7971aeb70059a8f63857299c2109a : [[org.apache.commons.lang3.ObjectUtils.toString():DEL,DROP]]
3ab0bc35719792fd1fcbc98e8d9a4ffa4aa0c7df : []
bb01292edd9e7e99b9897f667b6e4b3f83aa1440 : [[org.apache.commons.lang3.text.ExtendedMessageFormat.ESCAPED_QUOTE : String:DEL,DROP]]
dfaa656f02d6339119af17ff39b1c183d9dc3a7d : [[org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat):UPD,DROP], [org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong):UPD,DROP], [org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble):UPD,DROP], [org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt):UPD,DROP], [org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean):UPD,DROP], [org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte):UPD,DROP], [org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort):UPD,DROP]]
3548f0ab8dc2d150e6687b25742fae0f76ba9c0f : []
56462a1e180c43aabd78a47077d4c195d907638b : []
06d724599d57c585f537dc7b5d73af90c16a4100 : []
79aceed0e31376af5756fd8ab314534b0ac1efa3 : []
9e575c4da256b3fed0544c39680e1b6dc202114d : []
6039dd3196d5c5ca17599a365faed42724481f7a : []
8c84cfda26c23af0d7106d6fec17c36a4853bfd4 : []
9c7b0fb8e681b901e5fc40c699e4730855f2c14d : [[org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2012 : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2008 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2003 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95 : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA : boolean:UPD,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP : boolean:UPD,DROP]]
09c42e7d12b2936ac0dc5c67200c28b6412bd395 : [[org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LION : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MAVERICKS : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PANTHER : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_MOUNTAIN_LION : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_CHEETAH : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_LEOPARD : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_SNOW_LEOPARD : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_YOSEMITE : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_PUMA : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_TIGER : boolean:INS,DROP], [org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX_JAGUAR : boolean:INS,DROP]]
e83123d13c023be60bd3df6ec9f917f98664985f : []
0d5d66692b33dc265e3660e06273307e0cfb59f8 : []
cdbf4758ed89075938dc8858348ec3b51548370c : []
1c532efdb5b008804977f6e291a8680dea865c41 : []
3f418c22009845ac71c86e945b745b38d6a57c0d : []
921ee58640d4c45b4d3c670cfd5d7c7b6a11c3ac : []
319588b45c847356a07b19e9e7323a46e319e3ae : [[org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[]):UPD,DROP]]
ef51b068aef14fa347710497cfb67aa9c6e65c0d : [[org.apache.commons.lang3.ArrayUtils.isEmpty(short[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(int[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(double[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(Object[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(char[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(long[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]):UPD,TEST], [org.apache.commons.lang3.ArrayUtils.isEmpty(float[]):UPD,TEST]]
173c162a45b4be6fcbf7a30c44d1953062a25086 : [[org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]):UPD,DROP], [org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]):UPD,DROP]]
9106f4ed5ac4c62ffef1913f7539742e4f0b1aac : []
c4c03a33c8b8b94eaf75d368473bdd10a21cd0df : []
d3252a5ca5571e0a97e9a31966ec6b847a3a8574 : []
2fefdc7dc3c9afbbe534ff69db5a754be0716b11 : [[org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int):UPD,DROP], [org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int):UPD,DROP]]
f525bc3ccd9cfb69603bd9778998263a458415d0 : [[org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[]):UPD,DROP], [org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class<?>,EqualsBuilder,boolean,String[]):UPD,DROP]]
9072a7615a54d5e753cf088326d9e14f1a5a6751 : []
11491d355da8a851d6badb6348b10d8c4acc9d8e : [[org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(short,short):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(char,char):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(float,float):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(long,long):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(int,int):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(double,double):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[]):UPD,DROP], [org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[]):UPD,DROP]]
2bc2ffde1f4752e7a8c7ea0a51c559faae194786 : []
35f1cc00274122c0274b522d0b544a06faaba931 : []
98817e88f04cc6757c42ae52d653b63cb85af486 : []
3f0f42f7da903de72dc76bd6b90fdbc98f0d0c40 : []
83775c432382b9c0367362491d0dc515bf0e131c : []
a498b87dbcaa0a61c6088d7156258a3cb06638cb : []
34558845e3777afdc1bf90ebbcb2017ca17aea86 : []
59985b43f0868d9a4a588d9ca1debd03108f8cd9 : []
8ea1aa1e7cc427c28a89878fd2dfcb110c992b20 : []
d4c7f63054e584b69024664bc2f221faf9863519 : []
76cc69c3f08cbf31efd56f631504496307ab7a5c : [[org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.validTimeZoneChars : String:DEL,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TimeZoneStrategy(Locale):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.VALID_TZ : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder):UPD,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.GMT_OPTION : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TZ_DATABASE : String:INS,DROP], [org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE : String:INS,DROP]]
]
[OUTPUT] Results:
DROP: 76cc69c3 : LANG-1109 - Number percentage formatting with fractional digits
DROP: d4c7f630 : Use annotation based checking for expected exceptions
DROP: 8ea1aa1e : Remove another necessary assignment
DROP: 59985b43 : Remove unnecessary assignment
DROP: 34558845 : Format source code
DROP: a498b87d : Build requires at least Java 6 - check for Java version can be removed
DROP: 83775c43 : Test fields can be private
DROP: 3f0f42f7 : Drop unnecessary empty lines
DROP: 98817e88 : Use BeforeClass hook to set up test date
DROP: 35f1cc00 : PMD: Useless parentheses
DROP: 2bc2ffde : PMD: Useless parentheses
DROP: 11491d35 : Use not bool instead of bool == false
DROP: 9072a761 : PMD: Useless parentheses
DROP: f525bc3c : Use not String.contains instead of indexOf == -1
DROP: 2fefdc7d : Scope of local variabel shift can be narrower
DROP: d3252a5c : PMD: Useless parentheses
DROP: c4c03a33 : PMD: Useless parentheses
DROP: 9106f4ed : Define Findbugs exlucde for internally used map key class
DROP: 173c162a : Simplify isNotEmpty by reusing isEmpty
TEST: ef51b068 : Simplify isEmpty be reusing getLength
DROP: 319588b4 : Simplify isSameLenght implementations by reusing getLength. This also fixes a lot of the useless paranthesis warnings generated by PMD.
DROP: 921ee586 : Document required java version for every release
DROP: 3f418c22 : Use date schema from changes.xml on release history page
DROP: 1c532efd : Add next release to changes.xml
DROP: cdbf4758 : Post release clean up: bump version number, document release date, add release to doap file
DROP: 0d5d6669 : Add entry for the upcoming 3.4 release to the release history page
DROP: e83123d1 : Fix copy past error
DROP: 09c42e7d : LANG-821: Support OS X versions in SystemUtils. This also fixes #59 from github. Thanks to Timo Kockert.
DROP: 9c7b0fb8 : LANG-794: SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. This also fixes #60 from github. Thanks to Timo Kockert.
DROP: 8c84cfda : The latest release is 3.3.2
DROP: 6039dd31 : Fix ant build
DROP: 9e575c4d : Document change of constant in DurationUtils as suggested by Oliver Heger.
DROP: 79aceed0 : Add LANG-1104 to release notes
DROP: 06d72459 : LANG-1104 - FastDateParserTest.testParses fails in TimeZone America/Sao_Paulo
DROP: 56462a1e : maven-checkstyle-plugin 2.14 -> 2.15.
DROP: 3548f0ab : Update site for release 3.4
DROP: dfaa656f : PMD: Useless parentheses.
DROP: bb01292e : PMD: Avoid unused private fields such as 'ESCAPED_QUOTE'
DROP: 3ab0bc35 : Fix typo
DROP: f718ec16 : PMD: Overriding method merely calls super
DROP: e29f33c3 : FindBugs: Load of known null value.
DROP: 346aae3b : Make checkstyle happy: add missing JavaDoc
DROP: 4fdc606c : Update RELEASE-NOTES for release 3.4
DROP: 11279f7b : Update download page in preparation for 3.4 release
DROP: fccd59e7 : Change test back to printing to std out, since continuum seems to be running on HAL-9000
DROP: 3225ba64 : LANG-1103: Add SystemUtils.IS_JAVA_1_9
DROP: 11c0df1d : LANG-1102: Make logic for comparing OS versions in SystemUtils smarter
DROP: 1dc65ff9 : Reuse isOsNameMatch
DROP: 2b7e1959 : This test should fail instead of writing to std out so that we can add missing OS
DROP: 098395ea : Dummy commit to close github issue, which has been fixed in r1669520. This fixes #56 from github.
DROP: 2f62425c : Further optimization of LANG-935: - Avoid toString of the replacement sequence by doing it once. - Avoid calculating the maximum when not needed. - Fixup comment for greedy algorithm
DROP: a211ef28 : Better JavaDoc for LANG-1093: Add ClassUtils.getAbbreviatedName. This fixes #57 from github. Thanks to Fabian Lange.
DROP: c8e96c0c : LANG-1091: Shutdown thread pools in test cases. This fixes #58 from github. Thanks to Fabian Lange.
DROP: 0b7ef7f5 : update changes.xml to set proper issue number for previously committed work
DROP: a74ed8ca : Dummy commit to close github issue. This fixes #35 from github.
DROP: aeaa333c : Add missing issues to changes.xml
DROP: 10e18ae9 : LANG-1100: Avoid memory allocation when using date formating to StringBuffer
DROP: 8bc91a95 : replace tabs with spaces
DROP: bbfa8eb7 : LANG-1101 FastDateParser and FastDatePrinter support 'X' format
DROP: 7bb99bcb : LANG-935: Possible performance improvement on string escape functions. Thanks to Fabian Lange and Thomas Neidhart.
DROP: bf6ee5c5 : LANG-948: Exception while using ExtendedMessageFormat and escaping braces. This fixes #19 from github. Thanks to Andrey Khobnya.
DROP: cbeb45b2 : Kudos to the people how care about Commons Lang
DROP: 3328387a : LANG-990: Avoid String allocation in StrBuilder.append(CharSequence). This fixes #51 from github. Thanks to Mikhail Mazurskiy and Fabian Lange.
DROP: 1181552e : Correct change types
DROP: adebbdc7 : LANG-1098: Update maven-checkstyle-plugin to 2.14. This fixes #55 from github. Thanks to Michał Kordas.
DROP: d6f59c37 : LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Michał Kordas.
DROP: 08a854a4 : LANG-1096: Update maven-pmd-plugin to 3.4. This fixes #53 from github. Thanks to Michał Kordas.
DROP: bf3e77d8 : LANG-1095: Update maven-antrun-plugin to 1.8. This fixes #52 from github. Thanks to Michał Kordas
DROP: 4556cc57 : Add missing AL header
DROP: 442e8c27 : Extract formatting tests of time zones into parameterized test
DROP: 04c8de23 : No need to exclude the current time zone from testing
DROP: 8aa1b44a : LANG-1092: Wrong formating of time zones with daylight saving time in FastDatePrinter
DROP: 1f75a8f7 : LANG-877: Performance improvements for StringEscapeUtils. This fixes #49 from github. Thanks to Fabian Lange.
DROP: a234f033 : Fix JavaDoc link
DROP: f29eb8e7 : Use annotation based testing for expected exceptions
DROP: d38919fc : LANG-1093: Add ClassUtils.getAbbreviatedName(). This fixes #48 from github. Thanks to Fabian Lange.
DROP: ce7f4ed0 : LANG-1090 FastDateParser does not set error indication in ParsePosition
DROP: 8db46b1d : Javadoc
DROP: e1244869 : Simplify
DROP: 3ec99c1f : Add AL header (props joerg)
DROP: 7c8443f6 : LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat
DROP: 6ec90c45 : Docs
DROP: b321bde0 : Generics
DROP: fb6a62ca : Missed property
DROP: 4d228ddf : Comment
DROP: 2367948a : LANG-1061 FastDateParser error - timezones not handled correctly
DROP: 45a64670 : LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.
DROP: 61836183 : Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.
DROP: 4975b890 : CGI must be svn:executable *
DROP: ed4d262e : Update to latest parent pom
DROP: bdb5d972 : LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.
DROP: ffdc4272 : Fix up Findbugs version so it works with Java 6
DROP: 813e18ff : Checkstyle: Add missing JavaDoc
DROP: 4792f854 : Checkstyle: Add missing JavaDoc
DROP: 425d0577 : Make JavaDoc tool happy by adding missing @return tag
DROP: 58320be2 : Add some JavaDocs
DROP: 6b90fe3a : Add missing license header
DROP: d8c65c41 : Add Jonathan Baker to the list of contributors
DROP: ffc38b1f : LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.
DROP: 3181b407 : Add an additional test for LANG-1055
DROP: 63f1d6b8 : LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently. This fixes #43 from github. Thanks to Jonathan Baker.
DROP: cc991fea : Add since tag to new constructor of DiffBuilder
DROP: 38ed1a07 : LANG-1082: Add option to disable the objectsTriviallyEqual test in DiffBuilder. This fixes #44 from github. Thanks to Jonathan Baker.
DROP: 6eac3468 : LANG-1083: Add (T) casts to get unit tests to pass in old JDK. This fixes #42 from github. Thanks to Jonathan Baker.
DROP: 89c85192 : Update copyright year
DROP: 9af6c5e0 : Use README.md and CONTRIBUTING.md generated by commons build plugin
DROP: 51607308 : Add test for merging toString with super toString
DROP: d903279e : Remove assertions in error cases. They won't be executed.
DROP: 42728e8e : Test against static value
DROP: 2515b3eb : Format source code
DROP: 8d9662e0 : JsonToStringStyle doesn't use line breaks. Change JavaDoc to reflect this.
COMP: c4ddbe64 : LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. This fixes #12 and #26 from github. Thanks to Thiago Andrade.
COMP: c87380f0 : LANG-1080: add NoClassNameToStringStyle implementation of ToStringStyle. This closes #40 from github. Thanks to Innokenty Shuvalov.
DROP: e22e0669 : Revert to using cobertura. The Jacoco instrumentation will add fields to all classes. This in turn breaks the tests for FieldUtils.getAllFields(Class).
DROP: 2f97b435 : Don't redefine plugin default values
DROP: 00f00cce : Need to set MaxPermSize as well or the site build will fail with OutOfMemoryError
DROP: 867d318f : Update JavaNCSS plugin to latest version
DROP: e4bcd50d : Add jacoco file to activate report via parent pom (forgot that in last commit)
DROP: 517b4304 : Use jacoco via parent pom configuration file instead of cobertura (which takes forever to run)
HUNK: c5332828 : LANG-1071: Fix wrong examples in JavaDoc of StringUtils.replaceEachRepeatedly(...), StringUtils.replaceEach(...). Thanks to Arno Noordover.
DROP: 5cb1ae60 : Add examples for containsAny(CharSequence, CharSequence...)
TEST: a169e866 : Use enhanced for loop instead of indexed based iteration
TEST: 9e26c7b6 : LANG-883: Add StringUtils.containsAny(CharSequence, CharSequence...) method. Thanks to Daniel Stewart.
DROP: 23d55b0b : Can't link to private inner classes, use public field instead
DROP: 5f61aa07 : Update to latest parent pom
DROP: 39022255 : Add another assertion documention the current behavior of StringUtils.join
HUNK: 4a2cc4f5 : LANG-1073 Read wrong component type of array in add in ArrayUtils
HUNK: e5a3039f : LANG-1077 StringUtils.ordinalIndexOf("aaaaaa", "aa", 2) != 3 in StringUtils
DROP: 05763470 : clarify behavior of #isNumber() with blanks
DROP: d4cf0864 : Typo
DROP: a25d6d80 : Update to latest junit release
HUNK: 0162032a : LANG-1072 Duplicated "0x" check in createBigInteger in NumberUtils
DROP: 21201210 : maven-pmd-plugin 3.2 -> 3.3.
HUNK: 2afdf4d0 : Javadoc fix for LANG-1064.
HUNK: 635e41ea : LANG-1052: Multiline recursive to string style. This fixes #34 from github. Thanks to Jan Matèrne.
DROP: 85c18d0e : Update to latest commons parent pom
DROP: 0661ab5c : No need to explicitly extend Object.
HUNK: ef26a667 : LANG-536 - Add isSorted() to ArrayUtils. Patch supplied by James Sawle. Closes #32 in GitHub.
DROP: 09cee6a4 : Use isEmpty() where possible. Thanks to James Sawle for pointing this out.
DROP: b199af8d : LANG-1043 - isAllUpperCase should only check Alpha characters Document and test additional cases
DROP: 0d3d3197 : Javadocs.
DROP: ab570625 : Update maven-checkstyle-plugin from 2.9.1 to 2.13.
DROP: a1135110 : [LANG-1044] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object, String)</action> [LANG-1045] Add method org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object, String)</action>
DROP: 0648a309 : Javadoc examples looked better wrapped in {@code} tags.
HUNK: 4477ae69 : LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering. This fixes #30 from github. Thanks to Alexandre Bartel.
HUNK: aa3f1749 : Remove tab characters
HUNK: 7406d02e : Fix for LANG-827: CompareToBuilder's doc doesn't specify precedence of fields it uses in performing comparisons
HUNK: 22b6781a : Added missing support for ISO 8601 parsing and printing using "ZZ" pattern (code now matches Javadoc). Addresses LANG-1000.
DROP: 2aae22de : Removed redundant static modifier (thanks, Matt).
DROP: 52e854e3 : Replaced private integer constants with private static enum.
DROP: bc91bedd : Made it clear that the fields of the object form the hash code (LANG-1039). Pulled magic values into constants.
DROP: bdb1a684 : Added Javadoc warnings related to LANG-796.
HUNK: 2154d5fb : Fix for LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear
DROP: 1e6c8c14 : Simplify statement by calling substring on str directly. StringUtils.startsWith makes sure that str is not  null at this point. Improvement suggested by sebb.
DROP: 161ef971 : Add fixme regarding a JDK 1.3 workaround
DROP: 01a950e3 : Better JavaDoc formatting
DROP: fceafc5d : Fix typo
HUNK: bc8e2380 : LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek. This closes #27 from github.
DROP: 092d6da5 : Add missing fail calls. Errors would be silently ignored if those calls are missing.
DROP: 84c43fee : Update plugins to current versions.
HUNK: 1384457a : [LANG-1033] Add StringUtils.countMatches(CharSequence, char)
DROP: a67075b7 : Update to latest parent pom
DROP: 9b2357cf : Fix JavaDoc problem
HUNK: 5ae1b023 : Document the changes from LANG-1027
DROP: 3fa5334a : LANG-1027 don't fail if java version is unknown, lang is too much used to make apps and libs failling cause of an unknown java version.
HUNK: de67dec0 : LANG-1021: Provide methods to retrieve all fields/methods annotated with a specific type. Thanks to Alexander Müller.
DROP: 03aa1e70 : Use the more modern, compact, and flexible Javadoc "{@code ...}" instead of the HTML "<tt>...</tt>".
DROP: 88dd10fa : Use the more modern, compact, and flexible Javadoc "{@code ...}" instead of the HTML "<tt>...</tt>".
HUNK: b1caa21b : LANG-1026: Bring static method references in StringUtils to consistent style. Thanks to Alex Yursha
DROP: 967fdd06 : LANG-1024: Fix JavaDoc errors in test code
HUNK: 6240a05c : LANG-1016: NumberUtils#isParsable method(s). Apply Juan PabloSantos Rodríguez patch for handling negative numbers.
DROP: 673dbc57 : Tiddy up JavaDoc
HUNK: 7022c194 : LANG-1016: NumberUtils#isParsable method(s). Thanks to Juan Pablo Santos Rodríguez.
DROP: 4fcfad95 : Formating.
DROP: c8e024f8 : Formating.
DROP: 248fd216 : Restore previous behavior that allows function results (arrays of booleans) to be modified.
DROP: 71966110 : Statement unnecessarily nested within else clause.
DROP: dd74cf1d : Statement unnecessarily nested within else clause.
DROP: 8a95db3d : Format to 120 line length.
DROP: 60b79a90 : Statement unnecessarily nested within else clause.
DROP: 0ff84935 : Statement unnecessarily nested within else clause.
DROP: 7b33ab10 : Format to 120 line length.
DROP: cf832560 : Format to 120 line length.
DROP: 2e9a359f : Simplify using ternary expressions.
DROP: c9e3793a : Refactor commons constants (no need to generate new arrays on every call).
DROP: e769c189 : Simplify using ternary expressions instead of nested if-elses.
DROP: 082eb39c : Format to 120 line length.
DROP: c987d163 : Simplify using ternary expressions instead of nested if-elses.
DROP: f7e5f2c8 : Statement unnecessarily nested within else clause.
DROP: 299ea79d : Statement unnecessarily nested within else clause.
DROP: 93b1808e : Statement unnecessarily nested within else clause.
DROP: 8e757f11 : Statement unnecessarily nested within else clause.
DROP: b52a49ab : Statement unnecessarily nested within else clause.
DROP: 38334883 : Statement unnecessarily nested within else clause.
DROP: 0ef74715 : Statement unnecessarily nested within else clause.
DROP: e3ee5323 : Statement unnecessarily nested within else clause.
DROP: 5a1101da : Remove unused imports.
DROP: 96c30e24 : Use final consistently. 
DROP: ba8c6f6d : Add some missing tests.
HUNK: d9658656 : LANG-1017: Use non-ASCII digits in Javadoc examples for StringUtils.isNumeric. Thanks to Christoph Schneegans.
DROP: 8f9a427d : Fix broken JavaDoc
DROP: 68a6fd61 : TypeUtils wildcard fixes
DROP: 6f688e40 : add some failing tests with wildcards
DROP: 9a16b763 : Using Validate where possible in time package.
DROP: 5a28357b : Using Validate where possible in math package.
DROP: a2c356d7 : Using Validate where possible in concurrent package.
DROP: 10641f9a : Using Validate where possible in builder package.
HUNK: 37283444 : LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array input parameters to varargs. This also closes #23 from github. Thanks to Thiago Andrade.
DROP: 10f136bb : Use the term distance in documentation of getFuzzyDistance
DROP: a2f44d03 : Make checkstyle happy
HUNK: b78295b4 : LANG-999: Add fuzzy String matching logic to StringUtils. This also closes #20 from github. Thanks to Ben Ripkens.
DROP: 287aba5b : Tab police
DROP: d16c62ae : Clarify that 0.d is decimal, not octal
DROP: 21cbe955 : Explained treatment of leading zeroes in isNumber() method Javadoc.
DROP: 39a5b774 : Corrected Javadoc example.
DROP: daf4b4f9 : Further tidying of Javadoc.
DROP: 01fe9183 : Correct wrong documentation regarding extensibility of ImmutablePair and ImmutableTriple. This closes #13 from github.
DROP: bd7a8d50 : Dummy commit which closes #22 from github
DROP: 9376d1eb : Dummy commit which closes #21 from github
DROP: da147fcb : Add Thiago Andrade to the list of contributors for his contributions via github.
DROP: 4b28af1e : Fix typo
HUNK: c3d65461 : LANG-1006: Add wrap (with String or char) to StringUtils. This closes PR #21 from github. Thanks to Thiago Andrade.
DROP: 80f19882 : Point potential contributors to the TagList report
DROP: cef1ca2f : Use finer grained TagList configuration proposed by Bernd Eckenfels for the csv components
HUNK: 7d6e0bec : LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to match #formatDurationHMS. Thanks to Michael Osipov.
HUNK: d910918f : LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. This also fixes pull request #22 from github. Thanks to Thiago Andrade.
HUNK: 75fbc009 : LANG-731: Better Javadoc for BitField class
DROP: d44f573f : Add Michael Osipov to the list of contributors for his contributions to DurationFormatUtils
HUNK: fd54d42f : LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not correspond to Javadoc and vice versa. Thanks to Michael Osipov
DROP: 00dc479f : Remove tab characters
DROP: 2f0beab7 : Remove more debug output (which is never actually written out)
DROP: 98f76f4c : Remove debug output from test
HUNK: 4b74c385 : LANG-1003: DurationFormatUtils are not able to handle negative duration/periods. Document new behavior for negative inputs.
DROP: 24863005 : Removed unnecessary multiplication by one.
HUNK: 64ef8a80 : LANG-1003: DurationFormatUtils are not able to handle negative durations/periods. Reported by Michael Osipov.
DROP: 358f139d : Organize imports, don't use wildcard imports
DROP: 548e5c42 : Use org.junit.Assert.assertArrayEquals
DROP: fe354beb : Remove commented out test code
HUNK: b4b51a8f : <action issue="LANG-1001" type="fix" dev="ggregory" due-to="Michael Osipov">ISO 8601 misspelled throughout the Javadocs</action>
HUNK: 61259510 : LANG-993: Add zero copy write method to StrBuilder; LANG-994: Add zero copy read method to StrBuilder. Thanks to Mikhail Mazursky.
DROP: d13a4026 : Remove keyValues map  per sebb's suggestion
DROP: d9bd12dc : Rename TextStrategy to CaseInsensitiveTextStrategy per sebb's suggestion
HUNK: 454fd1ea : Add another missing ticket to changes.xml
HUNK: b4647110 : Add missing bug fix to changes.xml
DROP: 804e5f8c : Merge qualifiers
DROP: f4b7d62a : LANG-998 - Javadoc is not clear on preferred pattern to instantiate FastDateParser / FastDatePrinter
DROP: 649a089d : LANG-1088 - toLowerCase should use locale, additional unit tests for case-insensitive matching
DROP: 3b2de24a : LANG-1088 - FastDateParser should be case insensitive
DROP: e288d39b : Use enhanced for loop
DROP: 5d9141e2 : Added Javadoc to clear checkstyle error
HUNK: fbb0f7f8 : LANG-995: Fix bug with stripping spaces on last line in WordUtils.wrap(). This fixes #18 from github. Thanks to Andrey Khobnya
DROP: d99f5817 : Clean up Javadocs. You do not need to refer to classes in java.lang with a FQCN.
TEST: 3efd6ccd : Refactor magic number into constant.
DROP: 4eb70a5f : Statement unnecessarily nested within else clause.
DROP: 70d9e8b2 : Statement unnecessarily nested within else clause.
HUNK: 39168bb7 : Statement unnecessarily nested within else clause.
TEST: 3e333041 : Statement unnecessarily nested within else clause.
HUNK: 6b438fe9 : Add next version to changes.xml
DROP: 8a528639 : Document 3.3.2 in doap
DROP: 5bcbf2e8 : Update README.md after release 3.3.2
HUNK: d72d2b08 : Document 3.3.2 release date
DROP: 01056403 : Bump version after release of 3.3.2

[STATS] ************** Stats **************
[STATS] total.time : 12.554
[STATS] main.algo : 4.333
[STATS] insert.edge : 0.0
[STATS] hunk.deps.time : 4.711
[STATS] extract.time : 0.0
[STATS] call.graph.time : 0.758
[STATS] tests.time : 2.518
[STATS] comp.count : 2
[STATS] hunk.count : 37
[STATS] test.count : 5
[STATS] hunk.deps.set : 37
[STATS] drop.count : 218
[STATS] ast.line.count : 478
[STATS] test.deps : 28
[STATS] comp.deps : 82
[STATS] reduction.hunk : 83.20610687022901
[STATS] reduction.rate : 97.32824427480917
[STATS] ***********************************
