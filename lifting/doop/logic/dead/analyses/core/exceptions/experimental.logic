#ifdef EXCEPTIONS_CS
ThrowPointsTo(?hctx, ?heap, ?ctx, ?method) <-
   Throw(?ref, ?var),
   VarPointsTo(?hctx, ?heap, ?ctx, ?var),
#else
ThrowPointsTo(?hctx, ?heap, ?method) <-
   Throw(?ref, ?var),
   VarPointsTo(?hctx, ?heap, _, ?var),
#endif
#ifdef EXCEPTIONS_FILTER
   HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
   !(ExceptionHandler:At[?ref, ?heaptype]=_),
#else
   !ExistsExceptionHandler(?ref, ?heaptype),
#endif
#endif
   Instruction:Method[?ref] = ?method.

#ifdef EXCEPTIONS_CS
ThrowPointsTo(?hctx, ?heap, ?callerCtx, ?callerMethod) <-
   CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod),
   ThrowPointsTo(?hctx, ?heap, ?calleeCtx, ?tomethod),
#else
ThrowPointsTo(?hctx, ?heap, ?callerMethod) <-
   CallGraphEdge(_, ?invocation, _, ?tomethod),
   ThrowPointsTo(?hctx, ?heap, ?tomethod),
#endif
#ifdef EXCEPTIONS_FILTER
   HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
   !(ExceptionHandler:At[?invocation, ?heaptype]=_),
#else
   !ExistsExceptionHandler(?invocation, ?heaptype),
#endif
#endif
   Instruction:Method[?invocation] = ?callerMethod.

VarPointsTo(?hctx, ?heap, ?ctx, ?param) <-
   Throw(?ref, ?var),
   VarPointsTo(?hctx, ?heap, ?ctx, ?var),
   HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
   ExceptionHandler:At[?ref, ?heaptype] = ?handler,
#else
   ExceptionHandler:At(?handler, ?ref, ?heaptype),
#endif
   ExceptionHandler:FormalParam[?handler] = ?param.

VarPointsTo(?hctx, ?heap, ?callerCtx, ?param) <-
#ifdef EXCEPTIONS_CS
   CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod),
   ThrowPointsTo(?hctx, ?heap, ?calleeCtx, ?tomethod),
#else
   CallGraphEdge(?callerCtx, ?invocation, _, ?tomethod),
   ThrowPointsTo(?hctx, ?heap, ?tomethod),
#endif
   HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
   ExceptionHandler:At[?invocation, ?heaptype] = ?handler,
#else
   ExceptionHandler:At(?handler, ?invocation, ?heaptype),
#endif
   ExceptionHandler:FormalParam[?handler] = ?param.

#if defined(EXCEPTIONS_FILTER) && !defined(EXCEPTIONS_ORDER)
ExistsExceptionHandler(?ref, ?type) <-
   ExceptionHandler:At(_, ?ref, ?type).
#endif


#ifdef EXCEPTIONS_ORDER
#include "experimental-handler-order.logic"
#else
#include "experimental-handler-no-order.logic"
#endif
