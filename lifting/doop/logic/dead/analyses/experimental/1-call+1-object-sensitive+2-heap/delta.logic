#include "macros.logic"
#include "../../../core/core-delta.logic"

/**
 * Special calling contexts
 *
 * Note: the type is necessary (java.lang.String), but never used. It
 * could be anything. It also needs to be an existing type, otherwise
 * the sanity checks will barf.
 */
PlusHeapAllocation(?ctx, "<<initial-context>>", "java.lang.String").
PlusHeapAllocation(?ctx, "<<jvm-startup>>", "java.lang.String").
PlusHeapAllocation(?ctx, "<<class-initialization>>", "java.lang.String").
PlusHeapAllocation(?ctx, "<<finalizer-register>>", "java.lang.String").
PlusHeapAllocation(?ctx, "<<immutable>>", "java.lang.String").

PlusMethodInvocation(?ctx, "<<initial-context2>>").
PlusMethodInvocation(?ctx, "<<jvm-startup2>>").
PlusMethodInvocation(?ctx, "<<class-initialization2>>").

/**
 * Special objects
 */
+MySystemThreadGroup(?ctx1, ?ctx2, ?alloc),
  PlusHeapAllocation(?ctx1, "<<jvm-startup>>", "java.lang.String"),
  PlusMethodInvocation(?ctx2, "<<jvm-startup2>>"),
  PlusHeapAllocation(?alloc, "<<system-thread-group>>", "java.lang.ThreadGroup").

+MyMainThreadGroup(?ctx1, ?ctx2, ?alloc),
  PlusHeapAllocation(?ctx1, "<<jvm-startup>>", "java.lang.String"),
  PlusMethodInvocation(?ctx2, "<<jvm-startup2>>"),
  PlusHeapAllocation(?alloc, "<<main-thread-group>>", "java.lang.ThreadGroup").

+MyMainThread(?ctx1, ?ctx2, ?alloc),
  PlusHeapAllocation(?ctx1, "<<jvm-startup>>", "java.lang.String"),
  PlusMethodInvocation(?ctx2, "<<jvm-startup2>>"),
  PlusHeapAllocation(?alloc, "<<main-thread>>", "java.lang.Thread").
